Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ATTRIBUTES
    CHAR
    CONST_CHAR
    DO
    ELSEIF
    EQUAL_COMPARE
    FUNCTION
    GREATER_EQUAL
    LEFT_BRACKET
    LESS_EQUAL
    MAIN
    METHODS
    NEGATION
    NUMBER
    OR
    PERIOD
    RIGHT_BRACKET
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON vars class bloque
Rule 2     vars -> VAR varid COLON tipo SEMICOLON
Rule 3     vars -> empty
Rule 4     varid -> ID
Rule 5     varid -> ID COMMA ID
Rule 6     varid -> empty
Rule 7     tipo -> INT
Rule 8     tipo -> FLOAT
Rule 9     bloque -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB
Rule 10    estatutoRecursivo -> estatuto estatutoRecursivo
Rule 11    estatutoRecursivo -> empty
Rule 12    estatuto -> asignacion
Rule 13    estatuto -> condicion
Rule 14    estatuto -> write
Rule 15    estatuto -> while
Rule 16    estatuto -> read
Rule 17    asignacion -> ID EQUAL_ASSIGN expresion SEMICOLON
Rule 18    condicion -> IF LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque
Rule 19    condicion -> condicion ELSE bloque
Rule 20    read -> READ VAR SEMICOLON
Rule 21    while -> WHILE LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque
Rule 22    expresion -> exp LESS_THAN exp
Rule 23    expresion -> exp GREATER_THAN exp
Rule 24    expresion -> exp NOT_EQUAL exp
Rule 25    exp -> termino PLUS termino
Rule 26    exp -> termino MINUS termino
Rule 27    termino -> factor MULTIPLICATION factor
Rule 28    termino -> factor DIVISION factor
Rule 29    factor -> LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS
Rule 30    factor -> PLUS
Rule 31    factor -> MINUS
Rule 32    factor -> varcte
Rule 33    varcte -> ID
Rule 34    varcte -> CONST_INT
Rule 35    varcte -> CONST_FLOAT
Rule 36    write -> WRITE LEFT_PARENTHESIS inside RIGHT_PARENTHESIS
Rule 37    inside -> inside more inside
Rule 38    inside -> ID
Rule 39    inside -> string
Rule 40    inside -> empty
Rule 41    more -> MORE
Rule 42    more -> empty
Rule 43    string -> DOUBLE_QUOTES CONST_STRING DOUBLE_QUOTES
Rule 44    class -> CLASS LEFT_CURLYB vars method RIGHT_CURLYB
Rule 45    method -> DEF LEFT_PARENTHESIS varid RIGHT_PARENTHESIS bloquemetodo
Rule 46    bloquemetodo -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB RETURN ID SEMICOLON
Rule 47    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ATTRIBUTES           : 
CHAR                 : 
CLASS                : 44
COLON                : 2
COMMA                : 5
CONST_CHAR           : 
CONST_FLOAT          : 35
CONST_INT            : 34
CONST_STRING         : 43
DEF                  : 45
DIVISION             : 28
DO                   : 
DOUBLE_QUOTES        : 43 43
ELSE                 : 19
ELSEIF               : 
EQUAL_ASSIGN         : 17
EQUAL_COMPARE        : 
FLOAT                : 8
FUNCTION             : 
GREATER_EQUAL        : 
GREATER_THAN         : 23
ID                   : 1 4 5 5 17 33 38 46
IF                   : 18
INT                  : 7
LEFT_BRACKET         : 
LEFT_CURLYB          : 9 44 46
LEFT_PARENTHESIS     : 18 21 29 36 45
LESS_EQUAL           : 
LESS_THAN            : 22
MAIN                 : 
METHODS              : 
MINUS                : 26 31
MORE                 : 41
MULTIPLICATION       : 27
NEGATION             : 
NOT_EQUAL            : 24
NUMBER               : 
OR                   : 
PERIOD               : 
PLUS                 : 25 30
PROGRAM              : 1
READ                 : 20
RETURN               : 46
RIGHT_BRACKET        : 
RIGHT_CURLYB         : 9 44 46
RIGHT_PARENTHESIS    : 18 21 29 36 45
SEMICOLON            : 1 2 17 20 46
VAR                  : 2 20
VOID                 : 
WHILE                : 21
WRITE                : 36
error                : 

Nonterminals, with rules where they appear

asignacion           : 12
bloque               : 1 18 19 21
bloquemetodo         : 45
class                : 1
condicion            : 13 19
empty                : 3 6 11 40 42
estatuto             : 10
estatutoRecursivo    : 9 10 46
exp                  : 22 22 23 23 24 24
expresion            : 17 18 21 29
factor               : 27 27 28 28
inside               : 36 37 37
method               : 44
more                 : 37
program              : 0
read                 : 16
string               : 39
termino              : 25 25 26 26
tipo                 : 2
varcte               : 32
varid                : 2 45
vars                 : 1 44
while                : 15
write                : 14

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON vars class bloque

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON vars class bloque

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON vars class bloque

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . vars class bloque
    (2) vars -> . VAR varid COLON tipo SEMICOLON
    (3) vars -> . empty
    (47) empty -> .

    VAR             shift and go to state 6
    CLASS           reduce using rule 47 (empty -> .)

    vars                           shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID SEMICOLON vars . class bloque
    (44) class -> . CLASS LEFT_CURLYB vars method RIGHT_CURLYB

    CLASS           shift and go to state 9

    class                          shift and go to state 8

state 6

    (2) vars -> VAR . varid COLON tipo SEMICOLON
    (4) varid -> . ID
    (5) varid -> . ID COMMA ID
    (6) varid -> . empty
    (47) empty -> .

    ID              shift and go to state 11
    COLON           reduce using rule 47 (empty -> .)

    varid                          shift and go to state 10
    empty                          shift and go to state 12

state 7

    (3) vars -> empty .

    CLASS           reduce using rule 3 (vars -> empty .)
    DEF             reduce using rule 3 (vars -> empty .)


state 8

    (1) program -> PROGRAM ID SEMICOLON vars class . bloque
    (9) bloque -> . LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB

    LEFT_CURLYB     shift and go to state 14

    bloque                         shift and go to state 13

state 9

    (44) class -> CLASS . LEFT_CURLYB vars method RIGHT_CURLYB

    LEFT_CURLYB     shift and go to state 15


state 10

    (2) vars -> VAR varid . COLON tipo SEMICOLON

    COLON           shift and go to state 16


state 11

    (4) varid -> ID .
    (5) varid -> ID . COMMA ID

    COLON           reduce using rule 4 (varid -> ID .)
    RIGHT_PARENTHESIS reduce using rule 4 (varid -> ID .)
    COMMA           shift and go to state 17


state 12

    (6) varid -> empty .

    COLON           reduce using rule 6 (varid -> empty .)
    RIGHT_PARENTHESIS reduce using rule 6 (varid -> empty .)


state 13

    (1) program -> PROGRAM ID SEMICOLON vars class bloque .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON vars class bloque .)


state 14

    (9) bloque -> LEFT_CURLYB . estatutoRecursivo RIGHT_CURLYB
    (10) estatutoRecursivo -> . estatuto estatutoRecursivo
    (11) estatutoRecursivo -> . empty
    (12) estatuto -> . asignacion
    (13) estatuto -> . condicion
    (14) estatuto -> . write
    (15) estatuto -> . while
    (16) estatuto -> . read
    (47) empty -> .
    (17) asignacion -> . ID EQUAL_ASSIGN expresion SEMICOLON
    (18) condicion -> . IF LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque
    (19) condicion -> . condicion ELSE bloque
    (36) write -> . WRITE LEFT_PARENTHESIS inside RIGHT_PARENTHESIS
    (21) while -> . WHILE LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque
    (20) read -> . READ VAR SEMICOLON

    RIGHT_CURLYB    reduce using rule 47 (empty -> .)
    ID              shift and go to state 26
    IF              shift and go to state 27
    WRITE           shift and go to state 28
    WHILE           shift and go to state 29
    READ            shift and go to state 30

    estatutoRecursivo              shift and go to state 18
    estatuto                       shift and go to state 19
    empty                          shift and go to state 20
    asignacion                     shift and go to state 21
    condicion                      shift and go to state 22
    write                          shift and go to state 23
    while                          shift and go to state 24
    read                           shift and go to state 25

state 15

    (44) class -> CLASS LEFT_CURLYB . vars method RIGHT_CURLYB
    (2) vars -> . VAR varid COLON tipo SEMICOLON
    (3) vars -> . empty
    (47) empty -> .

    VAR             shift and go to state 6
    DEF             reduce using rule 47 (empty -> .)

    vars                           shift and go to state 31
    empty                          shift and go to state 7

state 16

    (2) vars -> VAR varid COLON . tipo SEMICOLON
    (7) tipo -> . INT
    (8) tipo -> . FLOAT

    INT             shift and go to state 33
    FLOAT           shift and go to state 34

    tipo                           shift and go to state 32

state 17

    (5) varid -> ID COMMA . ID

    ID              shift and go to state 35


state 18

    (9) bloque -> LEFT_CURLYB estatutoRecursivo . RIGHT_CURLYB

    RIGHT_CURLYB    shift and go to state 36


state 19

    (10) estatutoRecursivo -> estatuto . estatutoRecursivo
    (10) estatutoRecursivo -> . estatuto estatutoRecursivo
    (11) estatutoRecursivo -> . empty
    (12) estatuto -> . asignacion
    (13) estatuto -> . condicion
    (14) estatuto -> . write
    (15) estatuto -> . while
    (16) estatuto -> . read
    (47) empty -> .
    (17) asignacion -> . ID EQUAL_ASSIGN expresion SEMICOLON
    (18) condicion -> . IF LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque
    (19) condicion -> . condicion ELSE bloque
    (36) write -> . WRITE LEFT_PARENTHESIS inside RIGHT_PARENTHESIS
    (21) while -> . WHILE LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque
    (20) read -> . READ VAR SEMICOLON

    RIGHT_CURLYB    reduce using rule 47 (empty -> .)
    ID              shift and go to state 26
    IF              shift and go to state 27
    WRITE           shift and go to state 28
    WHILE           shift and go to state 29
    READ            shift and go to state 30

    estatuto                       shift and go to state 19
    estatutoRecursivo              shift and go to state 37
    empty                          shift and go to state 20
    asignacion                     shift and go to state 21
    condicion                      shift and go to state 22
    write                          shift and go to state 23
    while                          shift and go to state 24
    read                           shift and go to state 25

state 20

    (11) estatutoRecursivo -> empty .

    RIGHT_CURLYB    reduce using rule 11 (estatutoRecursivo -> empty .)


state 21

    (12) estatuto -> asignacion .

    ID              reduce using rule 12 (estatuto -> asignacion .)
    IF              reduce using rule 12 (estatuto -> asignacion .)
    WRITE           reduce using rule 12 (estatuto -> asignacion .)
    WHILE           reduce using rule 12 (estatuto -> asignacion .)
    READ            reduce using rule 12 (estatuto -> asignacion .)
    RIGHT_CURLYB    reduce using rule 12 (estatuto -> asignacion .)


state 22

    (13) estatuto -> condicion .
    (19) condicion -> condicion . ELSE bloque

    ID              reduce using rule 13 (estatuto -> condicion .)
    IF              reduce using rule 13 (estatuto -> condicion .)
    WRITE           reduce using rule 13 (estatuto -> condicion .)
    WHILE           reduce using rule 13 (estatuto -> condicion .)
    READ            reduce using rule 13 (estatuto -> condicion .)
    RIGHT_CURLYB    reduce using rule 13 (estatuto -> condicion .)
    ELSE            shift and go to state 38


state 23

    (14) estatuto -> write .

    ID              reduce using rule 14 (estatuto -> write .)
    IF              reduce using rule 14 (estatuto -> write .)
    WRITE           reduce using rule 14 (estatuto -> write .)
    WHILE           reduce using rule 14 (estatuto -> write .)
    READ            reduce using rule 14 (estatuto -> write .)
    RIGHT_CURLYB    reduce using rule 14 (estatuto -> write .)


state 24

    (15) estatuto -> while .

    ID              reduce using rule 15 (estatuto -> while .)
    IF              reduce using rule 15 (estatuto -> while .)
    WRITE           reduce using rule 15 (estatuto -> while .)
    WHILE           reduce using rule 15 (estatuto -> while .)
    READ            reduce using rule 15 (estatuto -> while .)
    RIGHT_CURLYB    reduce using rule 15 (estatuto -> while .)


state 25

    (16) estatuto -> read .

    ID              reduce using rule 16 (estatuto -> read .)
    IF              reduce using rule 16 (estatuto -> read .)
    WRITE           reduce using rule 16 (estatuto -> read .)
    WHILE           reduce using rule 16 (estatuto -> read .)
    READ            reduce using rule 16 (estatuto -> read .)
    RIGHT_CURLYB    reduce using rule 16 (estatuto -> read .)


state 26

    (17) asignacion -> ID . EQUAL_ASSIGN expresion SEMICOLON

    EQUAL_ASSIGN    shift and go to state 39


state 27

    (18) condicion -> IF . LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque

    LEFT_PARENTHESIS shift and go to state 40


state 28

    (36) write -> WRITE . LEFT_PARENTHESIS inside RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 41


state 29

    (21) while -> WHILE . LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque

    LEFT_PARENTHESIS shift and go to state 42


state 30

    (20) read -> READ . VAR SEMICOLON

    VAR             shift and go to state 43


state 31

    (44) class -> CLASS LEFT_CURLYB vars . method RIGHT_CURLYB
    (45) method -> . DEF LEFT_PARENTHESIS varid RIGHT_PARENTHESIS bloquemetodo

    DEF             shift and go to state 45

    method                         shift and go to state 44

state 32

    (2) vars -> VAR varid COLON tipo . SEMICOLON

    SEMICOLON       shift and go to state 46


state 33

    (7) tipo -> INT .

    SEMICOLON       reduce using rule 7 (tipo -> INT .)


state 34

    (8) tipo -> FLOAT .

    SEMICOLON       reduce using rule 8 (tipo -> FLOAT .)


state 35

    (5) varid -> ID COMMA ID .

    COLON           reduce using rule 5 (varid -> ID COMMA ID .)
    RIGHT_PARENTHESIS reduce using rule 5 (varid -> ID COMMA ID .)


state 36

    (9) bloque -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB .

    $end            reduce using rule 9 (bloque -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB .)
    ELSE            reduce using rule 9 (bloque -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB .)
    ID              reduce using rule 9 (bloque -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB .)
    IF              reduce using rule 9 (bloque -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB .)
    WRITE           reduce using rule 9 (bloque -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB .)
    WHILE           reduce using rule 9 (bloque -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB .)
    READ            reduce using rule 9 (bloque -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB .)
    RIGHT_CURLYB    reduce using rule 9 (bloque -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB .)


state 37

    (10) estatutoRecursivo -> estatuto estatutoRecursivo .

    RIGHT_CURLYB    reduce using rule 10 (estatutoRecursivo -> estatuto estatutoRecursivo .)


state 38

    (19) condicion -> condicion ELSE . bloque
    (9) bloque -> . LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB

    LEFT_CURLYB     shift and go to state 14

    bloque                         shift and go to state 47

state 39

    (17) asignacion -> ID EQUAL_ASSIGN . expresion SEMICOLON
    (22) expresion -> . exp LESS_THAN exp
    (23) expresion -> . exp GREATER_THAN exp
    (24) expresion -> . exp NOT_EQUAL exp
    (25) exp -> . termino PLUS termino
    (26) exp -> . termino MINUS termino
    (27) termino -> . factor MULTIPLICATION factor
    (28) termino -> . factor DIVISION factor
    (29) factor -> . LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS
    (30) factor -> . PLUS
    (31) factor -> . MINUS
    (32) factor -> . varcte
    (33) varcte -> . ID
    (34) varcte -> . CONST_INT
    (35) varcte -> . CONST_FLOAT

    LEFT_PARENTHESIS shift and go to state 55
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    ID              shift and go to state 48
    CONST_INT       shift and go to state 57
    CONST_FLOAT     shift and go to state 58

    expresion                      shift and go to state 49
    exp                            shift and go to state 50
    termino                        shift and go to state 51
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 40

    (18) condicion -> IF LEFT_PARENTHESIS . expresion RIGHT_PARENTHESIS bloque
    (22) expresion -> . exp LESS_THAN exp
    (23) expresion -> . exp GREATER_THAN exp
    (24) expresion -> . exp NOT_EQUAL exp
    (25) exp -> . termino PLUS termino
    (26) exp -> . termino MINUS termino
    (27) termino -> . factor MULTIPLICATION factor
    (28) termino -> . factor DIVISION factor
    (29) factor -> . LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS
    (30) factor -> . PLUS
    (31) factor -> . MINUS
    (32) factor -> . varcte
    (33) varcte -> . ID
    (34) varcte -> . CONST_INT
    (35) varcte -> . CONST_FLOAT

    LEFT_PARENTHESIS shift and go to state 55
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    ID              shift and go to state 48
    CONST_INT       shift and go to state 57
    CONST_FLOAT     shift and go to state 58

    expresion                      shift and go to state 59
    exp                            shift and go to state 50
    termino                        shift and go to state 51
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 41

    (36) write -> WRITE LEFT_PARENTHESIS . inside RIGHT_PARENTHESIS
    (37) inside -> . inside more inside
    (38) inside -> . ID
    (39) inside -> . string
    (40) inside -> . empty
    (43) string -> . DOUBLE_QUOTES CONST_STRING DOUBLE_QUOTES
    (47) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for DOUBLE_QUOTES resolved as shift
    ID              shift and go to state 61
    DOUBLE_QUOTES   shift and go to state 64
    RIGHT_PARENTHESIS reduce using rule 47 (empty -> .)
    MORE            reduce using rule 47 (empty -> .)

  ! ID              [ reduce using rule 47 (empty -> .) ]
  ! DOUBLE_QUOTES   [ reduce using rule 47 (empty -> .) ]

    inside                         shift and go to state 60
    string                         shift and go to state 62
    empty                          shift and go to state 63

state 42

    (21) while -> WHILE LEFT_PARENTHESIS . expresion RIGHT_PARENTHESIS bloque
    (22) expresion -> . exp LESS_THAN exp
    (23) expresion -> . exp GREATER_THAN exp
    (24) expresion -> . exp NOT_EQUAL exp
    (25) exp -> . termino PLUS termino
    (26) exp -> . termino MINUS termino
    (27) termino -> . factor MULTIPLICATION factor
    (28) termino -> . factor DIVISION factor
    (29) factor -> . LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS
    (30) factor -> . PLUS
    (31) factor -> . MINUS
    (32) factor -> . varcte
    (33) varcte -> . ID
    (34) varcte -> . CONST_INT
    (35) varcte -> . CONST_FLOAT

    LEFT_PARENTHESIS shift and go to state 55
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    ID              shift and go to state 48
    CONST_INT       shift and go to state 57
    CONST_FLOAT     shift and go to state 58

    expresion                      shift and go to state 65
    exp                            shift and go to state 50
    termino                        shift and go to state 51
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 43

    (20) read -> READ VAR . SEMICOLON

    SEMICOLON       shift and go to state 66


state 44

    (44) class -> CLASS LEFT_CURLYB vars method . RIGHT_CURLYB

    RIGHT_CURLYB    shift and go to state 67


state 45

    (45) method -> DEF . LEFT_PARENTHESIS varid RIGHT_PARENTHESIS bloquemetodo

    LEFT_PARENTHESIS shift and go to state 68


state 46

    (2) vars -> VAR varid COLON tipo SEMICOLON .

    CLASS           reduce using rule 2 (vars -> VAR varid COLON tipo SEMICOLON .)
    DEF             reduce using rule 2 (vars -> VAR varid COLON tipo SEMICOLON .)


state 47

    (19) condicion -> condicion ELSE bloque .

    ELSE            reduce using rule 19 (condicion -> condicion ELSE bloque .)
    ID              reduce using rule 19 (condicion -> condicion ELSE bloque .)
    IF              reduce using rule 19 (condicion -> condicion ELSE bloque .)
    WRITE           reduce using rule 19 (condicion -> condicion ELSE bloque .)
    WHILE           reduce using rule 19 (condicion -> condicion ELSE bloque .)
    READ            reduce using rule 19 (condicion -> condicion ELSE bloque .)
    RIGHT_CURLYB    reduce using rule 19 (condicion -> condicion ELSE bloque .)


state 48

    (33) varcte -> ID .

    MULTIPLICATION  reduce using rule 33 (varcte -> ID .)
    DIVISION        reduce using rule 33 (varcte -> ID .)
    PLUS            reduce using rule 33 (varcte -> ID .)
    MINUS           reduce using rule 33 (varcte -> ID .)
    LESS_THAN       reduce using rule 33 (varcte -> ID .)
    GREATER_THAN    reduce using rule 33 (varcte -> ID .)
    NOT_EQUAL       reduce using rule 33 (varcte -> ID .)
    SEMICOLON       reduce using rule 33 (varcte -> ID .)
    RIGHT_PARENTHESIS reduce using rule 33 (varcte -> ID .)


state 49

    (17) asignacion -> ID EQUAL_ASSIGN expresion . SEMICOLON

    SEMICOLON       shift and go to state 69


state 50

    (22) expresion -> exp . LESS_THAN exp
    (23) expresion -> exp . GREATER_THAN exp
    (24) expresion -> exp . NOT_EQUAL exp

    LESS_THAN       shift and go to state 70
    GREATER_THAN    shift and go to state 71
    NOT_EQUAL       shift and go to state 72


state 51

    (25) exp -> termino . PLUS termino
    (26) exp -> termino . MINUS termino

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 52

    (30) factor -> PLUS .

    MULTIPLICATION  reduce using rule 30 (factor -> PLUS .)
    DIVISION        reduce using rule 30 (factor -> PLUS .)
    PLUS            reduce using rule 30 (factor -> PLUS .)
    MINUS           reduce using rule 30 (factor -> PLUS .)
    LESS_THAN       reduce using rule 30 (factor -> PLUS .)
    GREATER_THAN    reduce using rule 30 (factor -> PLUS .)
    NOT_EQUAL       reduce using rule 30 (factor -> PLUS .)
    SEMICOLON       reduce using rule 30 (factor -> PLUS .)
    RIGHT_PARENTHESIS reduce using rule 30 (factor -> PLUS .)


state 53

    (31) factor -> MINUS .

    MULTIPLICATION  reduce using rule 31 (factor -> MINUS .)
    DIVISION        reduce using rule 31 (factor -> MINUS .)
    PLUS            reduce using rule 31 (factor -> MINUS .)
    MINUS           reduce using rule 31 (factor -> MINUS .)
    LESS_THAN       reduce using rule 31 (factor -> MINUS .)
    GREATER_THAN    reduce using rule 31 (factor -> MINUS .)
    NOT_EQUAL       reduce using rule 31 (factor -> MINUS .)
    SEMICOLON       reduce using rule 31 (factor -> MINUS .)
    RIGHT_PARENTHESIS reduce using rule 31 (factor -> MINUS .)


state 54

    (27) termino -> factor . MULTIPLICATION factor
    (28) termino -> factor . DIVISION factor

    MULTIPLICATION  shift and go to state 75
    DIVISION        shift and go to state 76


state 55

    (29) factor -> LEFT_PARENTHESIS . expresion RIGHT_PARENTHESIS
    (22) expresion -> . exp LESS_THAN exp
    (23) expresion -> . exp GREATER_THAN exp
    (24) expresion -> . exp NOT_EQUAL exp
    (25) exp -> . termino PLUS termino
    (26) exp -> . termino MINUS termino
    (27) termino -> . factor MULTIPLICATION factor
    (28) termino -> . factor DIVISION factor
    (29) factor -> . LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS
    (30) factor -> . PLUS
    (31) factor -> . MINUS
    (32) factor -> . varcte
    (33) varcte -> . ID
    (34) varcte -> . CONST_INT
    (35) varcte -> . CONST_FLOAT

    LEFT_PARENTHESIS shift and go to state 55
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    ID              shift and go to state 48
    CONST_INT       shift and go to state 57
    CONST_FLOAT     shift and go to state 58

    expresion                      shift and go to state 77
    exp                            shift and go to state 50
    termino                        shift and go to state 51
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 56

    (32) factor -> varcte .

    MULTIPLICATION  reduce using rule 32 (factor -> varcte .)
    DIVISION        reduce using rule 32 (factor -> varcte .)
    PLUS            reduce using rule 32 (factor -> varcte .)
    MINUS           reduce using rule 32 (factor -> varcte .)
    LESS_THAN       reduce using rule 32 (factor -> varcte .)
    GREATER_THAN    reduce using rule 32 (factor -> varcte .)
    NOT_EQUAL       reduce using rule 32 (factor -> varcte .)
    SEMICOLON       reduce using rule 32 (factor -> varcte .)
    RIGHT_PARENTHESIS reduce using rule 32 (factor -> varcte .)


state 57

    (34) varcte -> CONST_INT .

    MULTIPLICATION  reduce using rule 34 (varcte -> CONST_INT .)
    DIVISION        reduce using rule 34 (varcte -> CONST_INT .)
    PLUS            reduce using rule 34 (varcte -> CONST_INT .)
    MINUS           reduce using rule 34 (varcte -> CONST_INT .)
    LESS_THAN       reduce using rule 34 (varcte -> CONST_INT .)
    GREATER_THAN    reduce using rule 34 (varcte -> CONST_INT .)
    NOT_EQUAL       reduce using rule 34 (varcte -> CONST_INT .)
    SEMICOLON       reduce using rule 34 (varcte -> CONST_INT .)
    RIGHT_PARENTHESIS reduce using rule 34 (varcte -> CONST_INT .)


state 58

    (35) varcte -> CONST_FLOAT .

    MULTIPLICATION  reduce using rule 35 (varcte -> CONST_FLOAT .)
    DIVISION        reduce using rule 35 (varcte -> CONST_FLOAT .)
    PLUS            reduce using rule 35 (varcte -> CONST_FLOAT .)
    MINUS           reduce using rule 35 (varcte -> CONST_FLOAT .)
    LESS_THAN       reduce using rule 35 (varcte -> CONST_FLOAT .)
    GREATER_THAN    reduce using rule 35 (varcte -> CONST_FLOAT .)
    NOT_EQUAL       reduce using rule 35 (varcte -> CONST_FLOAT .)
    SEMICOLON       reduce using rule 35 (varcte -> CONST_FLOAT .)
    RIGHT_PARENTHESIS reduce using rule 35 (varcte -> CONST_FLOAT .)


state 59

    (18) condicion -> IF LEFT_PARENTHESIS expresion . RIGHT_PARENTHESIS bloque

    RIGHT_PARENTHESIS shift and go to state 78


state 60

    (36) write -> WRITE LEFT_PARENTHESIS inside . RIGHT_PARENTHESIS
    (37) inside -> inside . more inside
    (41) more -> . MORE
    (42) more -> . empty
    (47) empty -> .

  ! shift/reduce conflict for MORE resolved as shift
  ! shift/reduce conflict for RIGHT_PARENTHESIS resolved as shift
    RIGHT_PARENTHESIS shift and go to state 79
    MORE            shift and go to state 81
    ID              reduce using rule 47 (empty -> .)
    DOUBLE_QUOTES   reduce using rule 47 (empty -> .)

  ! MORE            [ reduce using rule 47 (empty -> .) ]
  ! RIGHT_PARENTHESIS [ reduce using rule 47 (empty -> .) ]

    more                           shift and go to state 80
    empty                          shift and go to state 82

state 61

    (38) inside -> ID .

    RIGHT_PARENTHESIS reduce using rule 38 (inside -> ID .)
    MORE            reduce using rule 38 (inside -> ID .)
    ID              reduce using rule 38 (inside -> ID .)
    DOUBLE_QUOTES   reduce using rule 38 (inside -> ID .)


state 62

    (39) inside -> string .

    RIGHT_PARENTHESIS reduce using rule 39 (inside -> string .)
    MORE            reduce using rule 39 (inside -> string .)
    ID              reduce using rule 39 (inside -> string .)
    DOUBLE_QUOTES   reduce using rule 39 (inside -> string .)


state 63

    (40) inside -> empty .

    RIGHT_PARENTHESIS reduce using rule 40 (inside -> empty .)
    MORE            reduce using rule 40 (inside -> empty .)
    ID              reduce using rule 40 (inside -> empty .)
    DOUBLE_QUOTES   reduce using rule 40 (inside -> empty .)


state 64

    (43) string -> DOUBLE_QUOTES . CONST_STRING DOUBLE_QUOTES

    CONST_STRING    shift and go to state 83


state 65

    (21) while -> WHILE LEFT_PARENTHESIS expresion . RIGHT_PARENTHESIS bloque

    RIGHT_PARENTHESIS shift and go to state 84


state 66

    (20) read -> READ VAR SEMICOLON .

    ID              reduce using rule 20 (read -> READ VAR SEMICOLON .)
    IF              reduce using rule 20 (read -> READ VAR SEMICOLON .)
    WRITE           reduce using rule 20 (read -> READ VAR SEMICOLON .)
    WHILE           reduce using rule 20 (read -> READ VAR SEMICOLON .)
    READ            reduce using rule 20 (read -> READ VAR SEMICOLON .)
    RIGHT_CURLYB    reduce using rule 20 (read -> READ VAR SEMICOLON .)


state 67

    (44) class -> CLASS LEFT_CURLYB vars method RIGHT_CURLYB .

    LEFT_CURLYB     reduce using rule 44 (class -> CLASS LEFT_CURLYB vars method RIGHT_CURLYB .)


state 68

    (45) method -> DEF LEFT_PARENTHESIS . varid RIGHT_PARENTHESIS bloquemetodo
    (4) varid -> . ID
    (5) varid -> . ID COMMA ID
    (6) varid -> . empty
    (47) empty -> .

    ID              shift and go to state 11
    RIGHT_PARENTHESIS reduce using rule 47 (empty -> .)

    varid                          shift and go to state 85
    empty                          shift and go to state 12

state 69

    (17) asignacion -> ID EQUAL_ASSIGN expresion SEMICOLON .

    ID              reduce using rule 17 (asignacion -> ID EQUAL_ASSIGN expresion SEMICOLON .)
    IF              reduce using rule 17 (asignacion -> ID EQUAL_ASSIGN expresion SEMICOLON .)
    WRITE           reduce using rule 17 (asignacion -> ID EQUAL_ASSIGN expresion SEMICOLON .)
    WHILE           reduce using rule 17 (asignacion -> ID EQUAL_ASSIGN expresion SEMICOLON .)
    READ            reduce using rule 17 (asignacion -> ID EQUAL_ASSIGN expresion SEMICOLON .)
    RIGHT_CURLYB    reduce using rule 17 (asignacion -> ID EQUAL_ASSIGN expresion SEMICOLON .)


state 70

    (22) expresion -> exp LESS_THAN . exp
    (25) exp -> . termino PLUS termino
    (26) exp -> . termino MINUS termino
    (27) termino -> . factor MULTIPLICATION factor
    (28) termino -> . factor DIVISION factor
    (29) factor -> . LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS
    (30) factor -> . PLUS
    (31) factor -> . MINUS
    (32) factor -> . varcte
    (33) varcte -> . ID
    (34) varcte -> . CONST_INT
    (35) varcte -> . CONST_FLOAT

    LEFT_PARENTHESIS shift and go to state 55
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    ID              shift and go to state 48
    CONST_INT       shift and go to state 57
    CONST_FLOAT     shift and go to state 58

    exp                            shift and go to state 86
    termino                        shift and go to state 51
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 71

    (23) expresion -> exp GREATER_THAN . exp
    (25) exp -> . termino PLUS termino
    (26) exp -> . termino MINUS termino
    (27) termino -> . factor MULTIPLICATION factor
    (28) termino -> . factor DIVISION factor
    (29) factor -> . LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS
    (30) factor -> . PLUS
    (31) factor -> . MINUS
    (32) factor -> . varcte
    (33) varcte -> . ID
    (34) varcte -> . CONST_INT
    (35) varcte -> . CONST_FLOAT

    LEFT_PARENTHESIS shift and go to state 55
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    ID              shift and go to state 48
    CONST_INT       shift and go to state 57
    CONST_FLOAT     shift and go to state 58

    exp                            shift and go to state 87
    termino                        shift and go to state 51
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 72

    (24) expresion -> exp NOT_EQUAL . exp
    (25) exp -> . termino PLUS termino
    (26) exp -> . termino MINUS termino
    (27) termino -> . factor MULTIPLICATION factor
    (28) termino -> . factor DIVISION factor
    (29) factor -> . LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS
    (30) factor -> . PLUS
    (31) factor -> . MINUS
    (32) factor -> . varcte
    (33) varcte -> . ID
    (34) varcte -> . CONST_INT
    (35) varcte -> . CONST_FLOAT

    LEFT_PARENTHESIS shift and go to state 55
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    ID              shift and go to state 48
    CONST_INT       shift and go to state 57
    CONST_FLOAT     shift and go to state 58

    exp                            shift and go to state 88
    termino                        shift and go to state 51
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 73

    (25) exp -> termino PLUS . termino
    (27) termino -> . factor MULTIPLICATION factor
    (28) termino -> . factor DIVISION factor
    (29) factor -> . LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS
    (30) factor -> . PLUS
    (31) factor -> . MINUS
    (32) factor -> . varcte
    (33) varcte -> . ID
    (34) varcte -> . CONST_INT
    (35) varcte -> . CONST_FLOAT

    LEFT_PARENTHESIS shift and go to state 55
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    ID              shift and go to state 48
    CONST_INT       shift and go to state 57
    CONST_FLOAT     shift and go to state 58

    termino                        shift and go to state 89
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 74

    (26) exp -> termino MINUS . termino
    (27) termino -> . factor MULTIPLICATION factor
    (28) termino -> . factor DIVISION factor
    (29) factor -> . LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS
    (30) factor -> . PLUS
    (31) factor -> . MINUS
    (32) factor -> . varcte
    (33) varcte -> . ID
    (34) varcte -> . CONST_INT
    (35) varcte -> . CONST_FLOAT

    LEFT_PARENTHESIS shift and go to state 55
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    ID              shift and go to state 48
    CONST_INT       shift and go to state 57
    CONST_FLOAT     shift and go to state 58

    termino                        shift and go to state 90
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 75

    (27) termino -> factor MULTIPLICATION . factor
    (29) factor -> . LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS
    (30) factor -> . PLUS
    (31) factor -> . MINUS
    (32) factor -> . varcte
    (33) varcte -> . ID
    (34) varcte -> . CONST_INT
    (35) varcte -> . CONST_FLOAT

    LEFT_PARENTHESIS shift and go to state 55
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    ID              shift and go to state 48
    CONST_INT       shift and go to state 57
    CONST_FLOAT     shift and go to state 58

    factor                         shift and go to state 91
    varcte                         shift and go to state 56

state 76

    (28) termino -> factor DIVISION . factor
    (29) factor -> . LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS
    (30) factor -> . PLUS
    (31) factor -> . MINUS
    (32) factor -> . varcte
    (33) varcte -> . ID
    (34) varcte -> . CONST_INT
    (35) varcte -> . CONST_FLOAT

    LEFT_PARENTHESIS shift and go to state 55
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    ID              shift and go to state 48
    CONST_INT       shift and go to state 57
    CONST_FLOAT     shift and go to state 58

    factor                         shift and go to state 92
    varcte                         shift and go to state 56

state 77

    (29) factor -> LEFT_PARENTHESIS expresion . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 93


state 78

    (18) condicion -> IF LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS . bloque
    (9) bloque -> . LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB

    LEFT_CURLYB     shift and go to state 14

    bloque                         shift and go to state 94

state 79

    (36) write -> WRITE LEFT_PARENTHESIS inside RIGHT_PARENTHESIS .

    ID              reduce using rule 36 (write -> WRITE LEFT_PARENTHESIS inside RIGHT_PARENTHESIS .)
    IF              reduce using rule 36 (write -> WRITE LEFT_PARENTHESIS inside RIGHT_PARENTHESIS .)
    WRITE           reduce using rule 36 (write -> WRITE LEFT_PARENTHESIS inside RIGHT_PARENTHESIS .)
    WHILE           reduce using rule 36 (write -> WRITE LEFT_PARENTHESIS inside RIGHT_PARENTHESIS .)
    READ            reduce using rule 36 (write -> WRITE LEFT_PARENTHESIS inside RIGHT_PARENTHESIS .)
    RIGHT_CURLYB    reduce using rule 36 (write -> WRITE LEFT_PARENTHESIS inside RIGHT_PARENTHESIS .)


state 80

    (37) inside -> inside more . inside
    (37) inside -> . inside more inside
    (38) inside -> . ID
    (39) inside -> . string
    (40) inside -> . empty
    (43) string -> . DOUBLE_QUOTES CONST_STRING DOUBLE_QUOTES
    (47) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for DOUBLE_QUOTES resolved as shift
    ID              shift and go to state 61
    DOUBLE_QUOTES   shift and go to state 64
    MORE            reduce using rule 47 (empty -> .)
    RIGHT_PARENTHESIS reduce using rule 47 (empty -> .)

  ! ID              [ reduce using rule 47 (empty -> .) ]
  ! DOUBLE_QUOTES   [ reduce using rule 47 (empty -> .) ]

    inside                         shift and go to state 95
    string                         shift and go to state 62
    empty                          shift and go to state 63

state 81

    (41) more -> MORE .

    ID              reduce using rule 41 (more -> MORE .)
    DOUBLE_QUOTES   reduce using rule 41 (more -> MORE .)
    MORE            reduce using rule 41 (more -> MORE .)
    RIGHT_PARENTHESIS reduce using rule 41 (more -> MORE .)


state 82

    (42) more -> empty .

    ID              reduce using rule 42 (more -> empty .)
    DOUBLE_QUOTES   reduce using rule 42 (more -> empty .)
    MORE            reduce using rule 42 (more -> empty .)
    RIGHT_PARENTHESIS reduce using rule 42 (more -> empty .)


state 83

    (43) string -> DOUBLE_QUOTES CONST_STRING . DOUBLE_QUOTES

    DOUBLE_QUOTES   shift and go to state 96


state 84

    (21) while -> WHILE LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS . bloque
    (9) bloque -> . LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB

    LEFT_CURLYB     shift and go to state 14

    bloque                         shift and go to state 97

state 85

    (45) method -> DEF LEFT_PARENTHESIS varid . RIGHT_PARENTHESIS bloquemetodo

    RIGHT_PARENTHESIS shift and go to state 98


state 86

    (22) expresion -> exp LESS_THAN exp .

    SEMICOLON       reduce using rule 22 (expresion -> exp LESS_THAN exp .)
    RIGHT_PARENTHESIS reduce using rule 22 (expresion -> exp LESS_THAN exp .)


state 87

    (23) expresion -> exp GREATER_THAN exp .

    SEMICOLON       reduce using rule 23 (expresion -> exp GREATER_THAN exp .)
    RIGHT_PARENTHESIS reduce using rule 23 (expresion -> exp GREATER_THAN exp .)


state 88

    (24) expresion -> exp NOT_EQUAL exp .

    SEMICOLON       reduce using rule 24 (expresion -> exp NOT_EQUAL exp .)
    RIGHT_PARENTHESIS reduce using rule 24 (expresion -> exp NOT_EQUAL exp .)


state 89

    (25) exp -> termino PLUS termino .

    LESS_THAN       reduce using rule 25 (exp -> termino PLUS termino .)
    GREATER_THAN    reduce using rule 25 (exp -> termino PLUS termino .)
    NOT_EQUAL       reduce using rule 25 (exp -> termino PLUS termino .)
    SEMICOLON       reduce using rule 25 (exp -> termino PLUS termino .)
    RIGHT_PARENTHESIS reduce using rule 25 (exp -> termino PLUS termino .)


state 90

    (26) exp -> termino MINUS termino .

    LESS_THAN       reduce using rule 26 (exp -> termino MINUS termino .)
    GREATER_THAN    reduce using rule 26 (exp -> termino MINUS termino .)
    NOT_EQUAL       reduce using rule 26 (exp -> termino MINUS termino .)
    SEMICOLON       reduce using rule 26 (exp -> termino MINUS termino .)
    RIGHT_PARENTHESIS reduce using rule 26 (exp -> termino MINUS termino .)


state 91

    (27) termino -> factor MULTIPLICATION factor .

    PLUS            reduce using rule 27 (termino -> factor MULTIPLICATION factor .)
    MINUS           reduce using rule 27 (termino -> factor MULTIPLICATION factor .)
    LESS_THAN       reduce using rule 27 (termino -> factor MULTIPLICATION factor .)
    GREATER_THAN    reduce using rule 27 (termino -> factor MULTIPLICATION factor .)
    NOT_EQUAL       reduce using rule 27 (termino -> factor MULTIPLICATION factor .)
    SEMICOLON       reduce using rule 27 (termino -> factor MULTIPLICATION factor .)
    RIGHT_PARENTHESIS reduce using rule 27 (termino -> factor MULTIPLICATION factor .)


state 92

    (28) termino -> factor DIVISION factor .

    PLUS            reduce using rule 28 (termino -> factor DIVISION factor .)
    MINUS           reduce using rule 28 (termino -> factor DIVISION factor .)
    LESS_THAN       reduce using rule 28 (termino -> factor DIVISION factor .)
    GREATER_THAN    reduce using rule 28 (termino -> factor DIVISION factor .)
    NOT_EQUAL       reduce using rule 28 (termino -> factor DIVISION factor .)
    SEMICOLON       reduce using rule 28 (termino -> factor DIVISION factor .)
    RIGHT_PARENTHESIS reduce using rule 28 (termino -> factor DIVISION factor .)


state 93

    (29) factor -> LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS .

    MULTIPLICATION  reduce using rule 29 (factor -> LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS .)
    DIVISION        reduce using rule 29 (factor -> LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 29 (factor -> LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 29 (factor -> LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 29 (factor -> LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 29 (factor -> LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 29 (factor -> LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 29 (factor -> LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 29 (factor -> LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS .)


state 94

    (18) condicion -> IF LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .

    ELSE            reduce using rule 18 (condicion -> IF LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .)
    ID              reduce using rule 18 (condicion -> IF LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .)
    IF              reduce using rule 18 (condicion -> IF LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .)
    WRITE           reduce using rule 18 (condicion -> IF LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .)
    WHILE           reduce using rule 18 (condicion -> IF LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .)
    READ            reduce using rule 18 (condicion -> IF LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .)
    RIGHT_CURLYB    reduce using rule 18 (condicion -> IF LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .)


state 95

    (37) inside -> inside more inside .
    (37) inside -> inside . more inside
    (41) more -> . MORE
    (42) more -> . empty
    (47) empty -> .

  ! shift/reduce conflict for MORE resolved as shift
  ! shift/reduce conflict for MORE resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 37 (inside -> inside more inside .)
  ! reduce/reduce conflict for DOUBLE_QUOTES resolved using rule 37 (inside -> inside more inside .)
  ! reduce/reduce conflict for RIGHT_PARENTHESIS resolved using rule 37 (inside -> inside more inside .)
    RIGHT_PARENTHESIS reduce using rule 37 (inside -> inside more inside .)
    ID              reduce using rule 37 (inside -> inside more inside .)
    DOUBLE_QUOTES   reduce using rule 37 (inside -> inside more inside .)
    MORE            shift and go to state 81

  ! MORE            [ reduce using rule 37 (inside -> inside more inside .) ]
  ! MORE            [ reduce using rule 47 (empty -> .) ]
  ! ID              [ reduce using rule 47 (empty -> .) ]
  ! DOUBLE_QUOTES   [ reduce using rule 47 (empty -> .) ]
  ! RIGHT_PARENTHESIS [ reduce using rule 47 (empty -> .) ]

    more                           shift and go to state 80
    empty                          shift and go to state 82

state 96

    (43) string -> DOUBLE_QUOTES CONST_STRING DOUBLE_QUOTES .

    RIGHT_PARENTHESIS reduce using rule 43 (string -> DOUBLE_QUOTES CONST_STRING DOUBLE_QUOTES .)
    MORE            reduce using rule 43 (string -> DOUBLE_QUOTES CONST_STRING DOUBLE_QUOTES .)
    ID              reduce using rule 43 (string -> DOUBLE_QUOTES CONST_STRING DOUBLE_QUOTES .)
    DOUBLE_QUOTES   reduce using rule 43 (string -> DOUBLE_QUOTES CONST_STRING DOUBLE_QUOTES .)


state 97

    (21) while -> WHILE LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .

    ID              reduce using rule 21 (while -> WHILE LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .)
    IF              reduce using rule 21 (while -> WHILE LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .)
    WRITE           reduce using rule 21 (while -> WHILE LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .)
    WHILE           reduce using rule 21 (while -> WHILE LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .)
    READ            reduce using rule 21 (while -> WHILE LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .)
    RIGHT_CURLYB    reduce using rule 21 (while -> WHILE LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque .)


state 98

    (45) method -> DEF LEFT_PARENTHESIS varid RIGHT_PARENTHESIS . bloquemetodo
    (46) bloquemetodo -> . LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB RETURN ID SEMICOLON

    LEFT_CURLYB     shift and go to state 100

    bloquemetodo                   shift and go to state 99

state 99

    (45) method -> DEF LEFT_PARENTHESIS varid RIGHT_PARENTHESIS bloquemetodo .

    RIGHT_CURLYB    reduce using rule 45 (method -> DEF LEFT_PARENTHESIS varid RIGHT_PARENTHESIS bloquemetodo .)


state 100

    (46) bloquemetodo -> LEFT_CURLYB . estatutoRecursivo RIGHT_CURLYB RETURN ID SEMICOLON
    (10) estatutoRecursivo -> . estatuto estatutoRecursivo
    (11) estatutoRecursivo -> . empty
    (12) estatuto -> . asignacion
    (13) estatuto -> . condicion
    (14) estatuto -> . write
    (15) estatuto -> . while
    (16) estatuto -> . read
    (47) empty -> .
    (17) asignacion -> . ID EQUAL_ASSIGN expresion SEMICOLON
    (18) condicion -> . IF LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque
    (19) condicion -> . condicion ELSE bloque
    (36) write -> . WRITE LEFT_PARENTHESIS inside RIGHT_PARENTHESIS
    (21) while -> . WHILE LEFT_PARENTHESIS expresion RIGHT_PARENTHESIS bloque
    (20) read -> . READ VAR SEMICOLON

    RIGHT_CURLYB    reduce using rule 47 (empty -> .)
    ID              shift and go to state 26
    IF              shift and go to state 27
    WRITE           shift and go to state 28
    WHILE           shift and go to state 29
    READ            shift and go to state 30

    estatutoRecursivo              shift and go to state 101
    estatuto                       shift and go to state 19
    empty                          shift and go to state 20
    asignacion                     shift and go to state 21
    condicion                      shift and go to state 22
    write                          shift and go to state 23
    while                          shift and go to state 24
    read                           shift and go to state 25

state 101

    (46) bloquemetodo -> LEFT_CURLYB estatutoRecursivo . RIGHT_CURLYB RETURN ID SEMICOLON

    RIGHT_CURLYB    shift and go to state 102


state 102

    (46) bloquemetodo -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB . RETURN ID SEMICOLON

    RETURN          shift and go to state 103


state 103

    (46) bloquemetodo -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB RETURN . ID SEMICOLON

    ID              shift and go to state 104


state 104

    (46) bloquemetodo -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB RETURN ID . SEMICOLON

    SEMICOLON       shift and go to state 105


state 105

    (46) bloquemetodo -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB RETURN ID SEMICOLON .

    RIGHT_CURLYB    reduce using rule 46 (bloquemetodo -> LEFT_CURLYB estatutoRecursivo RIGHT_CURLYB RETURN ID SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 41 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_QUOTES in state 41 resolved as shift
WARNING: shift/reduce conflict for MORE in state 60 resolved as shift
WARNING: shift/reduce conflict for RIGHT_PARENTHESIS in state 60 resolved as shift
WARNING: shift/reduce conflict for ID in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_QUOTES in state 80 resolved as shift
WARNING: shift/reduce conflict for MORE in state 95 resolved as shift
WARNING: shift/reduce conflict for MORE in state 95 resolved as shift
WARNING: reduce/reduce conflict in state 95 resolved using rule (inside -> inside more inside)
WARNING: rejected rule (empty -> <empty>) in state 95
