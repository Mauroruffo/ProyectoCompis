
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQUAL_ASSIGNleftIDleftLEFT_CURLYBRIGHT_CURLYBleftLEFT_BRACKETRIGHT_BRACKETleftLESS_THANGREATER_THANNOT_EQUALLESS_EQUALGREATER_EQUALEQUAL_COMPAREleftANDORNEGATIONleftMINUSPLUSleftMULTIPLICATIONDIVISIONleftLEFT_PARENTHESISRIGHT_PARENTHESISAND ATTRIBUTES BOOL CALL CALL CHAR CLASS COLON COMMA CONST_BOOL CONST_CHAR CONST_FLOAT CONST_INT CONST_STRING DEF DIVISION DO ELSE ELSEIF EQUAL_ASSIGN EQUAL_COMPARE FLOAT FUNC GREATER_EQUAL GREATER_THAN ID IF INT LEFT_BRACKET LEFT_CURLYB LEFT_PARENTHESIS LESS_EQUAL LESS_THAN LIST LIST MAIN METHODS MINUS MORE MOREBOOL MULTIPLICATION NEGATION NOT_EQUAL NUMBER OR PERIOD PLUS PROGRAM READ RETURN RIGHT_BRACKET RIGHT_CURLYB RIGHT_PARENTHESIS SEMICOLON STRING STRING VAR VOID WHILE WRITE program : PROGRAM pn_start_program pn_start_func ID SEMICOLON init_dec main  main : MAIN pn_internal_scope LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLYB vars_rec pn_gen_vartable bloque_rec RIGHT_CURLYB pn_end_main vars_rec : var_dec vars_rec\n                    | empty  pn_internal_scope : empty  pn_start_program : empty  pn_start_func : empty  init_dec : empty \n                | dec init_dec  dec :  var_dec \n            | func_dec \n            | class_dec  class_dec : empty var : ID varArray varArray :  empty \n                | pn_array_access1 LEFT_BRACKET pn_array_access2 all_logical pn_array_access3 RIGHT_BRACKET pn_access_return  pn_array_access1 : empty  pn_array_access2 : empty  pn_array_access3 : empty  pn_access_return : empty  var_dec :  VAR tipo pn_var_type  pn_value_type ID pn_current_name SEMICOLON pn_add_variable \n                | LIST tipo pn_var_type  pn_value_type ID pn_current_name LEFT_BRACKET  cte_int pn_add_variable pn_add_dim_list pn_add_dim RIGHT_BRACKET list1 SEMICOLON list1 : empty  pn_add_dim_list : empty pn_add_dim : empty pn_var_type : empty  pn_value_type : empty  pn_current_name : empty  pn_add_variable : empty  bloque : asignacion \n                | condicional \n                | while \n                | read \n                | write \n                | func_call SEMICOLON  asignacion : var pn_var_assign EQUAL_ASSIGN all_logical SEMICOLON  pn_var_assign : empty  pn_operator : empty  all_logical : logical_exp pn_all_logical all_logical_rec  all_logical_rec : AND pn_operator logical_exp pn_all_logical all_logical_rec \n                        | OR pn_operator logical_exp pn_all_logical all_logical_rec \n                        | empty pn_all_logical : empty  logical_exp : exp pn_logical_exp logical_exp_rec  logical_exp_rec : GREATER_THAN pn_operator exp pn_logical_exp logical_exp_rec \n                        | LESS_THAN pn_operator exp pn_logical_exp logical_exp_rec \n                        | EQUAL_COMPARE pn_operator exp pn_logical_exp logical_exp_rec \n                        | NOT_EQUAL pn_operator exp pn_logical_exp logical_exp_rec \n                        | empty pn_logical_exp : empty  exp : termino pn_exp exp_rec  pn_exp : empty  exp_rec : PLUS pn_operator termino pn_exp exp_rec \n                | MINUS pn_operator termino pn_exp exp_rec \n                | empty termino :  factor pn_termino termino_rec  termino_rec : MULTIPLICATION pn_operator factor pn_termino termino_rec \n                    | DIVISION pn_operator factor pn_termino termino_rec \n                    | empty pn_termino : empty  factor : varcte \n                | LEFT_PARENTHESIS pn_open_parenthesis all_logical  RIGHT_PARENTHESIS pn_close_parenthesis \n                | func_call empty varcte : cte_int pn_add_constant \n                | cte_float pn_add_constant \n                | CONST_BOOL pn_add_constant \n                | CONST_STRING empty empty\n                | var  cte_int : CONST_INT \n                | MINUS CONST_INT  cte_float : CONST_FLOAT \n                | MINUS CONST_FLOAT  pn_add_constant : empty  pn_open_parenthesis : empty  pn_close_parenthesis : empty  tipo : INT \n            | FLOAT \n            | BOOL \n            | STRING  return_module : tipo \n                | VOID  parametro : tipo ID parametro_rec \n                    | empty  parametro_rec : COMMA tipo ID parametro_rec \n                        | empty  pn_parametro_varTable : empty  condicional : IF LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_condicional LEFT_CURLYB bloque_rec RIGHT_CURLYB condicional_else  condicional_else : ELSE pn_condicional_else LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_condicional_final \n                        | pn_condicional_final  pn_condicional : empty  pn_condicional_else : empty  pn_condicional_final : empty  while : WHILE pn_while LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_while_jump while_loop while_loop : LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_while_jump1  pn_while : empty  pn_while_jump : empty  pn_while_jump1 : empty  read : READ LEFT_PARENTHESIS var RIGHT_PARENTHESIS SEMICOLON  write : WRITE LEFT_PARENTHESIS write_rec RIGHT_PARENTHESIS SEMICOLON  write_rec : all_logical pn_write_quad write_rec1  write_rec1 : MORE all_logical pn_write_quad write_rec1 \n                    | empty  pn_write_quad : empty  func_call : CALL ID pn_verify_func LEFT_PARENTHESIS pn_param_counter pn_open_parenthesis func_call_rec pn_close_parenthesis RIGHT_PARENTHESIS  pn_verify_func : empty  pn_param_counter : empty  func_call_rec : all_logical pn_param_match func_call_rec1  func_call_rec1 : COMMA all_logical pn_param_match func_call_rec\n                        | empty  pn_param_match : empty  func_dec : FUNC return_module ID pn_add_func pn_return_type LEFT_PARENTHESIS parametro pn_add_param_vartable RIGHT_PARENTHESIS LEFT_CURLYB vars_rec pn_gen_vartable pn_func_quad bloque_rec func_return RIGHT_CURLYB pn_end_func  pn_add_param_vartable : empty  pn_gen_vartable : empty  pn_func_quad : empty  pn_end_main : empty pn_end_func : empty  pn_add_func : empty  pn_return_type : empty  func_return : RETURN all_logical SEMICOLON \n                    | RETURN SEMICOLON  bloque_rec : bloque bloque_rec \n                    | empty empty :  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,18,93,111,112,],[0,-1,-123,-2,-115,]),'ID':([2,3,4,5,6,21,22,23,24,25,26,27,28,29,32,33,34,37,38,39,47,52,53,54,55,58,60,61,62,63,64,66,72,74,75,76,77,78,85,86,88,95,98,101,102,104,105,109,110,113,114,116,117,118,119,120,121,122,123,124,125,126,128,129,135,138,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,164,165,166,168,170,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,197,199,200,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,222,225,227,228,230,231,232,233,234,235,236,237,238,239,240,241,245,247,248,249,250,251,252,253,254,255,256,257,258,263,264,265,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,293,294,295,296,297,300,301,],[-123,-123,-6,7,-7,-123,-76,-77,-78,-79,-123,35,-80,-81,-123,-26,-123,43,-27,44,-123,-123,-123,-4,-123,70,86,-113,-3,-21,-29,-69,86,-30,-31,-32,-33,-34,103,-123,-70,-35,86,86,86,-14,-15,-123,139,86,-123,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,86,-123,-123,86,-74,-123,-43,-123,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-123,86,-18,-123,-36,-39,-123,-123,-42,-44,-123,-123,-123,-123,-49,-51,-123,-123,-55,-56,-123,-123,-59,-67,-98,-99,86,-123,-106,86,-114,-123,86,86,-38,86,86,86,86,86,86,86,86,86,86,-22,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-93,86,-123,86,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-110,-16,-20,-87,-89,-92,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-123,-104,86,-94,-97,-123,86,86,-123,-88,]),'SEMICOLON':([7,43,48,49,66,79,86,88,104,105,116,117,118,119,120,121,122,123,124,125,126,128,140,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,167,174,177,178,183,184,187,188,191,192,202,203,206,227,228,230,231,232,233,234,235,236,237,238,239,245,247,249,250,251,252,253,254,255,256,257,258,264,265,267,273,274,275,276,277,278,279,280,281,282,284,],[8,-123,55,-28,-69,95,-123,-70,-14,-15,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,170,-123,-43,-123,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,194,195,-123,-39,-42,-44,-49,-51,-55,-56,-59,-67,225,-23,-123,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,268,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-16,-20,290,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-104,]),'MAIN':([8,9,10,11,12,13,14,20,55,63,64,225,266,288,289,],[-123,19,-8,-123,-10,-11,-12,-9,-123,-21,-29,-22,-123,-111,-116,]),'VAR':([8,10,11,12,13,14,47,53,55,63,64,109,225,266,288,289,],[15,-13,15,-10,-11,-12,15,15,-123,-21,-29,15,-22,-123,-111,-116,]),'LIST':([8,10,11,12,13,14,47,53,55,63,64,109,225,266,288,289,],[16,-13,16,-10,-11,-12,16,16,-123,-21,-29,16,-22,-123,-111,-116,]),'FUNC':([8,10,11,12,13,14,55,63,64,225,266,288,289,],[17,-13,17,-10,-11,-12,-123,-21,-29,-22,-123,-111,-116,]),'INT':([15,16,17,51,91,],[22,22,22,22,22,]),'FLOAT':([15,16,17,51,91,],[23,23,23,23,23,]),'BOOL':([15,16,17,51,91,],[24,24,24,24,24,]),'STRING':([15,16,17,51,91,],[25,25,25,25,25,]),'VOID':([17,],[29,]),'LEFT_PARENTHESIS':([19,30,31,35,40,41,45,46,66,81,82,83,84,86,88,98,99,100,102,103,104,105,113,114,116,117,118,119,120,121,122,123,124,125,126,128,129,133,134,135,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,164,165,166,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,197,199,200,206,208,209,210,211,212,213,214,215,216,217,218,222,227,228,230,231,232,233,234,235,236,237,238,239,245,247,249,250,251,252,253,254,255,256,257,258,263,264,265,273,274,275,276,277,278,279,280,281,282,284,286,295,297,],[-123,36,-5,-123,-123,-117,51,-118,-69,98,-123,101,102,-123,-70,114,129,-95,114,-123,-14,-15,114,-123,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,114,164,-105,-123,114,-74,-123,-43,-123,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-123,114,-18,-39,-123,-123,-42,-44,-123,-123,-123,-123,-49,-51,-123,-123,-55,-56,-123,-123,-59,-67,114,-123,-106,-123,114,-38,114,114,114,114,114,114,114,114,114,114,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,114,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-110,-16,-20,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-104,114,-123,114,]),'RIGHT_PARENTHESIS':([36,51,57,59,66,68,69,70,86,88,90,92,104,105,115,116,117,118,119,120,121,122,123,124,125,126,128,130,131,132,139,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,162,163,169,171,174,177,178,183,184,187,188,191,192,196,198,206,221,227,228,230,231,232,233,234,235,236,237,238,239,242,243,244,245,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,273,274,275,276,277,278,279,280,281,282,284,285,287,299,],[42,-123,-123,-83,-69,89,-112,-123,-123,-70,-82,-85,-14,-15,143,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,160,161,-123,-123,-123,-43,-123,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,193,-123,-103,-84,206,-39,-42,-44,-49,-51,-55,-56,-59,-67,-100,-102,-123,-123,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-101,284,-123,-110,-16,-20,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-104,-107,-109,-108,]),'LEFT_CURLYB':([42,89,143,172,173,193,219,220,270,291,292,],[47,109,-123,207,-90,-123,241,-96,-123,296,-91,]),'LEFT_BRACKET':([44,49,50,86,105,106,],[-123,-28,56,-123,-17,135,]),'IF':([47,52,53,54,55,60,61,62,63,64,72,74,75,76,77,78,95,109,138,168,170,194,195,204,205,207,225,240,241,248,269,271,272,283,293,294,296,300,301,],[-123,-123,-123,-4,-123,81,-113,-3,-21,-29,81,-30,-31,-32,-33,-34,-35,-123,-123,-123,-36,-98,-99,81,-114,81,-22,-93,81,-123,-87,-89,-92,-123,-94,-97,81,-123,-88,]),'WHILE':([47,52,53,54,55,60,61,62,63,64,72,74,75,76,77,78,95,109,138,168,170,194,195,204,205,207,225,240,241,248,269,271,272,283,293,294,296,300,301,],[-123,-123,-123,-4,-123,82,-113,-3,-21,-29,82,-30,-31,-32,-33,-34,-35,-123,-123,-123,-36,-98,-99,82,-114,82,-22,-93,82,-123,-87,-89,-92,-123,-94,-97,82,-123,-88,]),'READ':([47,52,53,54,55,60,61,62,63,64,72,74,75,76,77,78,95,109,138,168,170,194,195,204,205,207,225,240,241,248,269,271,272,283,293,294,296,300,301,],[-123,-123,-123,-4,-123,83,-113,-3,-21,-29,83,-30,-31,-32,-33,-34,-35,-123,-123,-123,-36,-98,-99,83,-114,83,-22,-93,83,-123,-87,-89,-92,-123,-94,-97,83,-123,-88,]),'WRITE':([47,52,53,54,55,60,61,62,63,64,72,74,75,76,77,78,95,109,138,168,170,194,195,204,205,207,225,240,241,248,269,271,272,283,293,294,296,300,301,],[-123,-123,-123,-4,-123,84,-113,-3,-21,-29,84,-30,-31,-32,-33,-34,-35,-123,-123,-123,-36,-98,-99,84,-114,84,-22,-93,84,-123,-87,-89,-92,-123,-94,-97,84,-123,-88,]),'CALL':([47,52,53,54,55,60,61,62,63,64,66,72,74,75,76,77,78,86,88,95,98,102,104,105,109,113,114,116,117,118,119,120,121,122,123,124,125,126,128,129,135,138,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,164,165,166,168,170,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,197,199,200,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,222,225,227,228,230,231,232,233,234,235,236,237,238,239,240,241,245,247,248,249,250,251,252,253,254,255,256,257,258,263,264,265,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,293,294,295,296,297,300,301,],[-123,-123,-123,-4,-123,85,-113,-3,-21,-29,-69,85,-30,-31,-32,-33,-34,-123,-70,-35,85,85,-14,-15,-123,85,-123,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,85,-123,-123,85,-74,-123,-43,-123,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-123,85,-18,-123,-36,-39,-123,-123,-42,-44,-123,-123,-123,-123,-49,-51,-123,-123,-55,-56,-123,-123,-59,-67,-98,-99,85,-123,-106,85,-114,-123,85,85,-38,85,85,85,85,85,85,85,85,85,85,-22,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-93,85,-123,85,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-110,-16,-20,-87,-89,-92,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-123,-104,85,-94,-97,-123,85,85,-123,-88,]),'RIGHT_CURLYB':([47,52,53,54,55,60,61,62,63,64,71,72,73,74,75,76,77,78,94,95,170,194,195,207,225,229,240,241,246,248,259,268,269,271,272,283,290,293,294,296,298,300,301,],[-123,-123,-123,-4,-123,-123,-113,-3,-21,-29,93,-123,-122,-30,-31,-32,-33,-34,-121,-35,-36,-98,-99,-123,-22,248,-93,-123,266,-123,283,-120,-87,-89,-92,-123,-119,-94,-97,-123,300,-123,-88,]),'RETURN':([53,54,55,61,62,63,64,72,73,74,75,76,77,78,94,95,109,138,168,170,194,195,204,205,225,226,240,248,269,271,272,283,293,294,300,301,],[-123,-4,-123,-113,-3,-21,-29,-123,-122,-30,-31,-32,-33,-34,-121,-35,-123,-123,-123,-36,-98,-99,-123,-114,-22,247,-93,-123,-87,-89,-92,-123,-94,-97,-123,-88,]),'CONST_INT':([56,66,67,86,88,98,102,104,105,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,164,165,166,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,197,199,200,206,208,209,210,211,212,213,214,215,216,217,218,222,227,228,230,231,232,233,234,235,236,237,238,239,245,247,249,250,251,252,253,254,255,256,257,258,263,264,265,273,274,275,276,277,278,279,280,281,282,284,286,295,297,],[66,-69,88,-123,-70,66,66,-14,-15,66,-123,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,88,-71,66,-123,66,-74,-123,-43,-123,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-123,66,-18,-39,-123,-123,-42,-44,-123,-123,-123,-123,-49,-51,-123,-123,-55,-56,-123,-123,-59,-67,66,-123,-106,-123,66,-38,66,66,66,66,66,66,66,66,66,66,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,66,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-110,-16,-20,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-104,66,-123,66,]),'MINUS':([56,66,86,88,98,102,104,105,113,114,116,117,118,119,120,121,122,123,124,125,126,128,129,135,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,164,165,166,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,197,199,200,206,208,209,210,211,212,213,214,215,216,217,218,222,227,228,230,231,232,233,234,235,236,237,238,239,245,247,249,250,251,252,253,254,255,256,257,258,263,264,265,273,274,275,276,277,278,279,280,281,282,284,286,295,297,],[67,-69,-123,-70,127,127,-14,-15,127,-123,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,127,-123,127,-74,-123,-43,-123,-50,186,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-123,127,-18,-39,-123,-123,-42,-44,-123,-123,-123,-123,-49,-51,-123,-123,-55,-56,-123,-123,-59,-67,127,-123,-106,-123,127,-38,127,127,127,127,127,127,127,127,127,127,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,127,-123,-123,-123,-123,-123,-123,186,186,-123,-123,-110,-16,-20,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-104,127,-123,127,]),'RIGHT_BRACKET':([64,65,66,86,87,88,104,105,107,108,116,117,118,119,120,121,122,123,124,125,126,128,136,137,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,174,177,178,183,184,187,188,191,192,201,206,223,224,227,228,230,231,232,233,234,235,236,237,238,239,245,249,250,251,252,253,254,255,256,257,258,264,265,273,274,275,276,277,278,279,280,281,282,284,],[-29,-123,-69,-123,-123,-70,-14,-15,-123,-24,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,167,-25,-123,-43,-123,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-39,-42,-44,-49,-51,-55,-56,-59,-67,-123,-123,245,-19,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-16,-20,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-104,]),'MULTIPLICATION':([66,86,88,104,105,119,120,121,122,123,124,125,126,128,150,151,152,153,154,155,156,157,158,192,206,227,228,238,239,245,257,258,264,265,284,],[-69,-123,-70,-14,-15,-123,-61,-123,-123,-123,-123,-123,-68,-71,189,-60,-63,-64,-73,-65,-66,-123,-72,-67,-123,-62,-75,-123,-123,-123,189,189,-16,-20,-104,]),'DIVISION':([66,86,88,104,105,119,120,121,122,123,124,125,126,128,150,151,152,153,154,155,156,157,158,192,206,227,228,238,239,245,257,258,264,265,284,],[-69,-123,-70,-14,-15,-123,-61,-123,-123,-123,-123,-123,-68,-71,190,-60,-63,-64,-73,-65,-66,-123,-72,-67,-123,-62,-75,-123,-123,-123,190,190,-16,-20,-104,]),'PLUS':([66,86,88,104,105,118,119,120,121,122,123,124,125,126,128,148,149,150,151,152,153,154,155,156,157,158,188,191,192,206,227,228,236,237,238,239,245,255,256,257,258,264,265,281,282,284,],[-69,-123,-70,-14,-15,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,185,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-56,-59,-67,-123,-62,-75,-123,-123,-123,-123,-123,185,185,-123,-123,-16,-20,-57,-58,-104,]),'GREATER_THAN':([66,86,88,104,105,117,118,119,120,121,122,123,124,125,126,128,146,147,148,149,150,151,152,153,154,155,156,157,158,184,187,188,191,192,206,227,228,232,233,234,235,236,237,238,239,245,251,252,253,254,255,256,257,258,264,265,279,280,281,282,284,],[-69,-123,-70,-14,-15,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,179,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-51,-55,-56,-59,-67,-123,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,179,179,179,179,-123,-123,-123,-123,-16,-20,-53,-54,-57,-58,-104,]),'LESS_THAN':([66,86,88,104,105,117,118,119,120,121,122,123,124,125,126,128,146,147,148,149,150,151,152,153,154,155,156,157,158,184,187,188,191,192,206,227,228,232,233,234,235,236,237,238,239,245,251,252,253,254,255,256,257,258,264,265,279,280,281,282,284,],[-69,-123,-70,-14,-15,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,180,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-51,-55,-56,-59,-67,-123,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,180,180,180,180,-123,-123,-123,-123,-16,-20,-53,-54,-57,-58,-104,]),'EQUAL_COMPARE':([66,86,88,104,105,117,118,119,120,121,122,123,124,125,126,128,146,147,148,149,150,151,152,153,154,155,156,157,158,184,187,188,191,192,206,227,228,232,233,234,235,236,237,238,239,245,251,252,253,254,255,256,257,258,264,265,279,280,281,282,284,],[-69,-123,-70,-14,-15,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,181,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-51,-55,-56,-59,-67,-123,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,181,181,181,181,-123,-123,-123,-123,-16,-20,-53,-54,-57,-58,-104,]),'NOT_EQUAL':([66,86,88,104,105,117,118,119,120,121,122,123,124,125,126,128,146,147,148,149,150,151,152,153,154,155,156,157,158,184,187,188,191,192,206,227,228,232,233,234,235,236,237,238,239,245,251,252,253,254,255,256,257,258,264,265,279,280,281,282,284,],[-69,-123,-70,-14,-15,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,182,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-51,-55,-56,-59,-67,-123,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,182,182,182,182,-123,-123,-123,-123,-16,-20,-53,-54,-57,-58,-104,]),'AND':([66,86,88,104,105,116,117,118,119,120,121,122,123,124,125,126,128,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,178,183,184,187,188,191,192,206,227,228,230,231,232,233,234,235,236,237,238,239,245,249,250,251,252,253,254,255,256,257,258,264,265,275,276,277,278,279,280,281,282,284,],[-69,-123,-70,-14,-15,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,175,-43,-123,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-44,-49,-51,-55,-56,-59,-67,-123,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,175,175,-123,-123,-123,-123,-123,-123,-123,-123,-16,-20,-45,-46,-47,-48,-53,-54,-57,-58,-104,]),'OR':([66,86,88,104,105,116,117,118,119,120,121,122,123,124,125,126,128,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,178,183,184,187,188,191,192,206,227,228,230,231,232,233,234,235,236,237,238,239,245,249,250,251,252,253,254,255,256,257,258,264,265,275,276,277,278,279,280,281,282,284,],[-69,-123,-70,-14,-15,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,176,-43,-123,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-44,-49,-51,-55,-56,-59,-67,-123,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,176,176,-123,-123,-123,-123,-123,-123,-123,-123,-16,-20,-45,-46,-47,-48,-53,-54,-57,-58,-104,]),'MORE':([66,86,88,104,105,116,117,118,119,120,121,122,123,124,125,126,128,132,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,163,174,177,178,183,184,187,188,191,192,206,221,227,228,230,231,232,233,234,235,236,237,238,239,242,245,249,250,251,252,253,254,255,256,257,258,264,265,273,274,275,276,277,278,279,280,281,282,284,],[-69,-123,-70,-14,-15,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,-123,-123,-43,-123,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,197,-103,-39,-42,-44,-49,-51,-55,-56,-59,-67,-123,-123,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,197,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-16,-20,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-104,]),'COMMA':([66,70,86,88,104,105,116,117,118,119,120,121,122,123,124,125,126,128,139,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,174,177,178,183,184,187,188,191,192,206,227,228,230,231,232,233,234,235,236,237,238,239,244,245,249,250,251,252,253,254,255,256,257,258,262,263,264,265,273,274,275,276,277,278,279,280,281,282,284,],[-69,91,-123,-70,-14,-15,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,91,-123,-43,-123,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-39,-42,-44,-49,-51,-55,-56,-59,-67,-123,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,286,-110,-16,-20,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-104,]),'CONST_BOOL':([66,86,88,98,102,104,105,113,114,116,117,118,119,120,121,122,123,124,125,126,128,129,135,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,164,165,166,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,197,199,200,206,208,209,210,211,212,213,214,215,216,217,218,222,227,228,230,231,232,233,234,235,236,237,238,239,245,247,249,250,251,252,253,254,255,256,257,258,263,264,265,273,274,275,276,277,278,279,280,281,282,284,286,295,297,],[-69,-123,-70,124,124,-14,-15,124,-123,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,124,-123,124,-74,-123,-43,-123,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-123,124,-18,-39,-123,-123,-42,-44,-123,-123,-123,-123,-49,-51,-123,-123,-55,-56,-123,-123,-59,-67,124,-123,-106,-123,124,-38,124,124,124,124,124,124,124,124,124,124,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,124,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-110,-16,-20,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-104,124,-123,124,]),'CONST_STRING':([66,86,88,98,102,104,105,113,114,116,117,118,119,120,121,122,123,124,125,126,128,129,135,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,164,165,166,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,197,199,200,206,208,209,210,211,212,213,214,215,216,217,218,222,227,228,230,231,232,233,234,235,236,237,238,239,245,247,249,250,251,252,253,254,255,256,257,258,263,264,265,273,274,275,276,277,278,279,280,281,282,284,286,295,297,],[-69,-123,-70,125,125,-14,-15,125,-123,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,-71,125,-123,125,-74,-123,-43,-123,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-123,125,-18,-39,-123,-123,-42,-44,-123,-123,-123,-123,-49,-51,-123,-123,-55,-56,-123,-123,-59,-67,125,-123,-106,-123,125,-38,125,125,125,125,125,125,125,125,125,125,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,125,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-110,-16,-20,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-104,125,-123,125,]),'CONST_FLOAT':([66,86,88,98,102,104,105,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,164,165,166,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,197,199,200,206,208,209,210,211,212,213,214,215,216,217,218,222,227,228,230,231,232,233,234,235,236,237,238,239,245,247,249,250,251,252,253,254,255,256,257,258,263,264,265,273,274,275,276,277,278,279,280,281,282,284,286,295,297,],[-69,-123,-70,128,128,-14,-15,128,-123,-123,-123,-123,-123,-61,-123,-123,-123,-123,-123,-68,158,-71,128,-123,128,-74,-123,-43,-123,-50,-123,-52,-123,-60,-63,-64,-73,-65,-66,-123,-72,-123,128,-18,-39,-123,-123,-42,-44,-123,-123,-123,-123,-49,-51,-123,-123,-55,-56,-123,-123,-59,-67,128,-123,-106,-123,128,-38,128,128,128,128,128,128,128,128,128,128,-62,-75,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,128,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-110,-16,-20,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-104,128,-123,128,]),'EQUAL_ASSIGN':([80,86,96,97,104,105,245,264,265,],[-123,-123,113,-37,-14,-15,-123,-16,-20,]),'ELSE':([248,],[270,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'pn_start_program':([2,],[3,]),'empty':([2,3,8,11,19,21,26,32,34,35,40,43,44,47,51,52,53,55,57,60,65,70,72,80,82,86,87,93,103,107,109,114,116,117,118,119,121,122,123,124,125,132,135,138,139,143,144,146,148,150,157,162,164,167,168,175,176,179,180,181,182,185,186,189,190,193,199,201,204,206,207,221,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,248,249,250,251,252,253,254,255,256,257,258,262,266,270,283,295,296,300,],[4,6,10,10,31,33,33,38,38,41,46,49,49,54,59,61,54,64,69,73,64,92,73,97,100,105,108,112,134,137,54,142,145,147,149,151,152,154,154,154,157,163,166,61,92,173,177,183,187,191,192,198,200,203,205,209,209,209,209,209,209,209,209,209,209,220,142,224,73,228,73,163,145,145,147,147,147,147,149,149,151,151,73,198,228,263,265,272,177,177,183,183,183,183,187,187,191,191,287,289,292,294,263,73,272,]),'pn_start_func':([3,],[5,]),'init_dec':([8,11,],[9,20,]),'dec':([8,11,],[11,11,]),'var_dec':([8,11,47,53,109,],[12,12,53,53,53,]),'func_dec':([8,11,],[13,13,]),'class_dec':([8,11,],[14,14,]),'main':([9,],[18,]),'tipo':([15,16,17,51,91,],[21,26,28,58,110,]),'return_module':([17,],[27,]),'pn_internal_scope':([19,],[30,]),'pn_var_type':([21,26,],[32,34,]),'pn_value_type':([32,34,],[37,39,]),'pn_add_func':([35,],[40,]),'pn_return_type':([40,],[45,]),'pn_current_name':([43,44,],[48,50,]),'vars_rec':([47,53,109,],[52,62,138,]),'parametro':([51,],[57,]),'pn_gen_vartable':([52,138,],[60,168,]),'pn_add_variable':([55,65,],[63,87,]),'cte_int':([56,98,102,113,129,141,165,197,208,210,211,212,213,214,215,216,217,218,222,247,286,297,],[65,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'pn_add_param_vartable':([57,],[68,]),'bloque_rec':([60,72,204,207,241,296,],[71,94,226,229,259,298,]),'bloque':([60,72,204,207,241,296,],[72,72,72,72,72,72,]),'asignacion':([60,72,204,207,241,296,],[74,74,74,74,74,74,]),'condicional':([60,72,204,207,241,296,],[75,75,75,75,75,75,]),'while':([60,72,204,207,241,296,],[76,76,76,76,76,76,]),'read':([60,72,204,207,241,296,],[77,77,77,77,77,77,]),'write':([60,72,204,207,241,296,],[78,78,78,78,78,78,]),'func_call':([60,72,98,102,113,129,141,165,197,204,207,208,210,211,212,213,214,215,216,217,218,222,241,247,286,296,297,],[79,79,121,121,121,121,121,121,121,79,79,121,121,121,121,121,121,121,121,121,121,121,79,121,121,79,121,]),'var':([60,72,98,101,102,113,129,141,165,197,204,207,208,210,211,212,213,214,215,216,217,218,222,241,247,286,296,297,],[80,80,126,130,126,126,126,126,126,126,80,80,126,126,126,126,126,126,126,126,126,126,126,80,126,126,80,126,]),'parametro_rec':([70,139,],[90,169,]),'pn_var_assign':([80,],[96,]),'pn_while':([82,],[99,]),'varArray':([86,],[104,]),'pn_array_access1':([86,],[106,]),'pn_add_dim_list':([87,],[107,]),'pn_end_main':([93,],[111,]),'all_logical':([98,102,113,129,141,165,197,222,247,286,297,],[115,132,140,159,171,201,221,244,267,295,244,]),'logical_exp':([98,102,113,129,141,165,197,208,210,222,247,286,297,],[116,116,116,116,116,116,116,230,231,116,116,116,116,]),'exp':([98,102,113,129,141,165,197,208,210,211,212,213,214,222,247,286,297,],[117,117,117,117,117,117,117,117,117,232,233,234,235,117,117,117,117,]),'termino':([98,102,113,129,141,165,197,208,210,211,212,213,214,215,216,222,247,286,297,],[118,118,118,118,118,118,118,118,118,118,118,118,118,236,237,118,118,118,118,]),'factor':([98,102,113,129,141,165,197,208,210,211,212,213,214,215,216,217,218,222,247,286,297,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,238,239,119,119,119,119,]),'varcte':([98,102,113,129,141,165,197,208,210,211,212,213,214,215,216,217,218,222,247,286,297,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'cte_float':([98,102,113,129,141,165,197,208,210,211,212,213,214,215,216,217,218,222,247,286,297,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'write_rec':([102,],[131,]),'pn_verify_func':([103,],[133,]),'pn_add_dim':([107,],[136,]),'pn_open_parenthesis':([114,199,],[141,222,]),'pn_all_logical':([116,230,231,],[144,249,250,]),'pn_logical_exp':([117,232,233,234,235,],[146,251,252,253,254,]),'pn_exp':([118,236,237,],[148,255,256,]),'pn_termino':([119,238,239,],[150,257,258,]),'pn_add_constant':([122,123,124,],[153,155,156,]),'pn_write_quad':([132,221,],[162,242,]),'pn_array_access2':([135,],[165,]),'pn_condicional':([143,],[172,]),'all_logical_rec':([144,249,250,],[174,273,274,]),'logical_exp_rec':([146,251,252,253,254,],[178,275,276,277,278,]),'exp_rec':([148,255,256,],[184,279,280,]),'termino_rec':([150,257,258,],[188,281,282,]),'write_rec1':([162,242,],[196,260,]),'pn_param_counter':([164,],[199,]),'list1':([167,],[202,]),'pn_func_quad':([168,],[204,]),'pn_operator':([175,176,179,180,181,182,185,186,189,190,],[208,210,211,212,213,214,215,216,217,218,]),'pn_while_jump':([193,],[219,]),'pn_array_access3':([201,],[223,]),'pn_close_parenthesis':([206,243,],[227,261,]),'while_loop':([219,],[240,]),'func_call_rec':([222,297,],[243,299,]),'func_return':([226,],[246,]),'pn_param_match':([244,295,],[262,297,]),'pn_access_return':([245,],[264,]),'condicional_else':([248,],[269,]),'pn_condicional_final':([248,300,],[271,301,]),'func_call_rec1':([262,],[285,]),'pn_end_func':([266,],[288,]),'pn_condicional_else':([270,],[291,]),'pn_while_jump1':([283,],[293,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM pn_start_program pn_start_func ID SEMICOLON init_dec main','program',7,'p_program','AnalizadorSintactico.py',46),
  ('main -> MAIN pn_internal_scope LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLYB vars_rec pn_gen_vartable bloque_rec RIGHT_CURLYB pn_end_main','main',10,'p_main','AnalizadorSintactico.py',58),
  ('vars_rec -> var_dec vars_rec','vars_rec',2,'p_vars_rec','AnalizadorSintactico.py',63),
  ('vars_rec -> empty','vars_rec',1,'p_vars_rec','AnalizadorSintactico.py',64),
  ('pn_internal_scope -> empty','pn_internal_scope',1,'p_pn_internal_scope','AnalizadorSintactico.py',67),
  ('pn_start_program -> empty','pn_start_program',1,'p_pn_start_program','AnalizadorSintactico.py',73),
  ('pn_start_func -> empty','pn_start_func',1,'p_pn_start_func','AnalizadorSintactico.py',82),
  ('init_dec -> empty','init_dec',1,'p_init_dec','AnalizadorSintactico.py',91),
  ('init_dec -> dec init_dec','init_dec',2,'p_init_dec','AnalizadorSintactico.py',92),
  ('dec -> var_dec','dec',1,'p_dec','AnalizadorSintactico.py',95),
  ('dec -> func_dec','dec',1,'p_dec','AnalizadorSintactico.py',96),
  ('dec -> class_dec','dec',1,'p_dec','AnalizadorSintactico.py',97),
  ('class_dec -> empty','class_dec',1,'p_class_dec','AnalizadorSintactico.py',100),
  ('var -> ID varArray','var',2,'p_var','AnalizadorSintactico.py',103),
  ('varArray -> empty','varArray',1,'p_varArray','AnalizadorSintactico.py',107),
  ('varArray -> pn_array_access1 LEFT_BRACKET pn_array_access2 all_logical pn_array_access3 RIGHT_BRACKET pn_access_return','varArray',7,'p_varArray','AnalizadorSintactico.py',108),
  ('pn_array_access1 -> empty','pn_array_access1',1,'p_pn_array_access1','AnalizadorSintactico.py',111),
  ('pn_array_access2 -> empty','pn_array_access2',1,'p_pn_array_access2','AnalizadorSintactico.py',136),
  ('pn_array_access3 -> empty','pn_array_access3',1,'p_pn_array_access3','AnalizadorSintactico.py',153),
  ('pn_access_return -> empty','pn_access_return',1,'p_pn_access_return','AnalizadorSintactico.py',176),
  ('var_dec -> VAR tipo pn_var_type pn_value_type ID pn_current_name SEMICOLON pn_add_variable','var_dec',8,'p_var_dec','AnalizadorSintactico.py',198),
  ('var_dec -> LIST tipo pn_var_type pn_value_type ID pn_current_name LEFT_BRACKET cte_int pn_add_variable pn_add_dim_list pn_add_dim RIGHT_BRACKET list1 SEMICOLON','var_dec',14,'p_var_dec','AnalizadorSintactico.py',199),
  ('list1 -> empty','list1',1,'p_list1','AnalizadorSintactico.py',202),
  ('pn_add_dim_list -> empty','pn_add_dim_list',1,'p_pn_add_dim_list','AnalizadorSintactico.py',215),
  ('pn_add_dim -> empty','pn_add_dim',1,'p_pn_add_dim','AnalizadorSintactico.py',221),
  ('pn_var_type -> empty','pn_var_type',1,'p_pn_var_type','AnalizadorSintactico.py',231),
  ('pn_value_type -> empty','pn_value_type',1,'p_pn_value_type','AnalizadorSintactico.py',236),
  ('pn_current_name -> empty','pn_current_name',1,'p_pn_current_name','AnalizadorSintactico.py',241),
  ('pn_add_variable -> empty','pn_add_variable',1,'p_pn_add_variable','AnalizadorSintactico.py',246),
  ('bloque -> asignacion','bloque',1,'p_bloque','AnalizadorSintactico.py',267),
  ('bloque -> condicional','bloque',1,'p_bloque','AnalizadorSintactico.py',268),
  ('bloque -> while','bloque',1,'p_bloque','AnalizadorSintactico.py',269),
  ('bloque -> read','bloque',1,'p_bloque','AnalizadorSintactico.py',270),
  ('bloque -> write','bloque',1,'p_bloque','AnalizadorSintactico.py',271),
  ('bloque -> func_call SEMICOLON','bloque',2,'p_bloque','AnalizadorSintactico.py',272),
  ('asignacion -> var pn_var_assign EQUAL_ASSIGN all_logical SEMICOLON','asignacion',5,'p_asignacion','AnalizadorSintactico.py',275),
  ('pn_var_assign -> empty','pn_var_assign',1,'p_pn_var_asignacion','AnalizadorSintactico.py',293),
  ('pn_operator -> empty','pn_operator',1,'p_pn_operator','AnalizadorSintactico.py',296),
  ('all_logical -> logical_exp pn_all_logical all_logical_rec','all_logical',3,'p_all_logical','AnalizadorSintactico.py',300),
  ('all_logical_rec -> AND pn_operator logical_exp pn_all_logical all_logical_rec','all_logical_rec',5,'p_all_logical_rec','AnalizadorSintactico.py',304),
  ('all_logical_rec -> OR pn_operator logical_exp pn_all_logical all_logical_rec','all_logical_rec',5,'p_all_logical_rec','AnalizadorSintactico.py',305),
  ('all_logical_rec -> empty','all_logical_rec',1,'p_all_logical_rec','AnalizadorSintactico.py',306),
  ('pn_all_logical -> empty','pn_all_logical',1,'p_pn_all_logical','AnalizadorSintactico.py',309),
  ('logical_exp -> exp pn_logical_exp logical_exp_rec','logical_exp',3,'p_logical_exp','AnalizadorSintactico.py',313),
  ('logical_exp_rec -> GREATER_THAN pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',317),
  ('logical_exp_rec -> LESS_THAN pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',318),
  ('logical_exp_rec -> EQUAL_COMPARE pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',319),
  ('logical_exp_rec -> NOT_EQUAL pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',320),
  ('logical_exp_rec -> empty','logical_exp_rec',1,'p_logical_exp_rec','AnalizadorSintactico.py',321),
  ('pn_logical_exp -> empty','pn_logical_exp',1,'p_pn_logical_exp','AnalizadorSintactico.py',324),
  ('exp -> termino pn_exp exp_rec','exp',3,'p_exp','AnalizadorSintactico.py',328),
  ('pn_exp -> empty','pn_exp',1,'p_pn_exp','AnalizadorSintactico.py',332),
  ('exp_rec -> PLUS pn_operator termino pn_exp exp_rec','exp_rec',5,'p_exp_rec','AnalizadorSintactico.py',336),
  ('exp_rec -> MINUS pn_operator termino pn_exp exp_rec','exp_rec',5,'p_exp_rec','AnalizadorSintactico.py',337),
  ('exp_rec -> empty','exp_rec',1,'p_exp_rec','AnalizadorSintactico.py',338),
  ('termino -> factor pn_termino termino_rec','termino',3,'p_termino','AnalizadorSintactico.py',341),
  ('termino_rec -> MULTIPLICATION pn_operator factor pn_termino termino_rec','termino_rec',5,'p_termino_rec','AnalizadorSintactico.py',345),
  ('termino_rec -> DIVISION pn_operator factor pn_termino termino_rec','termino_rec',5,'p_termino_rec','AnalizadorSintactico.py',346),
  ('termino_rec -> empty','termino_rec',1,'p_termino_rec','AnalizadorSintactico.py',347),
  ('pn_termino -> empty','pn_termino',1,'p_pn_termino','AnalizadorSintactico.py',350),
  ('factor -> varcte','factor',1,'p_factor','AnalizadorSintactico.py',354),
  ('factor -> LEFT_PARENTHESIS pn_open_parenthesis all_logical RIGHT_PARENTHESIS pn_close_parenthesis','factor',5,'p_factor','AnalizadorSintactico.py',355),
  ('factor -> func_call empty','factor',2,'p_factor','AnalizadorSintactico.py',356),
  ('varcte -> cte_int pn_add_constant','varcte',2,'p_varcte','AnalizadorSintactico.py',367),
  ('varcte -> cte_float pn_add_constant','varcte',2,'p_varcte','AnalizadorSintactico.py',368),
  ('varcte -> CONST_BOOL pn_add_constant','varcte',2,'p_varcte','AnalizadorSintactico.py',369),
  ('varcte -> CONST_STRING empty empty','varcte',3,'p_varcte','AnalizadorSintactico.py',370),
  ('varcte -> var','varcte',1,'p_varcte','AnalizadorSintactico.py',371),
  ('cte_int -> CONST_INT','cte_int',1,'p_cte_int','AnalizadorSintactico.py',385),
  ('cte_int -> MINUS CONST_INT','cte_int',2,'p_cte_int','AnalizadorSintactico.py',386),
  ('cte_float -> CONST_FLOAT','cte_float',1,'p_cte_float','AnalizadorSintactico.py',393),
  ('cte_float -> MINUS CONST_FLOAT','cte_float',2,'p_cte_float','AnalizadorSintactico.py',394),
  ('pn_add_constant -> empty','pn_add_constant',1,'p_pn_add_constant','AnalizadorSintactico.py',401),
  ('pn_open_parenthesis -> empty','pn_open_parenthesis',1,'p_pn_open_parenthesis','AnalizadorSintactico.py',412),
  ('pn_close_parenthesis -> empty','pn_close_parenthesis',1,'p_pn_close_parenthesis','AnalizadorSintactico.py',415),
  ('tipo -> INT','tipo',1,'p_tipo','AnalizadorSintactico.py',418),
  ('tipo -> FLOAT','tipo',1,'p_tipo','AnalizadorSintactico.py',419),
  ('tipo -> BOOL','tipo',1,'p_tipo','AnalizadorSintactico.py',420),
  ('tipo -> STRING','tipo',1,'p_tipo','AnalizadorSintactico.py',421),
  ('return_module -> tipo','return_module',1,'p_return_module','AnalizadorSintactico.py',425),
  ('return_module -> VOID','return_module',1,'p_return_module','AnalizadorSintactico.py',426),
  ('parametro -> tipo ID parametro_rec','parametro',3,'p_parametro','AnalizadorSintactico.py',430),
  ('parametro -> empty','parametro',1,'p_parametro','AnalizadorSintactico.py',431),
  ('parametro_rec -> COMMA tipo ID parametro_rec','parametro_rec',4,'p_parametro_rec','AnalizadorSintactico.py',438),
  ('parametro_rec -> empty','parametro_rec',1,'p_parametro_rec','AnalizadorSintactico.py',439),
  ('pn_parametro_varTable -> empty','pn_parametro_varTable',1,'p_pn_parametro_varTable','AnalizadorSintactico.py',446),
  ('condicional -> IF LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_condicional LEFT_CURLYB bloque_rec RIGHT_CURLYB condicional_else','condicional',9,'p_condicional','AnalizadorSintactico.py',449),
  ('condicional_else -> ELSE pn_condicional_else LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_condicional_final','condicional_else',6,'p_condicional_else','AnalizadorSintactico.py',452),
  ('condicional_else -> pn_condicional_final','condicional_else',1,'p_condicional_else','AnalizadorSintactico.py',453),
  ('pn_condicional -> empty','pn_condicional',1,'p_pn_condicional','AnalizadorSintactico.py',456),
  ('pn_condicional_else -> empty','pn_condicional_else',1,'p_pn_condicional_else','AnalizadorSintactico.py',465),
  ('pn_condicional_final -> empty','pn_condicional_final',1,'p_pn_condicional_final','AnalizadorSintactico.py',472),
  ('while -> WHILE pn_while LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_while_jump while_loop','while',7,'p_while','AnalizadorSintactico.py',477),
  ('while_loop -> LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_while_jump1','while_loop',4,'p_while_loop','AnalizadorSintactico.py',480),
  ('pn_while -> empty','pn_while',1,'p_pn_while','AnalizadorSintactico.py',483),
  ('pn_while_jump -> empty','pn_while_jump',1,'p_pn_while_jump','AnalizadorSintactico.py',487),
  ('pn_while_jump1 -> empty','pn_while_jump1',1,'p_pn_while_jump1','AnalizadorSintactico.py',496),
  ('read -> READ LEFT_PARENTHESIS var RIGHT_PARENTHESIS SEMICOLON','read',5,'p_read','AnalizadorSintactico.py',503),
  ('write -> WRITE LEFT_PARENTHESIS write_rec RIGHT_PARENTHESIS SEMICOLON','write',5,'p_write','AnalizadorSintactico.py',509),
  ('write_rec -> all_logical pn_write_quad write_rec1','write_rec',3,'p_write_rec','AnalizadorSintactico.py',512),
  ('write_rec1 -> MORE all_logical pn_write_quad write_rec1','write_rec1',4,'p_write_rec1','AnalizadorSintactico.py',515),
  ('write_rec1 -> empty','write_rec1',1,'p_write_rec1','AnalizadorSintactico.py',516),
  ('pn_write_quad -> empty','pn_write_quad',1,'p_pn_write_quad','AnalizadorSintactico.py',519),
  ('func_call -> CALL ID pn_verify_func LEFT_PARENTHESIS pn_param_counter pn_open_parenthesis func_call_rec pn_close_parenthesis RIGHT_PARENTHESIS','func_call',9,'p_func_call','AnalizadorSintactico.py',526),
  ('pn_verify_func -> empty','pn_verify_func',1,'p_pn_verify_func','AnalizadorSintactico.py',549),
  ('pn_param_counter -> empty','pn_param_counter',1,'p_pn_param_counter','AnalizadorSintactico.py',559),
  ('func_call_rec -> all_logical pn_param_match func_call_rec1','func_call_rec',3,'p_func_call_rec','AnalizadorSintactico.py',564),
  ('func_call_rec1 -> COMMA all_logical pn_param_match func_call_rec','func_call_rec1',4,'p_func_call_rec1','AnalizadorSintactico.py',567),
  ('func_call_rec1 -> empty','func_call_rec1',1,'p_func_call_rec1','AnalizadorSintactico.py',568),
  ('pn_param_match -> empty','pn_param_match',1,'p_pn_param_match','AnalizadorSintactico.py',571),
  ('func_dec -> FUNC return_module ID pn_add_func pn_return_type LEFT_PARENTHESIS parametro pn_add_param_vartable RIGHT_PARENTHESIS LEFT_CURLYB vars_rec pn_gen_vartable pn_func_quad bloque_rec func_return RIGHT_CURLYB pn_end_func','func_dec',17,'p_func_dec','AnalizadorSintactico.py',584),
  ('pn_add_param_vartable -> empty','pn_add_param_vartable',1,'p_pn_add_param_vartable','AnalizadorSintactico.py',592),
  ('pn_gen_vartable -> empty','pn_gen_vartable',1,'p_pn_gen_vartable','AnalizadorSintactico.py',604),
  ('pn_func_quad -> empty','pn_func_quad',1,'p_pn_func_quad','AnalizadorSintactico.py',608),
  ('pn_end_main -> empty','pn_end_main',1,'p_pn_end_main','AnalizadorSintactico.py',613),
  ('pn_end_func -> empty','pn_end_func',1,'p_pn_end_func','AnalizadorSintactico.py',618),
  ('pn_add_func -> empty','pn_add_func',1,'p_pn_add_func','AnalizadorSintactico.py',624),
  ('pn_return_type -> empty','pn_return_type',1,'p_pn_return_type','AnalizadorSintactico.py',630),
  ('func_return -> RETURN all_logical SEMICOLON','func_return',3,'p_func_return','AnalizadorSintactico.py',640),
  ('func_return -> RETURN SEMICOLON','func_return',2,'p_func_return','AnalizadorSintactico.py',641),
  ('bloque_rec -> bloque bloque_rec','bloque_rec',2,'p_bloque_rec','AnalizadorSintactico.py',660),
  ('bloque_rec -> empty','bloque_rec',1,'p_bloque_rec','AnalizadorSintactico.py',661),
  ('empty -> <empty>','empty',0,'p_empty','AnalizadorSintactico.py',665),
]
