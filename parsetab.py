
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQUAL_ASSIGNleftIDleftLEFT_CURLYBRIGHT_CURLYBleftLEFT_BRACKETRIGHT_BRACKETleftLESS_THANGREATER_THANNOT_EQUALLESS_EQUALGREATER_EQUALEQUAL_COMPAREleftANDORNEGATIONleftMINUSPLUSleftMULTIPLICATIONDIVISIONleftLEFT_PARENTHESISRIGHT_PARENTHESISAND ATTRIBUTES BOOL CALL CALL CHAR CLASS COLON COMMA CONST_BOOL CONST_CHAR CONST_FLOAT CONST_INT CONST_STRING DEF DIVISION DO ELSE ELSEIF EQUAL_ASSIGN EQUAL_COMPARE FLOAT FUNC GREATER_EQUAL GREATER_THAN ID IF INT LEFT_BRACKET LEFT_CURLYB LEFT_PARENTHESIS LESS_EQUAL LESS_THAN LIST LIST MAIN METHODS MINUS MORE MOREBOOL MULTIPLICATION NEGATION NOT_EQUAL NUMBER OR PERIOD PLUS PROGRAM READ RETURN RIGHT_BRACKET RIGHT_CURLYB RIGHT_PARENTHESIS SEMICOLON STRING STRING VAR VOID WHILE WRITE program : PROGRAM pn_start_program pn_start_func ID SEMICOLON init_dec main  main : MAIN pn_internal_scope LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLYB vars_rec pn_gen_vartable pn_start_func bloque_rec RIGHT_CURLYB pn_end_main vars_rec : var_dec vars_rec\n                    | empty  pn_internal_scope : empty  pn_start_program : empty  pn_start_func : empty  init_dec : empty \n                | dec init_dec  dec :  var_dec \n            | func_dec \n            | class_dec  class_dec : empty var : ID varArray varArray :  empty \n                | pn_array_access1 LEFT_BRACKET pn_array_access2 all_logical pn_array_access3 RIGHT_BRACKET pn_access_return pn_array_access1 : empty  pn_array_access2 : empty  pn_array_access3 : empty  pn_access_return : empty  var_dec :  VAR tipo pn_var_type  pn_value_type ID pn_current_name SEMICOLON pn_add_variable \n                | LIST tipo pn_var_type  pn_value_type ID pn_current_name pn_add_variable LEFT_BRACKET pn_add_dim_list cte_int pn_add_dim RIGHT_BRACKET SEMICOLON pn_add_dim_list : empty pn_add_dim : empty pn_var_type : empty  pn_value_type : empty  pn_current_name : empty  pn_add_variable : empty  bloque : asignacion \n                | condicional \n                | while \n                | read \n                | write \n                | func_call SEMICOLON  asignacion : var pn_var_assign EQUAL_ASSIGN all_logical SEMICOLON  pn_var_assign : empty  pn_operator : empty  all_logical : logical_exp pn_all_logical all_logical_rec  all_logical_rec : AND pn_operator logical_exp pn_all_logical all_logical_rec \n                        | OR pn_operator logical_exp pn_all_logical all_logical_rec \n                        | empty pn_all_logical : empty  logical_exp : exp pn_logical_exp logical_exp_rec  logical_exp_rec : GREATER_THAN pn_operator exp pn_logical_exp logical_exp_rec \n                        | LESS_THAN pn_operator exp pn_logical_exp logical_exp_rec \n                        | EQUAL_COMPARE pn_operator exp pn_logical_exp logical_exp_rec \n                        | NOT_EQUAL pn_operator exp pn_logical_exp logical_exp_rec \n                        | empty pn_logical_exp : empty  exp : termino pn_exp exp_rec  pn_exp : empty  exp_rec : PLUS pn_operator termino pn_exp exp_rec \n                | MINUS pn_operator termino pn_exp exp_rec \n                | empty termino :  factor pn_termino termino_rec  termino_rec : MULTIPLICATION pn_operator factor pn_termino termino_rec \n                    | DIVISION pn_operator factor pn_termino termino_rec \n                    | empty pn_termino : empty  factor : varcte \n                | LEFT_PARENTHESIS pn_open_parenthesis all_logical  RIGHT_PARENTHESIS pn_close_parenthesis \n                | func_call  varcte : cte_int pn_add_constant \n                | cte_float pn_add_constant \n                | CONST_BOOL pn_add_constant \n                | CONST_STRING empty empty\n                | var  cte_int : CONST_INT \n                | MINUS CONST_INT  cte_float : CONST_FLOAT \n                | MINUS CONST_FLOAT  pn_add_constant : empty  pn_open_parenthesis : empty  pn_close_parenthesis : empty  tipo : INT \n            | FLOAT \n            | BOOL \n            | STRING  return_module : tipo \n                | VOID  parametro : tipo ID parametro_rec \n                    | empty  parametro_rec : COMMA tipo ID parametro_rec \n                        | empty  pn_parametro_varTable : empty  condicional : IF LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_condicional LEFT_CURLYB bloque_rec RIGHT_CURLYB condicional_else  condicional_else : ELSE pn_condicional_else LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_condicional_final \n                        | pn_condicional_final  pn_condicional : empty  pn_condicional_else : empty  pn_condicional_final : empty  while : WHILE pn_while LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_while_jump while_loop while_loop : LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_while_jump1  pn_while : empty  pn_while_jump : empty  pn_while_jump1 : empty  read : READ LEFT_PARENTHESIS var RIGHT_PARENTHESIS SEMICOLON  write : WRITE LEFT_PARENTHESIS write_rec RIGHT_PARENTHESIS SEMICOLON  write_rec : all_logical pn_write_quad write_rec1  write_rec1 : MORE all_logical pn_write_quad write_rec1 \n                    | empty  pn_write_quad : empty  func_call : CALL ID pn_verify_func LEFT_PARENTHESIS pn_param_counter pn_open_parenthesis func_call_rec pn_close_parenthesis RIGHT_PARENTHESIS  pn_verify_func : empty  pn_param_counter : empty  func_call_rec : all_logical pn_param_match func_call_rec1  func_call_rec1 : COMMA all_logical pn_param_match func_call_rec\n                        | empty  pn_param_match : empty  func_dec : FUNC return_module pn_return_type ID pn_add_func LEFT_PARENTHESIS parametro pn_add_param_vartable RIGHT_PARENTHESIS LEFT_CURLYB pn_gen_vartable pn_func_quad bloque_rec func_return RIGHT_CURLYB pn_end_func  pn_add_param_vartable : empty  pn_gen_vartable : empty  pn_func_quad : empty  pn_end_main : empty pn_end_func : empty  pn_add_func : empty  pn_return_type : empty  func_return : RETURN all_logical SEMICOLON \n                    | RETURN SEMICOLON  bloque_rec : bloque bloque_rec \n                    | empty empty :  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,18,97,116,117,],[0,-1,-122,-2,-114,]),'ID':([2,3,4,5,6,21,22,23,24,25,26,27,28,29,32,33,34,35,36,38,39,40,47,52,53,54,55,57,59,61,62,63,64,69,77,79,80,81,82,83,90,91,93,95,96,99,102,105,106,108,109,113,114,118,119,121,122,123,124,125,126,127,128,129,130,131,133,134,140,142,143,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,169,170,171,173,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,200,202,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,229,230,232,233,234,235,236,237,238,239,240,241,242,243,247,251,252,253,254,255,256,257,258,259,260,261,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,290,291,292,293,294,297,298,],[-122,-122,-6,7,-7,-122,-75,-76,-77,-78,-122,-122,-79,-80,-122,-25,-122,41,-117,43,-26,44,-122,-122,-122,-4,-122,-28,68,-122,-112,-3,-21,91,91,-29,-30,-31,-32,-33,107,-122,-68,-122,115,-34,91,91,91,-14,-15,-69,-122,91,-122,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,91,-122,91,-113,91,-73,-122,-42,-122,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-122,91,-18,-22,-35,-38,-122,-122,-41,-43,-122,-122,-122,-122,-48,-50,-122,-122,-54,-55,-122,-122,-58,-66,-97,-98,91,-122,-105,91,-122,91,91,-37,91,91,91,91,91,91,91,91,91,91,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-92,91,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-109,-16,-20,-86,-88,-91,-39,-40,-44,-45,-46,-47,-52,-53,-56,-57,-122,-103,91,-93,-96,-122,91,91,-122,-87,]),'IF':([6,47,52,53,54,55,57,61,62,63,64,69,77,79,80,81,82,83,95,99,114,142,143,171,173,197,198,208,242,243,251,269,271,272,283,290,291,293,297,298,],[-7,-122,-122,-122,-4,-122,-28,-122,-112,-3,-21,86,86,-29,-30,-31,-32,-33,-122,-34,-122,86,-113,-22,-35,-97,-98,86,-92,86,-122,-86,-88,-91,-122,-93,-96,86,-122,-87,]),'WHILE':([6,47,52,53,54,55,57,61,62,63,64,69,77,79,80,81,82,83,95,99,114,142,143,171,173,197,198,208,242,243,251,269,271,272,283,290,291,293,297,298,],[-7,-122,-122,-122,-4,-122,-28,-122,-112,-3,-21,87,87,-29,-30,-31,-32,-33,-122,-34,-122,87,-113,-22,-35,-97,-98,87,-92,87,-122,-86,-88,-91,-122,-93,-96,87,-122,-87,]),'READ':([6,47,52,53,54,55,57,61,62,63,64,69,77,79,80,81,82,83,95,99,114,142,143,171,173,197,198,208,242,243,251,269,271,272,283,290,291,293,297,298,],[-7,-122,-122,-122,-4,-122,-28,-122,-112,-3,-21,88,88,-29,-30,-31,-32,-33,-122,-34,-122,88,-113,-22,-35,-97,-98,88,-92,88,-122,-86,-88,-91,-122,-93,-96,88,-122,-87,]),'WRITE':([6,47,52,53,54,55,57,61,62,63,64,69,77,79,80,81,82,83,95,99,114,142,143,171,173,197,198,208,242,243,251,269,271,272,283,290,291,293,297,298,],[-7,-122,-122,-122,-4,-122,-28,-122,-112,-3,-21,89,89,-29,-30,-31,-32,-33,-122,-34,-122,89,-113,-22,-35,-97,-98,89,-92,89,-122,-86,-88,-91,-122,-93,-96,89,-122,-87,]),'CALL':([6,47,52,53,54,55,57,61,62,63,64,69,77,79,80,81,82,83,91,93,95,99,102,106,108,109,113,114,118,119,121,122,123,124,125,126,127,128,129,130,131,133,134,140,142,143,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,169,170,171,173,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,200,202,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,229,230,232,233,234,235,236,237,238,239,240,241,242,243,247,251,252,253,254,255,256,257,258,259,260,261,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,290,291,292,293,294,297,298,],[-7,-122,-122,-122,-4,-122,-28,-122,-112,-3,-21,90,90,-29,-30,-31,-32,-33,-122,-68,-122,-34,90,90,-14,-15,-69,-122,90,-122,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,90,-122,90,-113,90,-73,-122,-42,-122,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-122,90,-18,-22,-35,-38,-122,-122,-41,-43,-122,-122,-122,-122,-48,-50,-122,-122,-54,-55,-122,-122,-58,-66,-97,-98,90,-122,-105,90,-122,90,90,-37,90,90,90,90,90,90,90,90,90,90,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-92,90,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-109,-16,-20,-86,-88,-91,-39,-40,-44,-45,-46,-47,-52,-53,-56,-57,-122,-103,90,-93,-96,-122,90,90,-122,-87,]),'RIGHT_CURLYB':([6,47,52,53,54,55,57,61,62,63,64,69,76,77,78,79,80,81,82,83,98,99,171,173,197,198,205,208,228,231,242,243,250,251,262,269,271,272,283,290,291,293,295,297,298,],[-7,-122,-122,-122,-4,-122,-28,-122,-112,-3,-21,-122,97,-122,-121,-29,-30,-31,-32,-33,-120,-34,-22,-35,-97,-98,226,-122,-119,251,-92,-122,-118,-122,283,-86,-88,-91,-122,-93,-96,-122,297,-122,-87,]),'SEMICOLON':([7,43,48,49,84,91,93,108,109,113,121,122,123,124,125,126,127,128,129,130,131,133,141,145,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,177,180,181,186,187,190,191,194,195,206,207,227,229,230,232,233,234,235,236,237,238,239,240,241,247,252,253,254,255,256,257,258,259,260,261,267,268,273,274,275,276,277,278,279,280,281,282,284,],[8,-122,55,-27,99,-122,-68,-14,-15,-69,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,171,173,-122,-42,-122,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,197,198,-38,-41,-43,-48,-50,-54,-55,-58,-66,228,-122,250,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-16,-20,-39,-40,-44,-45,-46,-47,-52,-53,-56,-57,-103,]),'MAIN':([8,9,10,11,12,13,14,20,55,57,64,171,226,248,249,],[-122,19,-8,-122,-10,-11,-12,-9,-122,-28,-21,-22,-122,-110,-115,]),'VAR':([8,10,11,12,13,14,47,53,55,57,64,171,226,248,249,],[15,-13,15,-10,-11,-12,15,15,-122,-28,-21,-22,-122,-110,-115,]),'LIST':([8,10,11,12,13,14,47,53,55,57,64,171,226,248,249,],[16,-13,16,-10,-11,-12,16,16,-122,-28,-21,-22,-122,-110,-115,]),'FUNC':([8,10,11,12,13,14,55,57,64,171,226,248,249,],[17,-13,17,-10,-11,-12,-122,-28,-21,-22,-122,-110,-115,]),'INT':([15,16,17,51,74,],[22,22,22,22,22,]),'FLOAT':([15,16,17,51,74,],[23,23,23,23,23,]),'BOOL':([15,16,17,51,74,],[24,24,24,24,24,]),'STRING':([15,16,17,51,74,],[25,25,25,25,25,]),'VOID':([17,],[29,]),'LEFT_PARENTHESIS':([19,30,31,41,45,46,86,87,88,89,91,93,102,103,104,106,107,108,109,113,118,119,121,122,123,124,125,126,127,128,129,130,131,133,134,138,139,140,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,169,170,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,200,202,203,206,207,209,210,211,212,213,214,215,216,217,218,219,223,229,230,232,233,234,235,236,237,238,239,240,241,247,252,253,254,255,256,257,258,259,260,261,266,267,268,273,274,275,276,277,278,279,280,281,282,284,286,292,294,],[-122,37,-5,-122,51,-116,102,-122,105,106,-122,-68,119,134,-94,119,-122,-14,-15,-69,119,-122,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,119,168,-104,-122,119,-73,-122,-42,-122,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-122,119,-18,-38,-122,-122,-41,-43,-122,-122,-122,-122,-48,-50,-122,-122,-54,-55,-122,-122,-58,-66,119,-122,-105,119,-122,119,-37,119,119,119,119,119,119,119,119,119,119,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-109,-16,-20,-39,-40,-44,-45,-46,-47,-52,-53,-56,-57,-103,119,-122,119,]),'RIGHT_PARENTHESIS':([37,51,58,60,66,67,68,73,75,91,93,108,109,113,115,120,121,122,123,124,125,126,127,128,129,130,131,133,135,136,137,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,167,174,177,180,181,186,187,190,191,194,195,199,201,207,222,229,230,232,233,234,235,236,237,238,239,240,241,244,245,246,247,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,273,274,275,276,277,278,279,280,281,282,284,285,287,296,],[42,-122,-122,-82,72,-111,-122,-81,-84,-122,-68,-14,-15,-69,-122,148,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,164,165,-122,-83,-122,-42,-122,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,196,-122,-102,207,-38,-41,-43,-48,-50,-54,-55,-58,-66,-99,-101,-122,-122,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-100,284,-122,-109,-16,-20,-39,-40,-44,-45,-46,-47,-52,-53,-56,-57,-103,-106,-108,-107,]),'LEFT_CURLYB':([42,72,148,175,176,196,220,221,270,288,289,],[47,95,-122,208,-89,-122,243,-95,-122,293,-90,]),'LEFT_BRACKET':([44,49,50,56,57,91,109,110,],[-122,-27,-122,65,-28,-122,-17,140,]),'RETURN':([62,77,78,79,80,81,82,83,95,98,99,114,142,143,172,173,197,198,242,251,269,271,272,283,290,291,297,298,],[-112,-122,-121,-29,-30,-31,-32,-33,-122,-120,-34,-122,-122,-113,206,-35,-97,-98,-92,-122,-86,-88,-91,-122,-93,-96,-122,-87,]),'CONST_INT':([65,70,71,91,93,94,102,106,108,109,113,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,140,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,169,170,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,200,202,203,206,207,209,210,211,212,213,214,215,216,217,218,219,223,229,230,232,233,234,235,236,237,238,239,240,241,247,252,253,254,255,256,257,258,259,260,261,266,267,268,273,274,275,276,277,278,279,280,281,282,284,286,292,294,],[-122,93,-23,-122,-68,113,93,93,-14,-15,-69,93,-122,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,113,-70,93,-122,93,-73,-122,-42,-122,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-122,93,-18,-38,-122,-122,-41,-43,-122,-122,-122,-122,-48,-50,-122,-122,-54,-55,-122,-122,-58,-66,93,-122,-105,93,-122,93,-37,93,93,93,93,93,93,93,93,93,93,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-109,-16,-20,-39,-40,-44,-45,-46,-47,-52,-53,-56,-57,-103,93,-122,93,]),'MINUS':([65,70,71,91,93,102,106,108,109,113,118,119,121,122,123,124,125,126,127,128,129,130,131,133,134,140,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,169,170,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,200,202,203,206,207,209,210,211,212,213,214,215,216,217,218,219,223,229,230,232,233,234,235,236,237,238,239,240,241,247,252,253,254,255,256,257,258,259,260,261,266,267,268,273,274,275,276,277,278,279,280,281,282,284,286,292,294,],[-122,94,-23,-122,-68,132,132,-14,-15,-69,132,-122,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,132,-122,132,-73,-122,-42,-122,-49,189,-51,-122,-59,-63,-72,-64,-65,-122,-71,-122,132,-18,-38,-122,-122,-41,-43,-122,-122,-122,-122,-48,-50,-122,-122,-54,-55,-122,-122,-58,-66,132,-122,-105,132,-122,132,-37,132,132,132,132,132,132,132,132,132,132,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,189,189,-122,-122,-109,-16,-20,-39,-40,-44,-45,-46,-47,-52,-53,-56,-57,-103,132,-122,132,]),'COMMA':([68,91,93,108,109,113,115,121,122,123,124,125,126,127,128,129,130,131,133,149,150,151,152,153,154,155,156,157,158,159,160,161,162,177,180,181,186,187,190,191,194,195,207,229,230,232,233,234,235,236,237,238,239,240,241,246,247,252,253,254,255,256,257,258,259,260,261,265,266,267,268,273,274,275,276,277,278,279,280,281,282,284,],[74,-122,-68,-14,-15,-69,74,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,-122,-42,-122,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-38,-41,-43,-48,-50,-54,-55,-58,-66,-122,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,286,-109,-16,-20,-39,-40,-44,-45,-46,-47,-52,-53,-56,-57,-103,]),'EQUAL_ASSIGN':([85,91,100,101,108,109,247,267,268,],[-122,-122,118,-36,-14,-15,-122,-16,-20,]),'MULTIPLICATION':([91,93,108,109,113,124,125,126,127,128,129,130,131,133,155,156,157,158,159,160,161,162,195,207,229,230,240,241,247,260,261,267,268,284,],[-122,-68,-14,-15,-69,-122,-60,-62,-122,-122,-122,-122,-67,-70,192,-59,-63,-72,-64,-65,-122,-71,-66,-122,-61,-74,-122,-122,-122,192,192,-16,-20,-103,]),'DIVISION':([91,93,108,109,113,124,125,126,127,128,129,130,131,133,155,156,157,158,159,160,161,162,195,207,229,230,240,241,247,260,261,267,268,284,],[-122,-68,-14,-15,-69,-122,-60,-62,-122,-122,-122,-122,-67,-70,193,-59,-63,-72,-64,-65,-122,-71,-66,-122,-61,-74,-122,-122,-122,193,193,-16,-20,-103,]),'PLUS':([91,93,108,109,113,123,124,125,126,127,128,129,130,131,133,153,154,155,156,157,158,159,160,161,162,191,194,195,207,229,230,238,239,240,241,247,258,259,260,261,267,268,281,282,284,],[-122,-68,-14,-15,-69,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,188,-51,-122,-59,-63,-72,-64,-65,-122,-71,-55,-58,-66,-122,-61,-74,-122,-122,-122,-122,-122,188,188,-122,-122,-16,-20,-56,-57,-103,]),'GREATER_THAN':([91,93,108,109,113,122,123,124,125,126,127,128,129,130,131,133,151,152,153,154,155,156,157,158,159,160,161,162,187,190,191,194,195,207,229,230,234,235,236,237,238,239,240,241,247,254,255,256,257,258,259,260,261,267,268,279,280,281,282,284,],[-122,-68,-14,-15,-69,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,182,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-50,-54,-55,-58,-66,-122,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,182,182,182,182,-122,-122,-122,-122,-16,-20,-52,-53,-56,-57,-103,]),'LESS_THAN':([91,93,108,109,113,122,123,124,125,126,127,128,129,130,131,133,151,152,153,154,155,156,157,158,159,160,161,162,187,190,191,194,195,207,229,230,234,235,236,237,238,239,240,241,247,254,255,256,257,258,259,260,261,267,268,279,280,281,282,284,],[-122,-68,-14,-15,-69,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,183,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-50,-54,-55,-58,-66,-122,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,183,183,183,183,-122,-122,-122,-122,-16,-20,-52,-53,-56,-57,-103,]),'EQUAL_COMPARE':([91,93,108,109,113,122,123,124,125,126,127,128,129,130,131,133,151,152,153,154,155,156,157,158,159,160,161,162,187,190,191,194,195,207,229,230,234,235,236,237,238,239,240,241,247,254,255,256,257,258,259,260,261,267,268,279,280,281,282,284,],[-122,-68,-14,-15,-69,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,184,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-50,-54,-55,-58,-66,-122,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,184,184,184,184,-122,-122,-122,-122,-16,-20,-52,-53,-56,-57,-103,]),'NOT_EQUAL':([91,93,108,109,113,122,123,124,125,126,127,128,129,130,131,133,151,152,153,154,155,156,157,158,159,160,161,162,187,190,191,194,195,207,229,230,234,235,236,237,238,239,240,241,247,254,255,256,257,258,259,260,261,267,268,279,280,281,282,284,],[-122,-68,-14,-15,-69,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,185,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-50,-54,-55,-58,-66,-122,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,185,185,185,185,-122,-122,-122,-122,-16,-20,-52,-53,-56,-57,-103,]),'AND':([91,93,108,109,113,121,122,123,124,125,126,127,128,129,130,131,133,149,150,151,152,153,154,155,156,157,158,159,160,161,162,181,186,187,190,191,194,195,207,229,230,232,233,234,235,236,237,238,239,240,241,247,252,253,254,255,256,257,258,259,260,261,267,268,275,276,277,278,279,280,281,282,284,],[-122,-68,-14,-15,-69,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,178,-42,-122,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-43,-48,-50,-54,-55,-58,-66,-122,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,178,178,-122,-122,-122,-122,-122,-122,-122,-122,-16,-20,-44,-45,-46,-47,-52,-53,-56,-57,-103,]),'OR':([91,93,108,109,113,121,122,123,124,125,126,127,128,129,130,131,133,149,150,151,152,153,154,155,156,157,158,159,160,161,162,181,186,187,190,191,194,195,207,229,230,232,233,234,235,236,237,238,239,240,241,247,252,253,254,255,256,257,258,259,260,261,267,268,275,276,277,278,279,280,281,282,284,],[-122,-68,-14,-15,-69,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,179,-42,-122,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-43,-48,-50,-54,-55,-58,-66,-122,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,179,179,-122,-122,-122,-122,-122,-122,-122,-122,-16,-20,-44,-45,-46,-47,-52,-53,-56,-57,-103,]),'MORE':([91,93,108,109,113,121,122,123,124,125,126,127,128,129,130,131,133,137,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,167,177,180,181,186,187,190,191,194,195,207,222,229,230,232,233,234,235,236,237,238,239,240,241,244,247,252,253,254,255,256,257,258,259,260,261,267,268,273,274,275,276,277,278,279,280,281,282,284,],[-122,-68,-14,-15,-69,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,-122,-122,-42,-122,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,200,-102,-38,-41,-43,-48,-50,-54,-55,-58,-66,-122,-122,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,200,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-16,-20,-39,-40,-44,-45,-46,-47,-52,-53,-56,-57,-103,]),'RIGHT_BRACKET':([91,92,93,108,109,111,112,113,121,122,123,124,125,126,127,128,129,130,131,133,149,150,151,152,153,154,155,156,157,158,159,160,161,162,177,180,181,186,187,190,191,194,195,204,207,224,225,229,230,232,233,234,235,236,237,238,239,240,241,247,252,253,254,255,256,257,258,259,260,261,267,268,273,274,275,276,277,278,279,280,281,282,284,],[-122,-122,-68,-14,-15,141,-24,-69,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,-122,-42,-122,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-38,-41,-43,-48,-50,-54,-55,-58,-66,-122,-122,247,-19,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-16,-20,-39,-40,-44,-45,-46,-47,-52,-53,-56,-57,-103,]),'CONST_BOOL':([91,93,102,106,108,109,113,118,119,121,122,123,124,125,126,127,128,129,130,131,133,134,140,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,169,170,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,200,202,203,206,207,209,210,211,212,213,214,215,216,217,218,219,223,229,230,232,233,234,235,236,237,238,239,240,241,247,252,253,254,255,256,257,258,259,260,261,266,267,268,273,274,275,276,277,278,279,280,281,282,284,286,292,294,],[-122,-68,129,129,-14,-15,-69,129,-122,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,129,-122,129,-73,-122,-42,-122,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-122,129,-18,-38,-122,-122,-41,-43,-122,-122,-122,-122,-48,-50,-122,-122,-54,-55,-122,-122,-58,-66,129,-122,-105,129,-122,129,-37,129,129,129,129,129,129,129,129,129,129,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-109,-16,-20,-39,-40,-44,-45,-46,-47,-52,-53,-56,-57,-103,129,-122,129,]),'CONST_STRING':([91,93,102,106,108,109,113,118,119,121,122,123,124,125,126,127,128,129,130,131,133,134,140,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,169,170,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,200,202,203,206,207,209,210,211,212,213,214,215,216,217,218,219,223,229,230,232,233,234,235,236,237,238,239,240,241,247,252,253,254,255,256,257,258,259,260,261,266,267,268,273,274,275,276,277,278,279,280,281,282,284,286,292,294,],[-122,-68,130,130,-14,-15,-69,130,-122,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,-70,130,-122,130,-73,-122,-42,-122,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-122,130,-18,-38,-122,-122,-41,-43,-122,-122,-122,-122,-48,-50,-122,-122,-54,-55,-122,-122,-58,-66,130,-122,-105,130,-122,130,-37,130,130,130,130,130,130,130,130,130,130,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-109,-16,-20,-39,-40,-44,-45,-46,-47,-52,-53,-56,-57,-103,130,-122,130,]),'CONST_FLOAT':([91,93,102,106,108,109,113,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,140,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,169,170,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,200,202,203,206,207,209,210,211,212,213,214,215,216,217,218,219,223,229,230,232,233,234,235,236,237,238,239,240,241,247,252,253,254,255,256,257,258,259,260,261,266,267,268,273,274,275,276,277,278,279,280,281,282,284,286,292,294,],[-122,-68,133,133,-14,-15,-69,133,-122,-122,-122,-122,-122,-60,-62,-122,-122,-122,-122,-67,162,-70,133,-122,133,-73,-122,-42,-122,-49,-122,-51,-122,-59,-63,-72,-64,-65,-122,-71,-122,133,-18,-38,-122,-122,-41,-43,-122,-122,-122,-122,-48,-50,-122,-122,-54,-55,-122,-122,-58,-66,133,-122,-105,133,-122,133,-37,133,133,133,133,133,133,133,133,133,133,-61,-74,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-109,-16,-20,-39,-40,-44,-45,-46,-47,-52,-53,-56,-57,-103,133,-122,133,]),'ELSE':([251,],[270,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'pn_start_program':([2,],[3,]),'empty':([2,3,8,11,19,21,26,27,32,34,41,43,44,47,50,51,52,53,55,58,61,65,68,69,77,85,87,91,92,95,97,107,114,115,119,121,122,123,124,127,128,129,130,137,140,142,148,149,151,153,155,161,166,168,178,179,182,183,184,185,188,189,192,193,196,202,204,207,208,222,226,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,251,252,253,254,255,256,257,258,259,260,261,265,270,283,292,293,297,],[4,6,10,10,31,33,33,36,39,39,46,49,49,54,57,60,62,54,57,67,6,71,75,78,78,101,104,109,112,62,117,139,143,75,147,150,152,154,156,158,158,158,161,167,170,78,176,180,186,190,194,195,201,203,210,210,210,210,210,210,210,210,210,210,221,147,225,230,78,167,249,150,150,152,152,152,152,154,154,156,156,78,201,230,266,268,272,180,180,186,186,186,186,190,190,194,194,287,289,291,266,78,272,]),'pn_start_func':([3,61,],[5,69,]),'init_dec':([8,11,],[9,20,]),'dec':([8,11,],[11,11,]),'var_dec':([8,11,47,53,],[12,12,53,53,]),'func_dec':([8,11,],[13,13,]),'class_dec':([8,11,],[14,14,]),'main':([9,],[18,]),'tipo':([15,16,17,51,74,],[21,26,28,59,96,]),'return_module':([17,],[27,]),'pn_internal_scope':([19,],[30,]),'pn_var_type':([21,26,],[32,34,]),'pn_return_type':([27,],[35,]),'pn_value_type':([32,34,],[38,40,]),'pn_add_func':([41,],[45,]),'pn_current_name':([43,44,],[48,50,]),'vars_rec':([47,53,],[52,63,]),'pn_add_variable':([50,55,],[56,64,]),'parametro':([51,],[58,]),'pn_gen_vartable':([52,95,],[61,114,]),'pn_add_param_vartable':([58,],[66,]),'pn_add_dim_list':([65,],[70,]),'parametro_rec':([68,115,],[73,144,]),'bloque_rec':([69,77,142,208,243,293,],[76,98,172,231,262,295,]),'bloque':([69,77,142,208,243,293,],[77,77,77,77,77,77,]),'asignacion':([69,77,142,208,243,293,],[79,79,79,79,79,79,]),'condicional':([69,77,142,208,243,293,],[80,80,80,80,80,80,]),'while':([69,77,142,208,243,293,],[81,81,81,81,81,81,]),'read':([69,77,142,208,243,293,],[82,82,82,82,82,82,]),'write':([69,77,142,208,243,293,],[83,83,83,83,83,83,]),'func_call':([69,77,102,106,118,134,142,146,169,200,206,208,209,211,212,213,214,215,216,217,218,219,223,243,286,293,294,],[84,84,126,126,126,126,84,126,126,126,126,84,126,126,126,126,126,126,126,126,126,126,126,84,126,84,126,]),'var':([69,77,102,105,106,118,134,142,146,169,200,206,208,209,211,212,213,214,215,216,217,218,219,223,243,286,293,294,],[85,85,131,135,131,131,131,85,131,131,131,131,85,131,131,131,131,131,131,131,131,131,131,131,85,131,85,131,]),'cte_int':([70,102,106,118,134,146,169,200,206,209,211,212,213,214,215,216,217,218,219,223,286,294,],[92,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'pn_var_assign':([85,],[100,]),'pn_while':([87,],[103,]),'varArray':([91,],[108,]),'pn_array_access1':([91,],[110,]),'pn_add_dim':([92,],[111,]),'pn_end_main':([97,],[116,]),'all_logical':([102,106,118,134,146,169,200,206,223,286,294,],[120,137,145,163,174,204,222,227,246,292,246,]),'logical_exp':([102,106,118,134,146,169,200,206,209,211,223,286,294,],[121,121,121,121,121,121,121,121,232,233,121,121,121,]),'exp':([102,106,118,134,146,169,200,206,209,211,212,213,214,215,223,286,294,],[122,122,122,122,122,122,122,122,122,122,234,235,236,237,122,122,122,]),'termino':([102,106,118,134,146,169,200,206,209,211,212,213,214,215,216,217,223,286,294,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,238,239,123,123,123,]),'factor':([102,106,118,134,146,169,200,206,209,211,212,213,214,215,216,217,218,219,223,286,294,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,240,241,124,124,124,]),'varcte':([102,106,118,134,146,169,200,206,209,211,212,213,214,215,216,217,218,219,223,286,294,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'cte_float':([102,106,118,134,146,169,200,206,209,211,212,213,214,215,216,217,218,219,223,286,294,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'write_rec':([106,],[136,]),'pn_verify_func':([107,],[138,]),'pn_func_quad':([114,],[142,]),'pn_open_parenthesis':([119,202,],[146,223,]),'pn_all_logical':([121,232,233,],[149,252,253,]),'pn_logical_exp':([122,234,235,236,237,],[151,254,255,256,257,]),'pn_exp':([123,238,239,],[153,258,259,]),'pn_termino':([124,240,241,],[155,260,261,]),'pn_add_constant':([127,128,129,],[157,159,160,]),'pn_write_quad':([137,222,],[166,244,]),'pn_array_access2':([140,],[169,]),'pn_condicional':([148,],[175,]),'all_logical_rec':([149,252,253,],[177,273,274,]),'logical_exp_rec':([151,254,255,256,257,],[181,275,276,277,278,]),'exp_rec':([153,258,259,],[187,279,280,]),'termino_rec':([155,260,261,],[191,281,282,]),'write_rec1':([166,244,],[199,263,]),'pn_param_counter':([168,],[202,]),'func_return':([172,],[205,]),'pn_operator':([178,179,182,183,184,185,188,189,192,193,],[209,211,212,213,214,215,216,217,218,219,]),'pn_while_jump':([196,],[220,]),'pn_array_access3':([204,],[224,]),'pn_close_parenthesis':([207,245,],[229,264,]),'while_loop':([220,],[242,]),'func_call_rec':([223,294,],[245,296,]),'pn_end_func':([226,],[248,]),'pn_param_match':([246,292,],[265,294,]),'pn_access_return':([247,],[267,]),'condicional_else':([251,],[269,]),'pn_condicional_final':([251,297,],[271,298,]),'func_call_rec1':([265,],[285,]),'pn_condicional_else':([270,],[288,]),'pn_while_jump1':([283,],[290,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM pn_start_program pn_start_func ID SEMICOLON init_dec main','program',7,'p_program','AnalizadorSintactico.py',44),
  ('main -> MAIN pn_internal_scope LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLYB vars_rec pn_gen_vartable pn_start_func bloque_rec RIGHT_CURLYB pn_end_main','main',11,'p_main','AnalizadorSintactico.py',51),
  ('vars_rec -> var_dec vars_rec','vars_rec',2,'p_vars_rec','AnalizadorSintactico.py',54),
  ('vars_rec -> empty','vars_rec',1,'p_vars_rec','AnalizadorSintactico.py',55),
  ('pn_internal_scope -> empty','pn_internal_scope',1,'p_pn_internal_scope','AnalizadorSintactico.py',58),
  ('pn_start_program -> empty','pn_start_program',1,'p_pn_start_program','AnalizadorSintactico.py',61),
  ('pn_start_func -> empty','pn_start_func',1,'p_pn_start_func','AnalizadorSintactico.py',64),
  ('init_dec -> empty','init_dec',1,'p_init_dec','AnalizadorSintactico.py',73),
  ('init_dec -> dec init_dec','init_dec',2,'p_init_dec','AnalizadorSintactico.py',74),
  ('dec -> var_dec','dec',1,'p_dec','AnalizadorSintactico.py',77),
  ('dec -> func_dec','dec',1,'p_dec','AnalizadorSintactico.py',78),
  ('dec -> class_dec','dec',1,'p_dec','AnalizadorSintactico.py',79),
  ('class_dec -> empty','class_dec',1,'p_class_dec','AnalizadorSintactico.py',82),
  ('var -> ID varArray','var',2,'p_var','AnalizadorSintactico.py',85),
  ('varArray -> empty','varArray',1,'p_varArray','AnalizadorSintactico.py',90),
  ('varArray -> pn_array_access1 LEFT_BRACKET pn_array_access2 all_logical pn_array_access3 RIGHT_BRACKET pn_access_return','varArray',7,'p_varArray','AnalizadorSintactico.py',91),
  ('pn_array_access1 -> empty','pn_array_access1',1,'p_pn_array_access1','AnalizadorSintactico.py',94),
  ('pn_array_access2 -> empty','pn_array_access2',1,'p_pn_array_access2','AnalizadorSintactico.py',106),
  ('pn_array_access3 -> empty','pn_array_access3',1,'p_pn_array_access3','AnalizadorSintactico.py',121),
  ('pn_access_return -> empty','pn_access_return',1,'p_pn_access_return','AnalizadorSintactico.py',139),
  ('var_dec -> VAR tipo pn_var_type pn_value_type ID pn_current_name SEMICOLON pn_add_variable','var_dec',8,'p_var_dec','AnalizadorSintactico.py',157),
  ('var_dec -> LIST tipo pn_var_type pn_value_type ID pn_current_name pn_add_variable LEFT_BRACKET pn_add_dim_list cte_int pn_add_dim RIGHT_BRACKET SEMICOLON','var_dec',13,'p_var_dec','AnalizadorSintactico.py',158),
  ('pn_add_dim_list -> empty','pn_add_dim_list',1,'p_pn_add_dim_list','AnalizadorSintactico.py',162),
  ('pn_add_dim -> empty','pn_add_dim',1,'p_pn_add_dim','AnalizadorSintactico.py',166),
  ('pn_var_type -> empty','pn_var_type',1,'p_pn_var_type','AnalizadorSintactico.py',176),
  ('pn_value_type -> empty','pn_value_type',1,'p_pn_value_type','AnalizadorSintactico.py',181),
  ('pn_current_name -> empty','pn_current_name',1,'p_pn_current_name','AnalizadorSintactico.py',186),
  ('pn_add_variable -> empty','pn_add_variable',1,'p_pn_add_variable','AnalizadorSintactico.py',191),
  ('bloque -> asignacion','bloque',1,'p_bloque','AnalizadorSintactico.py',196),
  ('bloque -> condicional','bloque',1,'p_bloque','AnalizadorSintactico.py',197),
  ('bloque -> while','bloque',1,'p_bloque','AnalizadorSintactico.py',198),
  ('bloque -> read','bloque',1,'p_bloque','AnalizadorSintactico.py',199),
  ('bloque -> write','bloque',1,'p_bloque','AnalizadorSintactico.py',200),
  ('bloque -> func_call SEMICOLON','bloque',2,'p_bloque','AnalizadorSintactico.py',201),
  ('asignacion -> var pn_var_assign EQUAL_ASSIGN all_logical SEMICOLON','asignacion',5,'p_asignacion','AnalizadorSintactico.py',204),
  ('pn_var_assign -> empty','pn_var_assign',1,'p_pn_var_asignacion','AnalizadorSintactico.py',226),
  ('pn_operator -> empty','pn_operator',1,'p_pn_operator','AnalizadorSintactico.py',229),
  ('all_logical -> logical_exp pn_all_logical all_logical_rec','all_logical',3,'p_all_logical','AnalizadorSintactico.py',233),
  ('all_logical_rec -> AND pn_operator logical_exp pn_all_logical all_logical_rec','all_logical_rec',5,'p_all_logical_rec','AnalizadorSintactico.py',237),
  ('all_logical_rec -> OR pn_operator logical_exp pn_all_logical all_logical_rec','all_logical_rec',5,'p_all_logical_rec','AnalizadorSintactico.py',238),
  ('all_logical_rec -> empty','all_logical_rec',1,'p_all_logical_rec','AnalizadorSintactico.py',239),
  ('pn_all_logical -> empty','pn_all_logical',1,'p_pn_all_logical','AnalizadorSintactico.py',242),
  ('logical_exp -> exp pn_logical_exp logical_exp_rec','logical_exp',3,'p_logical_exp','AnalizadorSintactico.py',246),
  ('logical_exp_rec -> GREATER_THAN pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',250),
  ('logical_exp_rec -> LESS_THAN pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',251),
  ('logical_exp_rec -> EQUAL_COMPARE pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',252),
  ('logical_exp_rec -> NOT_EQUAL pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',253),
  ('logical_exp_rec -> empty','logical_exp_rec',1,'p_logical_exp_rec','AnalizadorSintactico.py',254),
  ('pn_logical_exp -> empty','pn_logical_exp',1,'p_pn_logical_exp','AnalizadorSintactico.py',257),
  ('exp -> termino pn_exp exp_rec','exp',3,'p_exp','AnalizadorSintactico.py',261),
  ('pn_exp -> empty','pn_exp',1,'p_pn_exp','AnalizadorSintactico.py',265),
  ('exp_rec -> PLUS pn_operator termino pn_exp exp_rec','exp_rec',5,'p_exp_rec','AnalizadorSintactico.py',269),
  ('exp_rec -> MINUS pn_operator termino pn_exp exp_rec','exp_rec',5,'p_exp_rec','AnalizadorSintactico.py',270),
  ('exp_rec -> empty','exp_rec',1,'p_exp_rec','AnalizadorSintactico.py',271),
  ('termino -> factor pn_termino termino_rec','termino',3,'p_termino','AnalizadorSintactico.py',274),
  ('termino_rec -> MULTIPLICATION pn_operator factor pn_termino termino_rec','termino_rec',5,'p_termino_rec','AnalizadorSintactico.py',278),
  ('termino_rec -> DIVISION pn_operator factor pn_termino termino_rec','termino_rec',5,'p_termino_rec','AnalizadorSintactico.py',279),
  ('termino_rec -> empty','termino_rec',1,'p_termino_rec','AnalizadorSintactico.py',280),
  ('pn_termino -> empty','pn_termino',1,'p_pn_termino','AnalizadorSintactico.py',283),
  ('factor -> varcte','factor',1,'p_factor','AnalizadorSintactico.py',287),
  ('factor -> LEFT_PARENTHESIS pn_open_parenthesis all_logical RIGHT_PARENTHESIS pn_close_parenthesis','factor',5,'p_factor','AnalizadorSintactico.py',288),
  ('factor -> func_call','factor',1,'p_factor','AnalizadorSintactico.py',289),
  ('varcte -> cte_int pn_add_constant','varcte',2,'p_varcte','AnalizadorSintactico.py',293),
  ('varcte -> cte_float pn_add_constant','varcte',2,'p_varcte','AnalizadorSintactico.py',294),
  ('varcte -> CONST_BOOL pn_add_constant','varcte',2,'p_varcte','AnalizadorSintactico.py',295),
  ('varcte -> CONST_STRING empty empty','varcte',3,'p_varcte','AnalizadorSintactico.py',296),
  ('varcte -> var','varcte',1,'p_varcte','AnalizadorSintactico.py',297),
  ('cte_int -> CONST_INT','cte_int',1,'p_cte_int','AnalizadorSintactico.py',312),
  ('cte_int -> MINUS CONST_INT','cte_int',2,'p_cte_int','AnalizadorSintactico.py',313),
  ('cte_float -> CONST_FLOAT','cte_float',1,'p_cte_float','AnalizadorSintactico.py',320),
  ('cte_float -> MINUS CONST_FLOAT','cte_float',2,'p_cte_float','AnalizadorSintactico.py',321),
  ('pn_add_constant -> empty','pn_add_constant',1,'p_pn_add_constant','AnalizadorSintactico.py',328),
  ('pn_open_parenthesis -> empty','pn_open_parenthesis',1,'p_pn_open_parenthesis','AnalizadorSintactico.py',340),
  ('pn_close_parenthesis -> empty','pn_close_parenthesis',1,'p_pn_close_parenthesis','AnalizadorSintactico.py',343),
  ('tipo -> INT','tipo',1,'p_tipo','AnalizadorSintactico.py',346),
  ('tipo -> FLOAT','tipo',1,'p_tipo','AnalizadorSintactico.py',347),
  ('tipo -> BOOL','tipo',1,'p_tipo','AnalizadorSintactico.py',348),
  ('tipo -> STRING','tipo',1,'p_tipo','AnalizadorSintactico.py',349),
  ('return_module -> tipo','return_module',1,'p_return_module','AnalizadorSintactico.py',353),
  ('return_module -> VOID','return_module',1,'p_return_module','AnalizadorSintactico.py',354),
  ('parametro -> tipo ID parametro_rec','parametro',3,'p_parametro','AnalizadorSintactico.py',358),
  ('parametro -> empty','parametro',1,'p_parametro','AnalizadorSintactico.py',359),
  ('parametro_rec -> COMMA tipo ID parametro_rec','parametro_rec',4,'p_parametro_rec','AnalizadorSintactico.py',366),
  ('parametro_rec -> empty','parametro_rec',1,'p_parametro_rec','AnalizadorSintactico.py',367),
  ('pn_parametro_varTable -> empty','pn_parametro_varTable',1,'p_pn_parametro_varTable','AnalizadorSintactico.py',374),
  ('condicional -> IF LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_condicional LEFT_CURLYB bloque_rec RIGHT_CURLYB condicional_else','condicional',9,'p_condicional','AnalizadorSintactico.py',377),
  ('condicional_else -> ELSE pn_condicional_else LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_condicional_final','condicional_else',6,'p_condicional_else','AnalizadorSintactico.py',380),
  ('condicional_else -> pn_condicional_final','condicional_else',1,'p_condicional_else','AnalizadorSintactico.py',381),
  ('pn_condicional -> empty','pn_condicional',1,'p_pn_condicional','AnalizadorSintactico.py',384),
  ('pn_condicional_else -> empty','pn_condicional_else',1,'p_pn_condicional_else','AnalizadorSintactico.py',396),
  ('pn_condicional_final -> empty','pn_condicional_final',1,'p_pn_condicional_final','AnalizadorSintactico.py',399),
  ('while -> WHILE pn_while LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_while_jump while_loop','while',7,'p_while','AnalizadorSintactico.py',406),
  ('while_loop -> LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_while_jump1','while_loop',4,'p_while_loop','AnalizadorSintactico.py',409),
  ('pn_while -> empty','pn_while',1,'p_pn_while','AnalizadorSintactico.py',412),
  ('pn_while_jump -> empty','pn_while_jump',1,'p_pn_while_jump','AnalizadorSintactico.py',416),
  ('pn_while_jump1 -> empty','pn_while_jump1',1,'p_pn_while_jump1','AnalizadorSintactico.py',427),
  ('read -> READ LEFT_PARENTHESIS var RIGHT_PARENTHESIS SEMICOLON','read',5,'p_read','AnalizadorSintactico.py',434),
  ('write -> WRITE LEFT_PARENTHESIS write_rec RIGHT_PARENTHESIS SEMICOLON','write',5,'p_write','AnalizadorSintactico.py',440),
  ('write_rec -> all_logical pn_write_quad write_rec1','write_rec',3,'p_write_rec','AnalizadorSintactico.py',443),
  ('write_rec1 -> MORE all_logical pn_write_quad write_rec1','write_rec1',4,'p_write_rec1','AnalizadorSintactico.py',446),
  ('write_rec1 -> empty','write_rec1',1,'p_write_rec1','AnalizadorSintactico.py',447),
  ('pn_write_quad -> empty','pn_write_quad',1,'p_pn_write_quad','AnalizadorSintactico.py',450),
  ('func_call -> CALL ID pn_verify_func LEFT_PARENTHESIS pn_param_counter pn_open_parenthesis func_call_rec pn_close_parenthesis RIGHT_PARENTHESIS','func_call',9,'p_func_call','AnalizadorSintactico.py',453),
  ('pn_verify_func -> empty','pn_verify_func',1,'p_pn_verify_func','AnalizadorSintactico.py',468),
  ('pn_param_counter -> empty','pn_param_counter',1,'p_pn_param_counter','AnalizadorSintactico.py',471),
  ('func_call_rec -> all_logical pn_param_match func_call_rec1','func_call_rec',3,'p_func_call_rec','AnalizadorSintactico.py',474),
  ('func_call_rec1 -> COMMA all_logical pn_param_match func_call_rec','func_call_rec1',4,'p_func_call_rec1','AnalizadorSintactico.py',477),
  ('func_call_rec1 -> empty','func_call_rec1',1,'p_func_call_rec1','AnalizadorSintactico.py',478),
  ('pn_param_match -> empty','pn_param_match',1,'p_pn_param_match','AnalizadorSintactico.py',481),
  ('func_dec -> FUNC return_module pn_return_type ID pn_add_func LEFT_PARENTHESIS parametro pn_add_param_vartable RIGHT_PARENTHESIS LEFT_CURLYB pn_gen_vartable pn_func_quad bloque_rec func_return RIGHT_CURLYB pn_end_func','func_dec',16,'p_func_dec','AnalizadorSintactico.py',484),
  ('pn_add_param_vartable -> empty','pn_add_param_vartable',1,'p_pn_add_param_vartable','AnalizadorSintactico.py',490),
  ('pn_gen_vartable -> empty','pn_gen_vartable',1,'p_pn_gen_vartable','AnalizadorSintactico.py',496),
  ('pn_func_quad -> empty','pn_func_quad',1,'p_pn_func_quad','AnalizadorSintactico.py',499),
  ('pn_end_main -> empty','pn_end_main',1,'p_pn_end_main','AnalizadorSintactico.py',502),
  ('pn_end_func -> empty','pn_end_func',1,'p_pn_end_func','AnalizadorSintactico.py',505),
  ('pn_add_func -> empty','pn_add_func',1,'p_pn_add_func','AnalizadorSintactico.py',508),
  ('pn_return_type -> empty','pn_return_type',1,'p_pn_return_type','AnalizadorSintactico.py',511),
  ('func_return -> RETURN all_logical SEMICOLON','func_return',3,'p_func_return','AnalizadorSintactico.py',514),
  ('func_return -> RETURN SEMICOLON','func_return',2,'p_func_return','AnalizadorSintactico.py',515),
  ('bloque_rec -> bloque bloque_rec','bloque_rec',2,'p_bloque_rec','AnalizadorSintactico.py',518),
  ('bloque_rec -> empty','bloque_rec',1,'p_bloque_rec','AnalizadorSintactico.py',519),
  ('empty -> <empty>','empty',0,'p_empty','AnalizadorSintactico.py',523),
]
