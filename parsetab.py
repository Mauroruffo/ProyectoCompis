
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQUAL_ASSIGNleftIDleftLEFT_CURLYBRIGHT_CURLYBleftLEFT_BRACKETRIGHT_BRACKETleftLESS_THANGREATER_THANNOT_EQUALLESS_EQUALGREATER_EQUALEQUAL_COMPAREleftANDORNEGATIONleftMINUSPLUSleftMULTIPLICATIONDIVISIONleftLEFT_PARENTHESISRIGHT_PARENTHESISAND ATTRIBUTES BOOL CALL CALL CHAR CLASS COLON COMMA CONST_BOOL CONST_CHAR CONST_FLOAT CONST_INT CONST_STRING DEF DIVISION DO ELSE ELSEIF EQUAL_ASSIGN EQUAL_COMPARE FLOAT FUNC GREATER_EQUAL GREATER_THAN ID IF INT LEFT_BRACKET LEFT_CURLYB LEFT_PARENTHESIS LESS_EQUAL LESS_THAN LIST LIST MAIN METHODS MINUS MORE MOREBOOL MULTIPLICATION NEGATION NOT_EQUAL NUMBER OR PERIOD PLUS PROGRAM READ RETURN RIGHT_BRACKET RIGHT_CURLYB RIGHT_PARENTHESIS SEMICOLON STRING STRING VAR VOID WHILE WRITE program : PROGRAM pn_start_program pn_start_func ID SEMICOLON init_dec main  main : MAIN pn_internal_scope LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLYB vars_rec pn_gen_vartable bloque_rec RIGHT_CURLYB pn_end_main vars_rec : var_dec vars_rec\n                    | empty  pn_internal_scope : empty  pn_start_program : empty  pn_start_func : empty  init_dec : empty \n                | dec init_dec  dec :  var_dec \n            | func_dec \n            | class_dec  class_dec : empty var : ID varArray varArray :  empty \n                | pn_array_access1 LEFT_BRACKET pn_array_access2 all_logical pn_array_access3 RIGHT_BRACKET pn_access_return  pn_array_access1 : empty  pn_array_access2 : empty  pn_array_access3 : empty  pn_access_return : empty  var_dec :  VAR tipo pn_var_type  pn_value_type ID pn_current_name SEMICOLON pn_add_variable \n                | LIST tipo pn_var_type  pn_value_type ID pn_current_name LEFT_BRACKET  cte_int pn_add_variable pn_add_dim_list pn_add_dim RIGHT_BRACKET list1 SEMICOLON list1 : empty  pn_add_dim_list : empty pn_add_dim : empty pn_var_type : empty  pn_value_type : empty  pn_current_name : empty  pn_add_variable : empty  bloque : asignacion \n                | condicional \n                | while \n                | read \n                | write \n                | func_call SEMICOLON  asignacion : var pn_var_assign EQUAL_ASSIGN all_logical SEMICOLON  pn_var_assign : empty  pn_operator : empty  all_logical : logical_exp pn_all_logical all_logical_rec  all_logical_rec : AND pn_operator logical_exp pn_all_logical all_logical_rec \n                        | OR pn_operator logical_exp pn_all_logical all_logical_rec \n                        | empty pn_all_logical : empty  logical_exp : exp pn_logical_exp logical_exp_rec  logical_exp_rec : GREATER_THAN pn_operator exp pn_logical_exp logical_exp_rec \n                        | LESS_THAN pn_operator exp pn_logical_exp logical_exp_rec \n                        | EQUAL_COMPARE pn_operator exp pn_logical_exp logical_exp_rec \n                        | NOT_EQUAL pn_operator exp pn_logical_exp logical_exp_rec \n                        | empty pn_logical_exp : empty  exp : termino pn_exp exp_rec  pn_exp : empty  exp_rec : PLUS pn_operator termino pn_exp exp_rec \n                | MINUS pn_operator termino pn_exp exp_rec \n                | empty termino :  factor pn_termino termino_rec  termino_rec : MULTIPLICATION pn_operator factor pn_termino termino_rec \n                    | DIVISION pn_operator factor pn_termino termino_rec \n                    | empty pn_termino : empty  factor :  cte_int pn_add_constant \n                | cte_float pn_add_constant \n                | CONST_BOOL pn_add_constant \n                | CONST_STRING empty empty \n                | var\n                | LEFT_PARENTHESIS pn_open_parenthesis all_logical  RIGHT_PARENTHESIS pn_close_parenthesis \n                | func_call  cte_int : CONST_INT \n                | MINUS CONST_INT  cte_float : CONST_FLOAT \n                | MINUS CONST_FLOAT  pn_add_constant : empty  pn_open_parenthesis : empty  pn_close_parenthesis : empty  tipo : INT \n            | FLOAT \n            | BOOL \n            | STRING  return_module : tipo \n                | VOID  parametro : tipo ID parametro_rec \n                    | empty  parametro_rec : COMMA tipo ID parametro_rec \n                        | empty  condicional : IF LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_condicional LEFT_CURLYB bloque_rec RIGHT_CURLYB condicional_else  condicional_else : ELSE pn_condicional_else LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_condicional_final \n                        | pn_condicional_final  pn_condicional : empty  pn_condicional_else : empty  pn_condicional_final : empty  while : WHILE pn_while LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_while_jump while_loop while_loop : LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_while_jump1  pn_while : empty  pn_while_jump : empty  pn_while_jump1 : empty  read : READ LEFT_PARENTHESIS var_readRec RIGHT_PARENTHESIS SEMICOLON  var_readRec : var var_readRec1  var_readRec1 : COMMA var var_readRec1 \n                    |   empty  write : WRITE LEFT_PARENTHESIS write_rec RIGHT_PARENTHESIS SEMICOLON  write_rec : all_logical pn_write_quad write_rec1  write_rec1 : MORE all_logical pn_write_quad write_rec1 \n                    | empty  pn_write_quad : empty  func_call : CALL ID pn_verify_func LEFT_PARENTHESIS pn_param_counter pn_open_parenthesis func_call_rec pn_close_parenthesis RIGHT_PARENTHESIS  pn_verify_func : empty  pn_param_counter : empty  func_call_rec : func_call_rec1 \n                        | empty  func_call_rec1 : all_logical pn_param_match func_call_rec2  func_call_rec2 : COMMA all_logical pn_param_match func_call_rec2\n                        | empty  pn_param_match : empty  func_dec : FUNC return_module ID pn_add_func LEFT_PARENTHESIS parametro pn_add_param_vartable pn_return_type RIGHT_PARENTHESIS LEFT_CURLYB vars_rec pn_gen_vartable pn_func_quad bloque_rec func_return RIGHT_CURLYB pn_end_func  pn_add_param_vartable : empty  pn_gen_vartable : empty  pn_func_quad : empty  pn_end_main : empty pn_end_func : empty  pn_add_func : empty  pn_return_type : empty  func_return : RETURN all_logical SEMICOLON \n                    | RETURN SEMICOLON  bloque_rec : bloque bloque_rec \n                    | empty empty :  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,18,94,112,113,],[0,-1,-126,-2,-118,]),'ID':([2,3,4,5,6,21,22,23,24,25,26,27,28,29,32,33,34,37,38,39,46,51,53,54,55,56,61,62,63,64,65,75,77,78,79,80,81,88,93,96,99,102,103,110,114,115,129,136,139,142,143,162,167,168,169,171,172,177,178,181,182,183,184,187,188,191,192,196,198,200,202,203,207,208,210,211,212,213,214,215,216,217,218,219,220,221,226,229,244,245,253,254,275,277,278,289,292,299,300,302,306,307,],[-126,-126,-6,7,-7,-126,-75,-76,-77,-78,-126,35,-79,-80,-126,-26,-126,43,-27,44,-126,60,-126,-126,-4,-126,89,-116,-3,-21,-29,89,-30,-31,-32,-33,-34,104,111,-35,89,89,89,-126,89,-126,89,-126,-126,89,-73,89,-126,89,-18,-126,-36,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-96,-100,89,-126,-107,89,-117,89,89,-38,89,89,89,89,89,89,89,89,89,89,-22,-91,89,89,-126,-85,-87,-90,-126,89,-92,-95,89,-126,-86,]),'SEMICOLON':([7,43,47,48,67,82,89,91,105,106,117,118,119,120,121,122,123,124,125,126,128,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,164,170,176,179,180,185,186,189,190,193,194,205,206,209,231,232,234,235,236,237,238,239,240,241,242,243,251,253,255,256,257,258,259,260,261,262,263,264,270,271,273,279,280,281,282,283,284,285,286,287,288,290,],[8,-126,56,-28,-68,96,-126,-69,-14,-15,-126,-126,-126,-126,-126,-126,-126,-126,-65,-67,-70,172,-126,-43,-126,-50,-126,-52,-126,-60,-61,-72,-62,-63,-126,-71,196,198,-126,-39,-42,-44,-49,-51,-55,-56,-59,-64,229,-23,-126,-66,-74,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,274,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-16,-20,296,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-105,]),'MAIN':([8,9,10,11,12,13,14,20,56,64,65,229,272,294,295,],[-126,19,-8,-126,-10,-11,-12,-9,-126,-21,-29,-22,-126,-114,-119,]),'VAR':([8,10,11,12,13,14,46,54,56,64,65,110,229,272,294,295,],[15,-13,15,-10,-11,-12,15,15,-126,-21,-29,15,-22,-126,-114,-119,]),'LIST':([8,10,11,12,13,14,46,54,56,64,65,110,229,272,294,295,],[16,-13,16,-10,-11,-12,16,16,-126,-21,-29,16,-22,-126,-114,-119,]),'FUNC':([8,10,11,12,13,14,56,64,65,229,272,294,295,],[17,-13,17,-10,-11,-12,-126,-21,-29,-22,-126,-114,-119,]),'INT':([15,16,17,45,72,],[22,22,22,22,22,]),'FLOAT':([15,16,17,45,72,],[23,23,23,23,23,]),'BOOL':([15,16,17,45,72,],[24,24,24,24,24,]),'STRING':([15,16,17,45,72,],[25,25,25,25,25,]),'VOID':([17,],[29,]),'LEFT_PARENTHESIS':([19,30,31,35,40,41,84,85,86,87,99,100,101,103,104,114,115,129,134,135,136,142,143,167,168,169,177,178,181,182,183,184,187,188,191,192,200,202,203,211,212,213,214,215,216,217,218,219,220,221,226,253,292,],[-126,36,-5,-126,45,-120,99,-126,102,103,115,129,-93,115,-126,115,-126,115,167,-106,-126,115,-73,-126,115,-18,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,115,-126,-107,115,-38,115,115,115,115,115,115,115,115,115,115,115,115,]),'RIGHT_PARENTHESIS':([36,45,50,52,58,59,60,67,69,70,71,73,89,91,105,106,111,116,117,118,119,120,121,122,123,124,125,126,128,130,131,132,133,140,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,163,165,166,167,173,176,179,180,185,186,189,190,193,194,197,199,201,202,203,209,224,225,226,231,232,234,235,236,237,238,239,240,241,242,243,246,247,248,249,250,251,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,279,280,281,282,283,284,285,286,287,288,290,291,293,301,303,305,],[42,-126,-126,-82,-126,-115,-126,-68,92,-121,-81,-84,-126,-69,-14,-15,-126,144,-126,-126,-126,-126,-126,-126,-126,-126,-65,-67,-70,160,-126,164,-126,-83,-73,-126,-43,-126,-50,-126,-52,-126,-60,-61,-72,-62,-63,-126,-71,195,-97,-99,-126,-104,-126,209,-39,-42,-44,-49,-51,-55,-56,-59,-64,-126,-101,-103,-126,-107,-126,-98,-126,-126,-66,-74,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-108,-109,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-102,290,-126,-113,-16,-20,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-105,-110,-112,-126,-126,-111,]),'LEFT_CURLYB':([42,92,144,174,175,195,222,223,276,297,298,],[46,110,-126,210,-88,-126,245,-94,-126,302,-89,]),'LEFT_BRACKET':([44,48,49,89,106,107,],[-126,-28,57,-126,-17,136,]),'IF':([46,53,54,55,56,61,62,63,64,65,75,77,78,79,80,81,96,110,139,171,172,196,198,207,208,210,229,244,245,254,275,277,278,289,299,300,302,306,307,],[-126,-126,-126,-4,-126,84,-116,-3,-21,-29,84,-30,-31,-32,-33,-34,-35,-126,-126,-126,-36,-96,-100,84,-117,84,-22,-91,84,-126,-85,-87,-90,-126,-92,-95,84,-126,-86,]),'WHILE':([46,53,54,55,56,61,62,63,64,65,75,77,78,79,80,81,96,110,139,171,172,196,198,207,208,210,229,244,245,254,275,277,278,289,299,300,302,306,307,],[-126,-126,-126,-4,-126,85,-116,-3,-21,-29,85,-30,-31,-32,-33,-34,-35,-126,-126,-126,-36,-96,-100,85,-117,85,-22,-91,85,-126,-85,-87,-90,-126,-92,-95,85,-126,-86,]),'READ':([46,53,54,55,56,61,62,63,64,65,75,77,78,79,80,81,96,110,139,171,172,196,198,207,208,210,229,244,245,254,275,277,278,289,299,300,302,306,307,],[-126,-126,-126,-4,-126,86,-116,-3,-21,-29,86,-30,-31,-32,-33,-34,-35,-126,-126,-126,-36,-96,-100,86,-117,86,-22,-91,86,-126,-85,-87,-90,-126,-92,-95,86,-126,-86,]),'WRITE':([46,53,54,55,56,61,62,63,64,65,75,77,78,79,80,81,96,110,139,171,172,196,198,207,208,210,229,244,245,254,275,277,278,289,299,300,302,306,307,],[-126,-126,-126,-4,-126,87,-116,-3,-21,-29,87,-30,-31,-32,-33,-34,-35,-126,-126,-126,-36,-96,-100,87,-117,87,-22,-91,87,-126,-85,-87,-90,-126,-92,-95,87,-126,-86,]),'CALL':([46,53,54,55,56,61,62,63,64,65,75,77,78,79,80,81,96,99,103,110,114,115,129,136,139,142,143,167,168,169,171,172,177,178,181,182,183,184,187,188,191,192,196,198,200,202,203,207,208,210,211,212,213,214,215,216,217,218,219,220,221,226,229,244,245,253,254,275,277,278,289,292,299,300,302,306,307,],[-126,-126,-126,-4,-126,88,-116,-3,-21,-29,88,-30,-31,-32,-33,-34,-35,88,88,-126,88,-126,88,-126,-126,88,-73,-126,88,-18,-126,-36,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-96,-100,88,-126,-107,88,-117,88,88,-38,88,88,88,88,88,88,88,88,88,88,-22,-91,88,88,-126,-85,-87,-90,-126,88,-92,-95,88,-126,-86,]),'RIGHT_CURLYB':([46,53,54,55,56,61,62,63,64,65,74,75,76,77,78,79,80,81,95,96,172,196,198,210,229,233,244,245,252,254,265,274,275,277,278,289,296,299,300,302,304,306,307,],[-126,-126,-126,-4,-126,-126,-116,-3,-21,-29,94,-126,-125,-30,-31,-32,-33,-34,-124,-35,-36,-96,-100,-126,-22,254,-91,-126,272,-126,289,-123,-85,-87,-90,-126,-122,-92,-95,-126,306,-126,-86,]),'RETURN':([54,55,56,62,63,64,65,75,76,77,78,79,80,81,95,96,110,139,171,172,196,198,207,208,229,230,244,254,275,277,278,289,299,300,306,307,],[-126,-4,-126,-116,-3,-21,-29,-126,-125,-30,-31,-32,-33,-34,-124,-35,-126,-126,-126,-36,-96,-100,-126,-117,-22,253,-91,-126,-85,-87,-90,-126,-92,-95,-126,-86,]),'CONST_INT':([57,68,99,103,114,115,127,129,136,142,143,167,168,169,177,178,181,182,183,184,187,188,191,192,200,202,203,211,212,213,214,215,216,217,218,219,220,221,226,253,292,],[67,91,67,67,67,-126,91,67,-126,67,-73,-126,67,-18,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,67,-126,-107,67,-38,67,67,67,67,67,67,67,67,67,67,67,67,]),'MINUS':([57,67,89,91,99,103,105,106,114,115,119,120,121,122,123,124,125,126,128,129,136,142,143,149,150,151,152,153,154,155,156,157,158,167,168,169,177,178,181,182,183,184,187,188,190,191,192,193,194,200,202,203,209,211,212,213,214,215,216,217,218,219,220,221,226,231,232,240,241,242,243,251,253,261,262,263,264,270,271,287,288,290,292,],[68,-68,-126,-69,127,127,-14,-15,127,-126,-126,-126,-126,-126,-126,-126,-65,-67,-70,127,-126,127,-73,188,-52,-126,-60,-61,-72,-62,-63,-126,-71,-126,127,-18,-126,-126,-126,-126,-126,-126,-126,-126,-56,-126,-126,-59,-64,127,-126,-107,-126,127,-38,127,127,127,127,127,127,127,127,127,127,-66,-74,-126,-126,-126,-126,-126,127,188,188,-126,-126,-16,-20,-57,-58,-105,127,]),'COMMA':([60,67,89,91,105,106,111,117,118,119,120,121,122,123,124,125,126,128,131,145,146,147,148,149,150,151,152,153,154,155,156,157,158,176,179,180,185,186,189,190,193,194,197,209,231,232,234,235,236,237,238,239,240,241,242,243,250,251,255,256,257,258,259,260,261,262,263,264,268,269,270,271,279,280,281,282,283,284,285,286,287,288,290,301,303,],[72,-68,-126,-69,-14,-15,72,-126,-126,-126,-126,-126,-126,-126,-126,-65,-67,-70,162,-126,-43,-126,-50,-126,-52,-126,-60,-61,-72,-62,-63,-126,-71,-39,-42,-44,-49,-51,-55,-56,-59,-64,162,-126,-66,-74,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,292,-113,-16,-20,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-105,-126,292,]),'RIGHT_BRACKET':([65,66,67,89,90,91,105,106,108,109,117,118,119,120,121,122,123,124,125,126,128,137,138,145,146,147,148,149,150,151,152,153,154,155,156,157,158,176,179,180,185,186,189,190,193,194,204,209,227,228,231,232,234,235,236,237,238,239,240,241,242,243,251,255,256,257,258,259,260,261,262,263,264,270,271,279,280,281,282,283,284,285,286,287,288,290,],[-29,-126,-68,-126,-126,-69,-14,-15,-126,-24,-126,-126,-126,-126,-126,-126,-126,-126,-65,-67,-70,170,-25,-126,-43,-126,-50,-126,-52,-126,-60,-61,-72,-62,-63,-126,-71,-39,-42,-44,-49,-51,-55,-56,-59,-64,-126,-126,251,-19,-66,-74,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-16,-20,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-105,]),'MULTIPLICATION':([67,89,91,105,106,120,121,122,123,124,125,126,128,151,152,153,154,155,156,157,158,194,209,231,232,242,243,251,263,264,270,271,290,],[-68,-126,-69,-14,-15,-126,-126,-126,-126,-126,-65,-67,-70,191,-60,-61,-72,-62,-63,-126,-71,-64,-126,-66,-74,-126,-126,-126,191,191,-16,-20,-105,]),'DIVISION':([67,89,91,105,106,120,121,122,123,124,125,126,128,151,152,153,154,155,156,157,158,194,209,231,232,242,243,251,263,264,270,271,290,],[-68,-126,-69,-14,-15,-126,-126,-126,-126,-126,-65,-67,-70,192,-60,-61,-72,-62,-63,-126,-71,-64,-126,-66,-74,-126,-126,-126,192,192,-16,-20,-105,]),'PLUS':([67,89,91,105,106,119,120,121,122,123,124,125,126,128,149,150,151,152,153,154,155,156,157,158,190,193,194,209,231,232,240,241,242,243,251,261,262,263,264,270,271,287,288,290,],[-68,-126,-69,-14,-15,-126,-126,-126,-126,-126,-126,-65,-67,-70,187,-52,-126,-60,-61,-72,-62,-63,-126,-71,-56,-59,-64,-126,-66,-74,-126,-126,-126,-126,-126,187,187,-126,-126,-16,-20,-57,-58,-105,]),'GREATER_THAN':([67,89,91,105,106,118,119,120,121,122,123,124,125,126,128,147,148,149,150,151,152,153,154,155,156,157,158,186,189,190,193,194,209,231,232,236,237,238,239,240,241,242,243,251,257,258,259,260,261,262,263,264,270,271,285,286,287,288,290,],[-68,-126,-69,-14,-15,-126,-126,-126,-126,-126,-126,-126,-65,-67,-70,181,-50,-126,-52,-126,-60,-61,-72,-62,-63,-126,-71,-51,-55,-56,-59,-64,-126,-66,-74,-126,-126,-126,-126,-126,-126,-126,-126,-126,181,181,181,181,-126,-126,-126,-126,-16,-20,-53,-54,-57,-58,-105,]),'LESS_THAN':([67,89,91,105,106,118,119,120,121,122,123,124,125,126,128,147,148,149,150,151,152,153,154,155,156,157,158,186,189,190,193,194,209,231,232,236,237,238,239,240,241,242,243,251,257,258,259,260,261,262,263,264,270,271,285,286,287,288,290,],[-68,-126,-69,-14,-15,-126,-126,-126,-126,-126,-126,-126,-65,-67,-70,182,-50,-126,-52,-126,-60,-61,-72,-62,-63,-126,-71,-51,-55,-56,-59,-64,-126,-66,-74,-126,-126,-126,-126,-126,-126,-126,-126,-126,182,182,182,182,-126,-126,-126,-126,-16,-20,-53,-54,-57,-58,-105,]),'EQUAL_COMPARE':([67,89,91,105,106,118,119,120,121,122,123,124,125,126,128,147,148,149,150,151,152,153,154,155,156,157,158,186,189,190,193,194,209,231,232,236,237,238,239,240,241,242,243,251,257,258,259,260,261,262,263,264,270,271,285,286,287,288,290,],[-68,-126,-69,-14,-15,-126,-126,-126,-126,-126,-126,-126,-65,-67,-70,183,-50,-126,-52,-126,-60,-61,-72,-62,-63,-126,-71,-51,-55,-56,-59,-64,-126,-66,-74,-126,-126,-126,-126,-126,-126,-126,-126,-126,183,183,183,183,-126,-126,-126,-126,-16,-20,-53,-54,-57,-58,-105,]),'NOT_EQUAL':([67,89,91,105,106,118,119,120,121,122,123,124,125,126,128,147,148,149,150,151,152,153,154,155,156,157,158,186,189,190,193,194,209,231,232,236,237,238,239,240,241,242,243,251,257,258,259,260,261,262,263,264,270,271,285,286,287,288,290,],[-68,-126,-69,-14,-15,-126,-126,-126,-126,-126,-126,-126,-65,-67,-70,184,-50,-126,-52,-126,-60,-61,-72,-62,-63,-126,-71,-51,-55,-56,-59,-64,-126,-66,-74,-126,-126,-126,-126,-126,-126,-126,-126,-126,184,184,184,184,-126,-126,-126,-126,-16,-20,-53,-54,-57,-58,-105,]),'AND':([67,89,91,105,106,117,118,119,120,121,122,123,124,125,126,128,145,146,147,148,149,150,151,152,153,154,155,156,157,158,180,185,186,189,190,193,194,209,231,232,234,235,236,237,238,239,240,241,242,243,251,255,256,257,258,259,260,261,262,263,264,270,271,281,282,283,284,285,286,287,288,290,],[-68,-126,-69,-14,-15,-126,-126,-126,-126,-126,-126,-126,-126,-65,-67,-70,177,-43,-126,-50,-126,-52,-126,-60,-61,-72,-62,-63,-126,-71,-44,-49,-51,-55,-56,-59,-64,-126,-66,-74,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,177,177,-126,-126,-126,-126,-126,-126,-126,-126,-16,-20,-45,-46,-47,-48,-53,-54,-57,-58,-105,]),'OR':([67,89,91,105,106,117,118,119,120,121,122,123,124,125,126,128,145,146,147,148,149,150,151,152,153,154,155,156,157,158,180,185,186,189,190,193,194,209,231,232,234,235,236,237,238,239,240,241,242,243,251,255,256,257,258,259,260,261,262,263,264,270,271,281,282,283,284,285,286,287,288,290,],[-68,-126,-69,-14,-15,-126,-126,-126,-126,-126,-126,-126,-126,-65,-67,-70,178,-43,-126,-50,-126,-52,-126,-60,-61,-72,-62,-63,-126,-71,-44,-49,-51,-55,-56,-59,-64,-126,-66,-74,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,178,178,-126,-126,-126,-126,-126,-126,-126,-126,-16,-20,-45,-46,-47,-48,-53,-54,-57,-58,-105,]),'MORE':([67,89,91,105,106,117,118,119,120,121,122,123,124,125,126,128,133,145,146,147,148,149,150,151,152,153,154,155,156,157,158,165,166,176,179,180,185,186,189,190,193,194,209,225,231,232,234,235,236,237,238,239,240,241,242,243,246,251,255,256,257,258,259,260,261,262,263,264,270,271,279,280,281,282,283,284,285,286,287,288,290,],[-68,-126,-69,-14,-15,-126,-126,-126,-126,-126,-126,-126,-126,-65,-67,-70,-126,-126,-43,-126,-50,-126,-52,-126,-60,-61,-72,-62,-63,-126,-71,200,-104,-39,-42,-44,-49,-51,-55,-56,-59,-64,-126,-126,-66,-74,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,200,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-16,-20,-40,-41,-45,-46,-47,-48,-53,-54,-57,-58,-105,]),'EQUAL_ASSIGN':([83,89,97,98,105,106,251,270,271,],[-126,-126,114,-37,-14,-15,-126,-16,-20,]),'CONST_BOOL':([99,103,114,115,129,136,142,143,167,168,169,177,178,181,182,183,184,187,188,191,192,200,202,203,211,212,213,214,215,216,217,218,219,220,221,226,253,292,],[123,123,123,-126,123,-126,123,-73,-126,123,-18,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,123,-126,-107,123,-38,123,123,123,123,123,123,123,123,123,123,123,123,]),'CONST_STRING':([99,103,114,115,129,136,142,143,167,168,169,177,178,181,182,183,184,187,188,191,192,200,202,203,211,212,213,214,215,216,217,218,219,220,221,226,253,292,],[124,124,124,-126,124,-126,124,-73,-126,124,-18,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,124,-126,-107,124,-38,124,124,124,124,124,124,124,124,124,124,124,124,]),'CONST_FLOAT':([99,103,114,115,127,129,136,142,143,167,168,169,177,178,181,182,183,184,187,188,191,192,200,202,203,211,212,213,214,215,216,217,218,219,220,221,226,253,292,],[128,128,128,-126,158,128,-126,128,-73,-126,128,-18,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,128,-126,-107,128,-38,128,128,128,128,128,128,128,128,128,128,128,128,]),'ELSE':([254,],[276,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'pn_start_program':([2,],[3,]),'empty':([2,3,8,11,19,21,26,32,34,35,43,44,45,46,50,53,54,56,58,60,61,66,75,83,85,89,90,94,104,108,110,111,115,117,118,119,120,121,122,123,124,131,133,136,139,144,145,147,149,151,157,165,167,170,171,177,178,181,182,183,184,187,188,191,192,195,197,202,204,207,209,210,225,226,234,235,236,237,238,239,240,241,242,243,245,246,247,250,251,254,255,256,257,258,259,260,261,262,263,264,268,272,276,289,301,302,303,306,],[4,6,10,10,31,33,33,38,38,41,48,48,52,55,59,62,55,65,70,73,76,65,76,98,101,106,109,113,135,138,55,73,143,146,148,150,152,154,154,154,157,163,166,169,62,175,179,185,189,193,194,201,203,206,208,212,212,212,212,212,212,212,212,212,212,223,163,143,228,76,232,76,166,249,146,146,148,148,148,148,150,150,152,152,76,201,232,269,271,278,179,179,185,185,185,185,189,189,193,193,293,295,298,300,269,76,293,278,]),'pn_start_func':([3,],[5,]),'init_dec':([8,11,],[9,20,]),'dec':([8,11,],[11,11,]),'var_dec':([8,11,46,54,110,],[12,12,54,54,54,]),'func_dec':([8,11,],[13,13,]),'class_dec':([8,11,],[14,14,]),'main':([9,],[18,]),'tipo':([15,16,17,45,72,],[21,26,28,51,93,]),'return_module':([17,],[27,]),'pn_internal_scope':([19,],[30,]),'pn_var_type':([21,26,],[32,34,]),'pn_value_type':([32,34,],[37,39,]),'pn_add_func':([35,],[40,]),'pn_current_name':([43,44,],[47,49,]),'parametro':([45,],[50,]),'vars_rec':([46,54,110,],[53,63,139,]),'pn_add_param_vartable':([50,],[58,]),'pn_gen_vartable':([53,139,],[61,171,]),'pn_add_variable':([56,66,],[64,90,]),'cte_int':([57,99,103,114,129,142,168,200,211,213,214,215,216,217,218,219,220,221,226,253,292,],[66,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'pn_return_type':([58,],[69,]),'parametro_rec':([60,111,],[71,140,]),'bloque_rec':([61,75,207,210,245,302,],[74,95,230,233,265,304,]),'bloque':([61,75,207,210,245,302,],[75,75,75,75,75,75,]),'asignacion':([61,75,207,210,245,302,],[77,77,77,77,77,77,]),'condicional':([61,75,207,210,245,302,],[78,78,78,78,78,78,]),'while':([61,75,207,210,245,302,],[79,79,79,79,79,79,]),'read':([61,75,207,210,245,302,],[80,80,80,80,80,80,]),'write':([61,75,207,210,245,302,],[81,81,81,81,81,81,]),'func_call':([61,75,99,103,114,129,142,168,200,207,210,211,213,214,215,216,217,218,219,220,221,226,245,253,292,302,],[82,82,126,126,126,126,126,126,126,82,82,126,126,126,126,126,126,126,126,126,126,126,82,126,126,82,]),'var':([61,75,99,102,103,114,129,142,162,168,200,207,210,211,213,214,215,216,217,218,219,220,221,226,245,253,292,302,],[83,83,125,131,125,125,125,125,197,125,125,83,83,125,125,125,125,125,125,125,125,125,125,125,83,125,125,83,]),'pn_var_assign':([83,],[97,]),'pn_while':([85,],[100,]),'varArray':([89,],[105,]),'pn_array_access1':([89,],[107,]),'pn_add_dim_list':([90,],[108,]),'pn_end_main':([94,],[112,]),'all_logical':([99,103,114,129,142,168,200,226,253,292,],[116,133,141,159,173,204,225,250,273,301,]),'logical_exp':([99,103,114,129,142,168,200,211,213,226,253,292,],[117,117,117,117,117,117,117,234,235,117,117,117,]),'exp':([99,103,114,129,142,168,200,211,213,214,215,216,217,226,253,292,],[118,118,118,118,118,118,118,118,118,236,237,238,239,118,118,118,]),'termino':([99,103,114,129,142,168,200,211,213,214,215,216,217,218,219,226,253,292,],[119,119,119,119,119,119,119,119,119,119,119,119,119,240,241,119,119,119,]),'factor':([99,103,114,129,142,168,200,211,213,214,215,216,217,218,219,220,221,226,253,292,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,242,243,120,120,120,]),'cte_float':([99,103,114,129,142,168,200,211,213,214,215,216,217,218,219,220,221,226,253,292,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'var_readRec':([102,],[130,]),'write_rec':([103,],[132,]),'pn_verify_func':([104,],[134,]),'pn_add_dim':([108,],[137,]),'pn_open_parenthesis':([115,202,],[142,226,]),'pn_all_logical':([117,234,235,],[145,255,256,]),'pn_logical_exp':([118,236,237,238,239,],[147,257,258,259,260,]),'pn_exp':([119,240,241,],[149,261,262,]),'pn_termino':([120,242,243,],[151,263,264,]),'pn_add_constant':([121,122,123,],[153,155,156,]),'var_readRec1':([131,197,],[161,224,]),'pn_write_quad':([133,225,],[165,246,]),'pn_array_access2':([136,],[168,]),'pn_condicional':([144,],[174,]),'all_logical_rec':([145,255,256,],[176,279,280,]),'logical_exp_rec':([147,257,258,259,260,],[180,281,282,283,284,]),'exp_rec':([149,261,262,],[186,285,286,]),'termino_rec':([151,263,264,],[190,287,288,]),'write_rec1':([165,246,],[199,266,]),'pn_param_counter':([167,],[202,]),'list1':([170,],[205,]),'pn_func_quad':([171,],[207,]),'pn_operator':([177,178,181,182,183,184,187,188,191,192,],[211,213,214,215,216,217,218,219,220,221,]),'pn_while_jump':([195,],[222,]),'pn_array_access3':([204,],[227,]),'pn_close_parenthesis':([209,247,],[231,267,]),'while_loop':([222,],[244,]),'func_call_rec':([226,],[247,]),'func_call_rec1':([226,],[248,]),'func_return':([230,],[252,]),'pn_param_match':([250,301,],[268,303,]),'pn_access_return':([251,],[270,]),'condicional_else':([254,],[275,]),'pn_condicional_final':([254,306,],[277,307,]),'func_call_rec2':([268,303,],[291,305,]),'pn_end_func':([272,],[294,]),'pn_condicional_else':([276,],[297,]),'pn_while_jump1':([289,],[299,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM pn_start_program pn_start_func ID SEMICOLON init_dec main','program',7,'p_program','AnalizadorSintactico.py',44),
  ('main -> MAIN pn_internal_scope LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLYB vars_rec pn_gen_vartable bloque_rec RIGHT_CURLYB pn_end_main','main',10,'p_main','AnalizadorSintactico.py',56),
  ('vars_rec -> var_dec vars_rec','vars_rec',2,'p_vars_rec','AnalizadorSintactico.py',62),
  ('vars_rec -> empty','vars_rec',1,'p_vars_rec','AnalizadorSintactico.py',63),
  ('pn_internal_scope -> empty','pn_internal_scope',1,'p_pn_internal_scope','AnalizadorSintactico.py',66),
  ('pn_start_program -> empty','pn_start_program',1,'p_pn_start_program','AnalizadorSintactico.py',73),
  ('pn_start_func -> empty','pn_start_func',1,'p_pn_start_func','AnalizadorSintactico.py',86),
  ('init_dec -> empty','init_dec',1,'p_init_dec','AnalizadorSintactico.py',95),
  ('init_dec -> dec init_dec','init_dec',2,'p_init_dec','AnalizadorSintactico.py',96),
  ('dec -> var_dec','dec',1,'p_dec','AnalizadorSintactico.py',99),
  ('dec -> func_dec','dec',1,'p_dec','AnalizadorSintactico.py',100),
  ('dec -> class_dec','dec',1,'p_dec','AnalizadorSintactico.py',101),
  ('class_dec -> empty','class_dec',1,'p_class_dec','AnalizadorSintactico.py',104),
  ('var -> ID varArray','var',2,'p_var','AnalizadorSintactico.py',107),
  ('varArray -> empty','varArray',1,'p_varArray','AnalizadorSintactico.py',111),
  ('varArray -> pn_array_access1 LEFT_BRACKET pn_array_access2 all_logical pn_array_access3 RIGHT_BRACKET pn_access_return','varArray',7,'p_varArray','AnalizadorSintactico.py',112),
  ('pn_array_access1 -> empty','pn_array_access1',1,'p_pn_array_access1','AnalizadorSintactico.py',115),
  ('pn_array_access2 -> empty','pn_array_access2',1,'p_pn_array_access2','AnalizadorSintactico.py',133),
  ('pn_array_access3 -> empty','pn_array_access3',1,'p_pn_array_access3','AnalizadorSintactico.py',152),
  ('pn_access_return -> empty','pn_access_return',1,'p_pn_access_return','AnalizadorSintactico.py',176),
  ('var_dec -> VAR tipo pn_var_type pn_value_type ID pn_current_name SEMICOLON pn_add_variable','var_dec',8,'p_var_dec','AnalizadorSintactico.py',198),
  ('var_dec -> LIST tipo pn_var_type pn_value_type ID pn_current_name LEFT_BRACKET cte_int pn_add_variable pn_add_dim_list pn_add_dim RIGHT_BRACKET list1 SEMICOLON','var_dec',14,'p_var_dec','AnalizadorSintactico.py',199),
  ('list1 -> empty','list1',1,'p_list1','AnalizadorSintactico.py',202),
  ('pn_add_dim_list -> empty','pn_add_dim_list',1,'p_pn_add_dim_list','AnalizadorSintactico.py',213),
  ('pn_add_dim -> empty','pn_add_dim',1,'p_pn_add_dim','AnalizadorSintactico.py',219),
  ('pn_var_type -> empty','pn_var_type',1,'p_pn_var_type','AnalizadorSintactico.py',229),
  ('pn_value_type -> empty','pn_value_type',1,'p_pn_value_type','AnalizadorSintactico.py',234),
  ('pn_current_name -> empty','pn_current_name',1,'p_pn_current_name','AnalizadorSintactico.py',239),
  ('pn_add_variable -> empty','pn_add_variable',1,'p_pn_add_variable','AnalizadorSintactico.py',244),
  ('bloque -> asignacion','bloque',1,'p_bloque','AnalizadorSintactico.py',261),
  ('bloque -> condicional','bloque',1,'p_bloque','AnalizadorSintactico.py',262),
  ('bloque -> while','bloque',1,'p_bloque','AnalizadorSintactico.py',263),
  ('bloque -> read','bloque',1,'p_bloque','AnalizadorSintactico.py',264),
  ('bloque -> write','bloque',1,'p_bloque','AnalizadorSintactico.py',265),
  ('bloque -> func_call SEMICOLON','bloque',2,'p_bloque','AnalizadorSintactico.py',266),
  ('asignacion -> var pn_var_assign EQUAL_ASSIGN all_logical SEMICOLON','asignacion',5,'p_asignacion','AnalizadorSintactico.py',269),
  ('pn_var_assign -> empty','pn_var_assign',1,'p_pn_var_asignacion','AnalizadorSintactico.py',287),
  ('pn_operator -> empty','pn_operator',1,'p_pn_operator','AnalizadorSintactico.py',290),
  ('all_logical -> logical_exp pn_all_logical all_logical_rec','all_logical',3,'p_all_logical','AnalizadorSintactico.py',294),
  ('all_logical_rec -> AND pn_operator logical_exp pn_all_logical all_logical_rec','all_logical_rec',5,'p_all_logical_rec','AnalizadorSintactico.py',298),
  ('all_logical_rec -> OR pn_operator logical_exp pn_all_logical all_logical_rec','all_logical_rec',5,'p_all_logical_rec','AnalizadorSintactico.py',299),
  ('all_logical_rec -> empty','all_logical_rec',1,'p_all_logical_rec','AnalizadorSintactico.py',300),
  ('pn_all_logical -> empty','pn_all_logical',1,'p_pn_all_logical','AnalizadorSintactico.py',303),
  ('logical_exp -> exp pn_logical_exp logical_exp_rec','logical_exp',3,'p_logical_exp','AnalizadorSintactico.py',307),
  ('logical_exp_rec -> GREATER_THAN pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',311),
  ('logical_exp_rec -> LESS_THAN pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',312),
  ('logical_exp_rec -> EQUAL_COMPARE pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',313),
  ('logical_exp_rec -> NOT_EQUAL pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',314),
  ('logical_exp_rec -> empty','logical_exp_rec',1,'p_logical_exp_rec','AnalizadorSintactico.py',315),
  ('pn_logical_exp -> empty','pn_logical_exp',1,'p_pn_logical_exp','AnalizadorSintactico.py',318),
  ('exp -> termino pn_exp exp_rec','exp',3,'p_exp','AnalizadorSintactico.py',322),
  ('pn_exp -> empty','pn_exp',1,'p_pn_exp','AnalizadorSintactico.py',326),
  ('exp_rec -> PLUS pn_operator termino pn_exp exp_rec','exp_rec',5,'p_exp_rec','AnalizadorSintactico.py',330),
  ('exp_rec -> MINUS pn_operator termino pn_exp exp_rec','exp_rec',5,'p_exp_rec','AnalizadorSintactico.py',331),
  ('exp_rec -> empty','exp_rec',1,'p_exp_rec','AnalizadorSintactico.py',332),
  ('termino -> factor pn_termino termino_rec','termino',3,'p_termino','AnalizadorSintactico.py',335),
  ('termino_rec -> MULTIPLICATION pn_operator factor pn_termino termino_rec','termino_rec',5,'p_termino_rec','AnalizadorSintactico.py',339),
  ('termino_rec -> DIVISION pn_operator factor pn_termino termino_rec','termino_rec',5,'p_termino_rec','AnalizadorSintactico.py',340),
  ('termino_rec -> empty','termino_rec',1,'p_termino_rec','AnalizadorSintactico.py',341),
  ('pn_termino -> empty','pn_termino',1,'p_pn_termino','AnalizadorSintactico.py',344),
  ('factor -> cte_int pn_add_constant','factor',2,'p_factor','AnalizadorSintactico.py',348),
  ('factor -> cte_float pn_add_constant','factor',2,'p_factor','AnalizadorSintactico.py',349),
  ('factor -> CONST_BOOL pn_add_constant','factor',2,'p_factor','AnalizadorSintactico.py',350),
  ('factor -> CONST_STRING empty empty','factor',3,'p_factor','AnalizadorSintactico.py',351),
  ('factor -> var','factor',1,'p_factor','AnalizadorSintactico.py',352),
  ('factor -> LEFT_PARENTHESIS pn_open_parenthesis all_logical RIGHT_PARENTHESIS pn_close_parenthesis','factor',5,'p_factor','AnalizadorSintactico.py',353),
  ('factor -> func_call','factor',1,'p_factor','AnalizadorSintactico.py',354),
  ('cte_int -> CONST_INT','cte_int',1,'p_cte_int','AnalizadorSintactico.py',390),
  ('cte_int -> MINUS CONST_INT','cte_int',2,'p_cte_int','AnalizadorSintactico.py',391),
  ('cte_float -> CONST_FLOAT','cte_float',1,'p_cte_float','AnalizadorSintactico.py',398),
  ('cte_float -> MINUS CONST_FLOAT','cte_float',2,'p_cte_float','AnalizadorSintactico.py',399),
  ('pn_add_constant -> empty','pn_add_constant',1,'p_pn_add_constant','AnalizadorSintactico.py',406),
  ('pn_open_parenthesis -> empty','pn_open_parenthesis',1,'p_pn_open_parenthesis','AnalizadorSintactico.py',417),
  ('pn_close_parenthesis -> empty','pn_close_parenthesis',1,'p_pn_close_parenthesis','AnalizadorSintactico.py',421),
  ('tipo -> INT','tipo',1,'p_tipo','AnalizadorSintactico.py',425),
  ('tipo -> FLOAT','tipo',1,'p_tipo','AnalizadorSintactico.py',426),
  ('tipo -> BOOL','tipo',1,'p_tipo','AnalizadorSintactico.py',427),
  ('tipo -> STRING','tipo',1,'p_tipo','AnalizadorSintactico.py',428),
  ('return_module -> tipo','return_module',1,'p_return_module','AnalizadorSintactico.py',432),
  ('return_module -> VOID','return_module',1,'p_return_module','AnalizadorSintactico.py',433),
  ('parametro -> tipo ID parametro_rec','parametro',3,'p_parametro','AnalizadorSintactico.py',438),
  ('parametro -> empty','parametro',1,'p_parametro','AnalizadorSintactico.py',439),
  ('parametro_rec -> COMMA tipo ID parametro_rec','parametro_rec',4,'p_parametro_rec','AnalizadorSintactico.py',446),
  ('parametro_rec -> empty','parametro_rec',1,'p_parametro_rec','AnalizadorSintactico.py',447),
  ('condicional -> IF LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_condicional LEFT_CURLYB bloque_rec RIGHT_CURLYB condicional_else','condicional',9,'p_condicional','AnalizadorSintactico.py',455),
  ('condicional_else -> ELSE pn_condicional_else LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_condicional_final','condicional_else',6,'p_condicional_else','AnalizadorSintactico.py',458),
  ('condicional_else -> pn_condicional_final','condicional_else',1,'p_condicional_else','AnalizadorSintactico.py',459),
  ('pn_condicional -> empty','pn_condicional',1,'p_pn_condicional','AnalizadorSintactico.py',462),
  ('pn_condicional_else -> empty','pn_condicional_else',1,'p_pn_condicional_else','AnalizadorSintactico.py',471),
  ('pn_condicional_final -> empty','pn_condicional_final',1,'p_pn_condicional_final','AnalizadorSintactico.py',478),
  ('while -> WHILE pn_while LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_while_jump while_loop','while',7,'p_while','AnalizadorSintactico.py',483),
  ('while_loop -> LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_while_jump1','while_loop',4,'p_while_loop','AnalizadorSintactico.py',486),
  ('pn_while -> empty','pn_while',1,'p_pn_while','AnalizadorSintactico.py',489),
  ('pn_while_jump -> empty','pn_while_jump',1,'p_pn_while_jump','AnalizadorSintactico.py',493),
  ('pn_while_jump1 -> empty','pn_while_jump1',1,'p_pn_while_jump1','AnalizadorSintactico.py',503),
  ('read -> READ LEFT_PARENTHESIS var_readRec RIGHT_PARENTHESIS SEMICOLON','read',5,'p_read','AnalizadorSintactico.py',512),
  ('var_readRec -> var var_readRec1','var_readRec',2,'p_var_readRec','AnalizadorSintactico.py',521),
  ('var_readRec1 -> COMMA var var_readRec1','var_readRec1',3,'p_var_readRec1','AnalizadorSintactico.py',525),
  ('var_readRec1 -> empty','var_readRec1',1,'p_var_readRec1','AnalizadorSintactico.py',526),
  ('write -> WRITE LEFT_PARENTHESIS write_rec RIGHT_PARENTHESIS SEMICOLON','write',5,'p_write','AnalizadorSintactico.py',533),
  ('write_rec -> all_logical pn_write_quad write_rec1','write_rec',3,'p_write_rec','AnalizadorSintactico.py',536),
  ('write_rec1 -> MORE all_logical pn_write_quad write_rec1','write_rec1',4,'p_write_rec1','AnalizadorSintactico.py',539),
  ('write_rec1 -> empty','write_rec1',1,'p_write_rec1','AnalizadorSintactico.py',540),
  ('pn_write_quad -> empty','pn_write_quad',1,'p_pn_write_quad','AnalizadorSintactico.py',543),
  ('func_call -> CALL ID pn_verify_func LEFT_PARENTHESIS pn_param_counter pn_open_parenthesis func_call_rec pn_close_parenthesis RIGHT_PARENTHESIS','func_call',9,'p_func_call','AnalizadorSintactico.py',551),
  ('pn_verify_func -> empty','pn_verify_func',1,'p_pn_verify_func','AnalizadorSintactico.py',575),
  ('pn_param_counter -> empty','pn_param_counter',1,'p_pn_param_counter','AnalizadorSintactico.py',587),
  ('func_call_rec -> func_call_rec1','func_call_rec',1,'p_func_call_rec','AnalizadorSintactico.py',592),
  ('func_call_rec -> empty','func_call_rec',1,'p_func_call_rec','AnalizadorSintactico.py',593),
  ('func_call_rec1 -> all_logical pn_param_match func_call_rec2','func_call_rec1',3,'p_func_call_rec1','AnalizadorSintactico.py',596),
  ('func_call_rec2 -> COMMA all_logical pn_param_match func_call_rec2','func_call_rec2',4,'p_func_call_rec2','AnalizadorSintactico.py',599),
  ('func_call_rec2 -> empty','func_call_rec2',1,'p_func_call_rec2','AnalizadorSintactico.py',600),
  ('pn_param_match -> empty','pn_param_match',1,'p_pn_param_match','AnalizadorSintactico.py',603),
  ('func_dec -> FUNC return_module ID pn_add_func LEFT_PARENTHESIS parametro pn_add_param_vartable pn_return_type RIGHT_PARENTHESIS LEFT_CURLYB vars_rec pn_gen_vartable pn_func_quad bloque_rec func_return RIGHT_CURLYB pn_end_func','func_dec',17,'p_func_dec','AnalizadorSintactico.py',621),
  ('pn_add_param_vartable -> empty','pn_add_param_vartable',1,'p_pn_add_param_vartable','AnalizadorSintactico.py',628),
  ('pn_gen_vartable -> empty','pn_gen_vartable',1,'p_pn_gen_vartable','AnalizadorSintactico.py',643),
  ('pn_func_quad -> empty','pn_func_quad',1,'p_pn_func_quad','AnalizadorSintactico.py',647),
  ('pn_end_main -> empty','pn_end_main',1,'p_pn_end_main','AnalizadorSintactico.py',651),
  ('pn_end_func -> empty','pn_end_func',1,'p_pn_end_func','AnalizadorSintactico.py',656),
  ('pn_add_func -> empty','pn_add_func',1,'p_pn_add_func','AnalizadorSintactico.py',663),
  ('pn_return_type -> empty','pn_return_type',1,'p_pn_return_type','AnalizadorSintactico.py',670),
  ('func_return -> RETURN all_logical SEMICOLON','func_return',3,'p_func_return','AnalizadorSintactico.py',679),
  ('func_return -> RETURN SEMICOLON','func_return',2,'p_func_return','AnalizadorSintactico.py',680),
  ('bloque_rec -> bloque bloque_rec','bloque_rec',2,'p_bloque_rec','AnalizadorSintactico.py',698),
  ('bloque_rec -> empty','bloque_rec',1,'p_bloque_rec','AnalizadorSintactico.py',699),
  ('empty -> <empty>','empty',0,'p_empty','AnalizadorSintactico.py',703),
]
