
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQUAL_ASSIGNleftIDleftLEFT_CURLYBRIGHT_CURLYBleftLEFT_BRACKETRIGHT_BRACKETleftLESS_THANGREATER_THANNOT_EQUALLESS_EQUALGREATER_EQUALEQUAL_COMPAREleftANDORNEGATIONleftMINUSPLUSleftMULTIPLICATIONDIVISIONleftLEFT_PARENTHESISRIGHT_PARENTHESISAND ATTRIBUTES BOOL CALL CALL CHAR CLASS COLON COMMA CONST_BOOL CONST_CHAR CONST_FLOAT CONST_INT CONST_STRING DEF DIVISION DO ELSE ELSEIF EQUAL_ASSIGN EQUAL_COMPARE FLOAT FUNC GREATER_EQUAL GREATER_THAN ID IF INT LEFT_BRACKET LEFT_CURLYB LEFT_PARENTHESIS LESS_EQUAL LESS_THAN MAIN METHODS MINUS MORE MOREBOOL MULTIPLICATION NEGATION NOT_EQUAL NUMBER OR PERIOD PLUS PROGRAM READ RETURN RIGHT_BRACKET RIGHT_CURLYB RIGHT_PARENTHESIS SEMICOLON STRING STRING VAR VOID WHILE WRITE program : PROGRAM pn_start_program pn_start_func ID SEMICOLON init_dec main  main : MAIN pn_internal_scope LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLYB vars_rec pn_gen_vartable pn_start_func bloque_rec RIGHT_CURLYB pn_end_main vars_rec : var_dec vars_rec\n                    | empty  pn_internal_scope : empty  pn_start_program : empty  pn_start_func : empty  init_dec : empty \n                | dec init_dec  dec :  var_dec \n            | func_dec \n            | class_dec  class_dec : empty var : ID varArray varArray :  empty \n                | pn_array_access1 LEFT_BRACKET pn_array_access2 all_logical pn_array_access3 RIGHT_BRACKET  pn_array_access1 : empty  pn_array_access2 : empty  pn_array_access3 : empty  var_dec :  VAR tipo pn_var_type pn_value_type ID pn_current_name SEMICOLON pn_add_variable  pn_var_type : empty  pn_value_type : empty  pn_current_name : empty  pn_add_variable : empty  bloque : asignacion \n                | condicional \n                | while \n                | read \n                | write \n                | func_call SEMICOLON  asignacion : var pn_var_assign EQUAL_ASSIGN all_logical SEMICOLON  pn_var_assign : empty  pn_operator : empty  all_logical : logical_exp pn_all_logical all_logical_rec  all_logical_rec : AND pn_operator logical_exp pn_all_logical all_logical_rec \n                        | OR pn_operator logical_exp pn_all_logical all_logical_rec \n                        | empty pn_all_logical : empty  logical_exp : exp pn_logical_exp logical_exp_rec  logical_exp_rec : GREATER_THAN pn_operator exp pn_logical_exp logical_exp_rec \n                        | LESS_THAN pn_operator exp pn_logical_exp logical_exp_rec \n                        | EQUAL_COMPARE pn_operator exp pn_logical_exp logical_exp_rec \n                        | NOT_EQUAL pn_operator exp pn_logical_exp logical_exp_rec \n                        | empty pn_logical_exp : empty  exp : termino pn_exp exp_rec  pn_exp : empty  exp_rec : PLUS pn_operator termino pn_exp exp_rec \n                | MINUS pn_operator termino pn_exp exp_rec \n                | empty termino :  factor pn_termino termino_rec  termino_rec : MULTIPLICATION pn_operator factor pn_termino termino_rec \n                    | DIVISION pn_operator factor pn_termino termino_rec \n                    | empty pn_termino : empty  factor : varcte \n                | LEFT_PARENTHESIS pn_open_parenthesis all_logical  RIGHT_PARENTHESIS pn_close_parenthesis \n                | func_call  varcte : cte_int pn_add_constant \n                | cte_float pn_add_constant \n                | CONST_BOOL pn_add_constant \n                | CONST_STRING  \n                | var  cte_int : CONST_INT \n                | MINUS CONST_INT  cte_float : CONST_FLOAT \n                | MINUS CONST_FLOAT  pn_add_constant : empty  pn_open_parenthesis : empty  pn_close_parenthesis : empty  tipo : INT \n            | FLOAT \n            | BOOL \n            | STRING  return_module : tipo \n                | VOID  parametro : tipo ID parametro_rec \n                    | empty  parametro_rec : COMMA tipo ID parametro_rec \n                        | empty  pn_parametro_varTable : empty  condicional : IF LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_condicional LEFT_CURLYB bloque_rec RIGHT_CURLYB condicional_else  condicional_else : ELSE pn_condicional_else LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_condicional_final \n                        | pn_condicional_final  pn_condicional : empty  pn_condicional_else : empty  pn_condicional_final : empty  while : WHILE pn_while LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_while_jump while_loop while_loop : LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_while_jump1  pn_while : empty  pn_while_jump : empty  pn_while_jump1 : empty  read : READ LEFT_PARENTHESIS var RIGHT_PARENTHESIS SEMICOLON  write : WRITE LEFT_PARENTHESIS write_rec RIGHT_PARENTHESIS SEMICOLON  write_rec : all_logical pn_write_quad write_rec1  write_rec1 : MORE all_logical pn_write_quad write_rec1 \n                    | empty  pn_write_quad : empty  func_call : CALL ID pn_verify_func LEFT_PARENTHESIS pn_param_counter pn_open_parenthesis func_call_rec pn_close_parenthesis RIGHT_PARENTHESIS  pn_verify_func : empty  pn_param_counter : empty  func_call_rec : all_logical pn_param_match func_call_rec1  func_call_rec1 : COMMA all_logical pn_param_match func_call_rec\n                        | empty  pn_param_match : empty  func_dec : FUNC return_module pn_return_type ID pn_add_func LEFT_PARENTHESIS parametro pn_add_param_vartable RIGHT_PARENTHESIS LEFT_CURLYB pn_gen_vartable pn_func_quad bloque_rec func_return RIGHT_CURLYB pn_end_func  pn_add_param_vartable : empty  pn_gen_vartable : empty  pn_func_quad : empty  pn_end_main : empty pn_end_func : empty  pn_add_func : empty  pn_return_type : empty  func_return : RETURN all_logical SEMICOLON \n                    | RETURN SEMICOLON  bloque_rec : bloque bloque_rec \n                    | empty empty :  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,17,84,100,101,],[0,-1,-118,-2,-110,]),'ID':([2,3,4,5,6,20,21,22,23,24,25,26,27,30,31,32,33,35,36,42,46,47,48,49,51,53,54,55,56,57,61,67,69,70,71,72,73,80,81,82,83,86,89,92,93,95,96,98,102,103,105,106,107,108,109,110,111,112,113,114,115,116,118,119,125,126,127,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,152,153,154,156,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,182,184,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,205,211,212,214,215,216,217,218,219,220,221,222,223,224,225,229,233,234,235,236,237,238,239,240,241,242,243,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,270,271,272,273,274,277,278,],[-118,-118,-6,7,-7,-118,-71,-72,-73,-74,-118,-75,-76,-118,-21,37,-113,39,-22,-118,-118,-118,-4,-118,60,-118,-108,-3,-20,-24,81,81,-25,-26,-27,-28,-29,94,-118,-118,99,-30,81,81,81,-14,-15,-118,81,-118,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,81,-118,81,-109,81,-69,-118,-38,-118,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-118,81,-18,-31,-34,-118,-118,-37,-39,-118,-118,-118,-118,-44,-46,-118,-118,-50,-51,-118,-118,-54,-93,-94,81,-118,-101,81,-118,81,81,-33,81,81,81,81,81,81,81,81,81,81,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-88,81,-16,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-105,-82,-84,-87,-35,-36,-40,-41,-42,-43,-48,-49,-52,-53,-118,-99,81,-89,-92,-118,81,81,-118,-83,]),'IF':([6,42,46,47,48,49,53,54,55,56,57,61,67,69,70,71,72,73,82,86,98,126,127,156,179,180,190,224,225,233,249,251,252,263,270,271,273,277,278,],[-7,-118,-118,-118,-4,-118,-118,-108,-3,-20,-24,76,76,-25,-26,-27,-28,-29,-118,-30,-118,76,-109,-31,-93,-94,76,-88,76,-118,-82,-84,-87,-118,-89,-92,76,-118,-83,]),'WHILE':([6,42,46,47,48,49,53,54,55,56,57,61,67,69,70,71,72,73,82,86,98,126,127,156,179,180,190,224,225,233,249,251,252,263,270,271,273,277,278,],[-7,-118,-118,-118,-4,-118,-118,-108,-3,-20,-24,77,77,-25,-26,-27,-28,-29,-118,-30,-118,77,-109,-31,-93,-94,77,-88,77,-118,-82,-84,-87,-118,-89,-92,77,-118,-83,]),'READ':([6,42,46,47,48,49,53,54,55,56,57,61,67,69,70,71,72,73,82,86,98,126,127,156,179,180,190,224,225,233,249,251,252,263,270,271,273,277,278,],[-7,-118,-118,-118,-4,-118,-118,-108,-3,-20,-24,78,78,-25,-26,-27,-28,-29,-118,-30,-118,78,-109,-31,-93,-94,78,-88,78,-118,-82,-84,-87,-118,-89,-92,78,-118,-83,]),'WRITE':([6,42,46,47,48,49,53,54,55,56,57,61,67,69,70,71,72,73,82,86,98,126,127,156,179,180,190,224,225,233,249,251,252,263,270,271,273,277,278,],[-7,-118,-118,-118,-4,-118,-118,-108,-3,-20,-24,79,79,-25,-26,-27,-28,-29,-118,-30,-118,79,-109,-31,-93,-94,79,-88,79,-118,-82,-84,-87,-118,-89,-92,79,-118,-83,]),'CALL':([6,42,46,47,48,49,53,54,55,56,57,61,67,69,70,71,72,73,81,82,86,89,93,95,96,98,102,103,105,106,107,108,109,110,111,112,113,114,115,116,118,119,125,126,127,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,152,153,154,156,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,182,184,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,205,211,212,214,215,216,217,218,219,220,221,222,223,224,225,229,233,234,235,236,237,238,239,240,241,242,243,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,270,271,272,273,274,277,278,],[-7,-118,-118,-118,-4,-118,-118,-108,-3,-20,-24,80,80,-25,-26,-27,-28,-29,-118,-118,-30,80,80,-14,-15,-118,80,-118,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,80,-118,80,-109,80,-69,-118,-38,-118,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-118,80,-18,-31,-34,-118,-118,-37,-39,-118,-118,-118,-118,-44,-46,-118,-118,-50,-51,-118,-118,-54,-93,-94,80,-118,-101,80,-118,80,80,-33,80,80,80,80,80,80,80,80,80,80,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-88,80,-16,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-105,-82,-84,-87,-35,-36,-40,-41,-42,-43,-48,-49,-52,-53,-118,-99,80,-89,-92,-118,80,80,-118,-83,]),'RIGHT_CURLYB':([6,42,46,47,48,49,53,54,55,56,57,61,66,67,68,69,70,71,72,73,85,86,156,179,180,187,190,210,213,224,225,232,233,244,249,251,252,263,270,271,273,275,277,278,],[-7,-118,-118,-118,-4,-118,-118,-108,-3,-20,-24,-118,84,-118,-117,-25,-26,-27,-28,-29,-116,-30,-31,-93,-94,208,-118,-115,233,-88,-118,-114,-118,263,-82,-84,-87,-118,-89,-92,-118,277,-118,-83,]),'SEMICOLON':([7,39,43,44,74,81,95,96,105,106,107,108,109,110,111,112,113,114,115,116,118,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,160,163,164,169,170,173,174,177,188,189,209,211,212,214,215,216,217,218,219,220,221,222,223,229,234,235,236,237,238,239,240,241,242,243,253,254,255,256,257,258,259,260,261,262,264,],[8,-118,49,-23,86,-118,-14,-15,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,156,-118,-38,-118,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,179,180,-34,-37,-39,-44,-46,-50,-51,-54,210,-118,232,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-16,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-35,-36,-40,-41,-42,-43,-48,-49,-52,-53,-99,]),'MAIN':([8,9,10,11,12,13,14,19,49,56,57,208,230,231,],[-118,18,-8,-118,-10,-11,-12,-9,-118,-20,-24,-118,-106,-111,]),'VAR':([8,10,11,12,13,14,42,47,49,56,57,208,230,231,],[15,-13,15,-10,-11,-12,15,15,-118,-20,-24,-118,-106,-111,]),'FUNC':([8,10,11,12,13,14,49,56,57,208,230,231,],[16,-13,16,-10,-11,-12,-118,-20,-24,-118,-106,-111,]),'INT':([15,16,45,64,],[21,21,21,21,]),'FLOAT':([15,16,45,64,],[22,22,22,22,]),'BOOL':([15,16,45,64,],[23,23,23,23,]),'STRING':([15,16,45,64,],[24,24,24,24,]),'VOID':([16,],[27,]),'LEFT_PARENTHESIS':([18,28,29,37,40,41,76,77,78,79,81,89,90,91,93,94,95,96,102,103,105,106,107,108,109,110,111,112,113,114,115,116,118,119,123,124,125,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,152,153,154,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,182,184,185,188,189,191,192,193,194,195,196,197,198,199,200,201,205,211,212,214,215,216,217,218,219,220,221,222,223,229,234,235,236,237,238,239,240,241,242,243,248,253,254,255,256,257,258,259,260,261,262,264,266,272,274,],[-118,34,-5,-118,45,-112,89,-118,92,93,-118,103,119,-90,103,-118,-14,-15,103,-118,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,103,152,-100,-118,103,-69,-118,-38,-118,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-118,103,-18,-34,-118,-118,-37,-39,-118,-118,-118,-118,-44,-46,-118,-118,-50,-51,-118,-118,-54,103,-118,-101,103,-118,103,-33,103,103,103,103,103,103,103,103,103,103,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-16,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-105,-35,-36,-40,-41,-42,-43,-48,-49,-52,-53,-99,103,-118,103,]),'RIGHT_PARENTHESIS':([34,45,50,52,58,59,60,63,65,81,95,96,99,104,105,106,107,108,109,110,111,112,113,114,115,116,118,120,121,122,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,151,157,160,163,164,169,170,173,174,177,181,183,189,204,211,212,214,215,216,217,218,219,220,221,222,223,226,227,228,229,234,235,236,237,238,239,240,241,242,243,245,246,247,248,253,254,255,256,257,258,259,260,261,262,264,265,267,276,],[38,-118,-118,-78,62,-107,-118,-77,-80,-118,-14,-15,-118,132,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,148,149,-118,-79,-118,-38,-118,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,178,-118,-98,189,-34,-37,-39,-44,-46,-50,-51,-54,-95,-97,-118,-118,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-16,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-96,264,-118,-105,-35,-36,-40,-41,-42,-43,-48,-49,-52,-53,-99,-102,-104,-103,]),'LEFT_CURLYB':([38,62,132,158,159,178,202,203,250,268,269,],[42,82,-118,190,-85,-118,225,-91,-118,273,-86,]),'RETURN':([54,67,68,69,70,71,72,73,82,85,86,98,126,127,155,156,179,180,224,233,249,251,252,263,270,271,277,278,],[-108,-118,-117,-25,-26,-27,-28,-29,-118,-116,-30,-118,-118,-109,188,-31,-93,-94,-88,-118,-82,-84,-87,-118,-89,-92,-118,-83,]),'COMMA':([60,81,95,96,99,105,106,107,108,109,110,111,112,113,114,115,116,118,133,134,135,136,137,138,139,140,141,142,143,144,145,146,160,163,164,169,170,173,174,177,189,211,212,214,215,216,217,218,219,220,221,222,223,228,229,234,235,236,237,238,239,240,241,242,243,247,248,253,254,255,256,257,258,259,260,261,262,264,],[64,-118,-14,-15,64,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,-118,-38,-118,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-34,-37,-39,-44,-46,-50,-51,-54,-118,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-16,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,266,-105,-35,-36,-40,-41,-42,-43,-48,-49,-52,-53,-99,]),'EQUAL_ASSIGN':([75,81,87,88,95,96,229,],[-118,-118,102,-32,-14,-15,-16,]),'MULTIPLICATION':([81,95,96,108,109,110,111,112,113,114,115,116,118,139,140,141,142,143,144,145,146,189,211,212,222,223,229,242,243,264,],[-118,-14,-15,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,175,-55,-59,-68,-60,-61,-65,-67,-118,-57,-70,-118,-118,-16,175,175,-99,]),'DIVISION':([81,95,96,108,109,110,111,112,113,114,115,116,118,139,140,141,142,143,144,145,146,189,211,212,222,223,229,242,243,264,],[-118,-14,-15,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,176,-55,-59,-68,-60,-61,-65,-67,-118,-57,-70,-118,-118,-16,176,176,-99,]),'PLUS':([81,95,96,107,108,109,110,111,112,113,114,115,116,118,137,138,139,140,141,142,143,144,145,146,174,177,189,211,212,220,221,222,223,229,240,241,242,243,261,262,264,],[-118,-14,-15,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,171,-47,-118,-55,-59,-68,-60,-61,-65,-67,-51,-54,-118,-57,-70,-118,-118,-118,-118,-16,171,171,-118,-118,-52,-53,-99,]),'MINUS':([81,89,93,95,96,102,103,105,106,107,108,109,110,111,112,113,114,115,116,118,119,125,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,152,153,154,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,182,184,185,188,189,191,192,193,194,195,196,197,198,199,200,201,205,211,212,214,215,216,217,218,219,220,221,222,223,229,234,235,236,237,238,239,240,241,242,243,248,253,254,255,256,257,258,259,260,261,262,264,266,272,274,],[-118,117,117,-14,-15,117,-118,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,117,-118,117,-69,-118,-38,-118,-45,172,-47,-118,-55,-59,-68,-60,-61,-65,-67,-118,117,-18,-34,-118,-118,-37,-39,-118,-118,-118,-118,-44,-46,-118,-118,-50,-51,-118,-118,-54,117,-118,-101,117,-118,117,-33,117,117,117,117,117,117,117,117,117,117,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-16,-118,-118,-118,-118,-118,-118,172,172,-118,-118,-105,-35,-36,-40,-41,-42,-43,-48,-49,-52,-53,-99,117,-118,117,]),'GREATER_THAN':([81,95,96,106,107,108,109,110,111,112,113,114,115,116,118,135,136,137,138,139,140,141,142,143,144,145,146,170,173,174,177,189,211,212,216,217,218,219,220,221,222,223,229,236,237,238,239,240,241,242,243,259,260,261,262,264,],[-118,-14,-15,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,165,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-46,-50,-51,-54,-118,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-16,165,165,165,165,-118,-118,-118,-118,-48,-49,-52,-53,-99,]),'LESS_THAN':([81,95,96,106,107,108,109,110,111,112,113,114,115,116,118,135,136,137,138,139,140,141,142,143,144,145,146,170,173,174,177,189,211,212,216,217,218,219,220,221,222,223,229,236,237,238,239,240,241,242,243,259,260,261,262,264,],[-118,-14,-15,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,166,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-46,-50,-51,-54,-118,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-16,166,166,166,166,-118,-118,-118,-118,-48,-49,-52,-53,-99,]),'EQUAL_COMPARE':([81,95,96,106,107,108,109,110,111,112,113,114,115,116,118,135,136,137,138,139,140,141,142,143,144,145,146,170,173,174,177,189,211,212,216,217,218,219,220,221,222,223,229,236,237,238,239,240,241,242,243,259,260,261,262,264,],[-118,-14,-15,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,167,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-46,-50,-51,-54,-118,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-16,167,167,167,167,-118,-118,-118,-118,-48,-49,-52,-53,-99,]),'NOT_EQUAL':([81,95,96,106,107,108,109,110,111,112,113,114,115,116,118,135,136,137,138,139,140,141,142,143,144,145,146,170,173,174,177,189,211,212,216,217,218,219,220,221,222,223,229,236,237,238,239,240,241,242,243,259,260,261,262,264,],[-118,-14,-15,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,168,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-46,-50,-51,-54,-118,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-16,168,168,168,168,-118,-118,-118,-118,-48,-49,-52,-53,-99,]),'AND':([81,95,96,105,106,107,108,109,110,111,112,113,114,115,116,118,133,134,135,136,137,138,139,140,141,142,143,144,145,146,164,169,170,173,174,177,189,211,212,214,215,216,217,218,219,220,221,222,223,229,234,235,236,237,238,239,240,241,242,243,255,256,257,258,259,260,261,262,264,],[-118,-14,-15,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,161,-38,-118,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-39,-44,-46,-50,-51,-54,-118,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-16,161,161,-118,-118,-118,-118,-118,-118,-118,-118,-40,-41,-42,-43,-48,-49,-52,-53,-99,]),'OR':([81,95,96,105,106,107,108,109,110,111,112,113,114,115,116,118,133,134,135,136,137,138,139,140,141,142,143,144,145,146,164,169,170,173,174,177,189,211,212,214,215,216,217,218,219,220,221,222,223,229,234,235,236,237,238,239,240,241,242,243,255,256,257,258,259,260,261,262,264,],[-118,-14,-15,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,162,-38,-118,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-39,-44,-46,-50,-51,-54,-118,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-16,162,162,-118,-118,-118,-118,-118,-118,-118,-118,-40,-41,-42,-43,-48,-49,-52,-53,-99,]),'MORE':([81,95,96,105,106,107,108,109,110,111,112,113,114,115,116,118,122,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,151,160,163,164,169,170,173,174,177,189,204,211,212,214,215,216,217,218,219,220,221,222,223,226,229,234,235,236,237,238,239,240,241,242,243,253,254,255,256,257,258,259,260,261,262,264,],[-118,-14,-15,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,-118,-118,-38,-118,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,182,-98,-34,-37,-39,-44,-46,-50,-51,-54,-118,-118,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,182,-16,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-35,-36,-40,-41,-42,-43,-48,-49,-52,-53,-99,]),'RIGHT_BRACKET':([81,95,96,105,106,107,108,109,110,111,112,113,114,115,116,118,133,134,135,136,137,138,139,140,141,142,143,144,145,146,160,163,164,169,170,173,174,177,186,189,206,207,211,212,214,215,216,217,218,219,220,221,222,223,229,234,235,236,237,238,239,240,241,242,243,253,254,255,256,257,258,259,260,261,262,264,],[-118,-14,-15,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,-118,-38,-118,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-34,-37,-39,-44,-46,-50,-51,-54,-118,-118,229,-19,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-16,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-35,-36,-40,-41,-42,-43,-48,-49,-52,-53,-99,]),'CONST_BOOL':([81,89,93,95,96,102,103,105,106,107,108,109,110,111,112,113,114,115,116,118,119,125,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,152,153,154,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,182,184,185,188,189,191,192,193,194,195,196,197,198,199,200,201,205,211,212,214,215,216,217,218,219,220,221,222,223,229,234,235,236,237,238,239,240,241,242,243,248,253,254,255,256,257,258,259,260,261,262,264,266,272,274,],[-118,113,113,-14,-15,113,-118,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,113,-118,113,-69,-118,-38,-118,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-118,113,-18,-34,-118,-118,-37,-39,-118,-118,-118,-118,-44,-46,-118,-118,-50,-51,-118,-118,-54,113,-118,-101,113,-118,113,-33,113,113,113,113,113,113,113,113,113,113,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-16,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-105,-35,-36,-40,-41,-42,-43,-48,-49,-52,-53,-99,113,-118,113,]),'CONST_STRING':([81,89,93,95,96,102,103,105,106,107,108,109,110,111,112,113,114,115,116,118,119,125,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,152,153,154,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,182,184,185,188,189,191,192,193,194,195,196,197,198,199,200,201,205,211,212,214,215,216,217,218,219,220,221,222,223,229,234,235,236,237,238,239,240,241,242,243,248,253,254,255,256,257,258,259,260,261,262,264,266,272,274,],[-118,114,114,-14,-15,114,-118,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,-66,114,-118,114,-69,-118,-38,-118,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-118,114,-18,-34,-118,-118,-37,-39,-118,-118,-118,-118,-44,-46,-118,-118,-50,-51,-118,-118,-54,114,-118,-101,114,-118,114,-33,114,114,114,114,114,114,114,114,114,114,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-16,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-105,-35,-36,-40,-41,-42,-43,-48,-49,-52,-53,-99,114,-118,114,]),'CONST_INT':([81,89,93,95,96,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,152,153,154,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,182,184,185,188,189,191,192,193,194,195,196,197,198,199,200,201,205,211,212,214,215,216,217,218,219,220,221,222,223,229,234,235,236,237,238,239,240,241,242,243,248,253,254,255,256,257,258,259,260,261,262,264,266,272,274,],[-118,116,116,-14,-15,116,-118,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,145,-66,116,-118,116,-69,-118,-38,-118,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-118,116,-18,-34,-118,-118,-37,-39,-118,-118,-118,-118,-44,-46,-118,-118,-50,-51,-118,-118,-54,116,-118,-101,116,-118,116,-33,116,116,116,116,116,116,116,116,116,116,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-16,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-105,-35,-36,-40,-41,-42,-43,-48,-49,-52,-53,-99,116,-118,116,]),'CONST_FLOAT':([81,89,93,95,96,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,152,153,154,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,182,184,185,188,189,191,192,193,194,195,196,197,198,199,200,201,205,211,212,214,215,216,217,218,219,220,221,222,223,229,234,235,236,237,238,239,240,241,242,243,248,253,254,255,256,257,258,259,260,261,262,264,266,272,274,],[-118,118,118,-14,-15,118,-118,-118,-118,-118,-118,-56,-58,-118,-118,-118,-62,-63,-64,146,-66,118,-118,118,-69,-118,-38,-118,-45,-118,-47,-118,-55,-59,-68,-60,-61,-65,-67,-118,118,-18,-34,-118,-118,-37,-39,-118,-118,-118,-118,-44,-46,-118,-118,-50,-51,-118,-118,-54,118,-118,-101,118,-118,118,-33,118,118,118,118,118,118,118,118,118,118,-57,-70,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-16,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-105,-35,-36,-40,-41,-42,-43,-48,-49,-52,-53,-99,118,-118,118,]),'LEFT_BRACKET':([81,96,97,],[-118,-17,125,]),'ELSE':([233,],[250,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'pn_start_program':([2,],[3,]),'empty':([2,3,8,11,18,20,25,30,37,39,42,45,46,47,49,50,53,60,61,67,75,77,81,82,84,94,98,99,103,105,106,107,108,111,112,113,122,125,126,132,133,135,137,139,150,152,161,162,165,166,167,168,171,172,175,176,178,184,186,189,190,204,208,214,215,216,217,218,219,220,221,222,223,225,226,227,228,233,234,235,236,237,238,239,240,241,242,243,247,250,263,272,273,277,],[4,6,10,10,29,31,33,36,41,44,48,52,54,48,57,59,6,65,68,68,88,91,96,54,101,124,127,65,131,134,136,138,140,142,142,142,151,154,68,159,163,169,173,177,183,185,192,192,192,192,192,192,192,192,192,192,203,131,207,212,68,151,231,134,134,136,136,136,136,138,138,140,140,68,183,212,248,252,163,163,169,169,169,169,173,173,177,177,267,269,271,248,68,252,]),'pn_start_func':([3,53,],[5,61,]),'init_dec':([8,11,],[9,19,]),'dec':([8,11,],[11,11,]),'var_dec':([8,11,42,47,],[12,12,47,47,]),'func_dec':([8,11,],[13,13,]),'class_dec':([8,11,],[14,14,]),'main':([9,],[17,]),'tipo':([15,16,45,64,],[20,26,51,83,]),'return_module':([16,],[25,]),'pn_internal_scope':([18,],[28,]),'pn_var_type':([20,],[30,]),'pn_return_type':([25,],[32,]),'pn_value_type':([30,],[35,]),'pn_add_func':([37,],[40,]),'pn_current_name':([39,],[43,]),'vars_rec':([42,47,],[46,55,]),'parametro':([45,],[50,]),'pn_gen_vartable':([46,82,],[53,98,]),'pn_add_variable':([49,],[56,]),'pn_add_param_vartable':([50,],[58,]),'parametro_rec':([60,99,],[63,128,]),'bloque_rec':([61,67,126,190,225,273,],[66,85,155,213,244,275,]),'bloque':([61,67,126,190,225,273,],[67,67,67,67,67,67,]),'asignacion':([61,67,126,190,225,273,],[69,69,69,69,69,69,]),'condicional':([61,67,126,190,225,273,],[70,70,70,70,70,70,]),'while':([61,67,126,190,225,273,],[71,71,71,71,71,71,]),'read':([61,67,126,190,225,273,],[72,72,72,72,72,72,]),'write':([61,67,126,190,225,273,],[73,73,73,73,73,73,]),'func_call':([61,67,89,93,102,119,126,130,153,182,188,190,191,193,194,195,196,197,198,199,200,201,205,225,266,273,274,],[74,74,110,110,110,110,74,110,110,110,110,74,110,110,110,110,110,110,110,110,110,110,110,74,110,74,110,]),'var':([61,67,89,92,93,102,119,126,130,153,182,188,190,191,193,194,195,196,197,198,199,200,201,205,225,266,273,274,],[75,75,115,120,115,115,115,75,115,115,115,115,75,115,115,115,115,115,115,115,115,115,115,115,75,115,75,115,]),'pn_var_assign':([75,],[87,]),'pn_while':([77,],[90,]),'varArray':([81,],[95,]),'pn_array_access1':([81,],[97,]),'pn_end_main':([84,],[100,]),'all_logical':([89,93,102,119,130,153,182,188,205,266,274,],[104,122,129,147,157,186,204,209,228,272,228,]),'logical_exp':([89,93,102,119,130,153,182,188,191,193,205,266,274,],[105,105,105,105,105,105,105,105,214,215,105,105,105,]),'exp':([89,93,102,119,130,153,182,188,191,193,194,195,196,197,205,266,274,],[106,106,106,106,106,106,106,106,106,106,216,217,218,219,106,106,106,]),'termino':([89,93,102,119,130,153,182,188,191,193,194,195,196,197,198,199,205,266,274,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,220,221,107,107,107,]),'factor':([89,93,102,119,130,153,182,188,191,193,194,195,196,197,198,199,200,201,205,266,274,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,222,223,108,108,108,]),'varcte':([89,93,102,119,130,153,182,188,191,193,194,195,196,197,198,199,200,201,205,266,274,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'cte_int':([89,93,102,119,130,153,182,188,191,193,194,195,196,197,198,199,200,201,205,266,274,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'cte_float':([89,93,102,119,130,153,182,188,191,193,194,195,196,197,198,199,200,201,205,266,274,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'write_rec':([93,],[121,]),'pn_verify_func':([94,],[123,]),'pn_func_quad':([98,],[126,]),'pn_open_parenthesis':([103,184,],[130,205,]),'pn_all_logical':([105,214,215,],[133,234,235,]),'pn_logical_exp':([106,216,217,218,219,],[135,236,237,238,239,]),'pn_exp':([107,220,221,],[137,240,241,]),'pn_termino':([108,222,223,],[139,242,243,]),'pn_add_constant':([111,112,113,],[141,143,144,]),'pn_write_quad':([122,204,],[150,226,]),'pn_array_access2':([125,],[153,]),'pn_condicional':([132,],[158,]),'all_logical_rec':([133,234,235,],[160,253,254,]),'logical_exp_rec':([135,236,237,238,239,],[164,255,256,257,258,]),'exp_rec':([137,240,241,],[170,259,260,]),'termino_rec':([139,242,243,],[174,261,262,]),'write_rec1':([150,226,],[181,245,]),'pn_param_counter':([152,],[184,]),'func_return':([155,],[187,]),'pn_operator':([161,162,165,166,167,168,171,172,175,176,],[191,193,194,195,196,197,198,199,200,201,]),'pn_while_jump':([178,],[202,]),'pn_array_access3':([186,],[206,]),'pn_close_parenthesis':([189,227,],[211,246,]),'while_loop':([202,],[224,]),'func_call_rec':([205,274,],[227,276,]),'pn_end_func':([208,],[230,]),'pn_param_match':([228,272,],[247,274,]),'condicional_else':([233,],[249,]),'pn_condicional_final':([233,277,],[251,278,]),'func_call_rec1':([247,],[265,]),'pn_condicional_else':([250,],[268,]),'pn_while_jump1':([263,],[270,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM pn_start_program pn_start_func ID SEMICOLON init_dec main','program',7,'p_program','AnalizadorSintactico.py',38),
  ('main -> MAIN pn_internal_scope LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLYB vars_rec pn_gen_vartable pn_start_func bloque_rec RIGHT_CURLYB pn_end_main','main',11,'p_main','AnalizadorSintactico.py',45),
  ('vars_rec -> var_dec vars_rec','vars_rec',2,'p_vars_rec','AnalizadorSintactico.py',48),
  ('vars_rec -> empty','vars_rec',1,'p_vars_rec','AnalizadorSintactico.py',49),
  ('pn_internal_scope -> empty','pn_internal_scope',1,'p_pn_internal_scope','AnalizadorSintactico.py',52),
  ('pn_start_program -> empty','pn_start_program',1,'p_pn_start_program','AnalizadorSintactico.py',55),
  ('pn_start_func -> empty','pn_start_func',1,'p_pn_start_func','AnalizadorSintactico.py',58),
  ('init_dec -> empty','init_dec',1,'p_init_dec','AnalizadorSintactico.py',61),
  ('init_dec -> dec init_dec','init_dec',2,'p_init_dec','AnalizadorSintactico.py',62),
  ('dec -> var_dec','dec',1,'p_dec','AnalizadorSintactico.py',65),
  ('dec -> func_dec','dec',1,'p_dec','AnalizadorSintactico.py',66),
  ('dec -> class_dec','dec',1,'p_dec','AnalizadorSintactico.py',67),
  ('class_dec -> empty','class_dec',1,'p_class_dec','AnalizadorSintactico.py',70),
  ('var -> ID varArray','var',2,'p_var','AnalizadorSintactico.py',73),
  ('varArray -> empty','varArray',1,'p_varArray','AnalizadorSintactico.py',78),
  ('varArray -> pn_array_access1 LEFT_BRACKET pn_array_access2 all_logical pn_array_access3 RIGHT_BRACKET','varArray',6,'p_varArray','AnalizadorSintactico.py',79),
  ('pn_array_access1 -> empty','pn_array_access1',1,'p_pn_array_access1','AnalizadorSintactico.py',82),
  ('pn_array_access2 -> empty','pn_array_access2',1,'p_pn_array_access2','AnalizadorSintactico.py',85),
  ('pn_array_access3 -> empty','pn_array_access3',1,'p_pn_array_access3','AnalizadorSintactico.py',88),
  ('var_dec -> VAR tipo pn_var_type pn_value_type ID pn_current_name SEMICOLON pn_add_variable','var_dec',8,'p_var_dec','AnalizadorSintactico.py',91),
  ('pn_var_type -> empty','pn_var_type',1,'p_pn_var_type','AnalizadorSintactico.py',96),
  ('pn_value_type -> empty','pn_value_type',1,'p_pn_value_type','AnalizadorSintactico.py',99),
  ('pn_current_name -> empty','pn_current_name',1,'p_pn_current_name','AnalizadorSintactico.py',102),
  ('pn_add_variable -> empty','pn_add_variable',1,'p_pn_add_variable','AnalizadorSintactico.py',105),
  ('bloque -> asignacion','bloque',1,'p_bloque','AnalizadorSintactico.py',108),
  ('bloque -> condicional','bloque',1,'p_bloque','AnalizadorSintactico.py',109),
  ('bloque -> while','bloque',1,'p_bloque','AnalizadorSintactico.py',110),
  ('bloque -> read','bloque',1,'p_bloque','AnalizadorSintactico.py',111),
  ('bloque -> write','bloque',1,'p_bloque','AnalizadorSintactico.py',112),
  ('bloque -> func_call SEMICOLON','bloque',2,'p_bloque','AnalizadorSintactico.py',113),
  ('asignacion -> var pn_var_assign EQUAL_ASSIGN all_logical SEMICOLON','asignacion',5,'p_asignacion','AnalizadorSintactico.py',116),
  ('pn_var_assign -> empty','pn_var_assign',1,'p_pn_var_asignacion','AnalizadorSintactico.py',138),
  ('pn_operator -> empty','pn_operator',1,'p_pn_operator','AnalizadorSintactico.py',141),
  ('all_logical -> logical_exp pn_all_logical all_logical_rec','all_logical',3,'p_all_logical','AnalizadorSintactico.py',144),
  ('all_logical_rec -> AND pn_operator logical_exp pn_all_logical all_logical_rec','all_logical_rec',5,'p_all_logical_rec','AnalizadorSintactico.py',147),
  ('all_logical_rec -> OR pn_operator logical_exp pn_all_logical all_logical_rec','all_logical_rec',5,'p_all_logical_rec','AnalizadorSintactico.py',148),
  ('all_logical_rec -> empty','all_logical_rec',1,'p_all_logical_rec','AnalizadorSintactico.py',149),
  ('pn_all_logical -> empty','pn_all_logical',1,'p_pn_all_logical','AnalizadorSintactico.py',152),
  ('logical_exp -> exp pn_logical_exp logical_exp_rec','logical_exp',3,'p_logical_exp','AnalizadorSintactico.py',155),
  ('logical_exp_rec -> GREATER_THAN pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',158),
  ('logical_exp_rec -> LESS_THAN pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',159),
  ('logical_exp_rec -> EQUAL_COMPARE pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',160),
  ('logical_exp_rec -> NOT_EQUAL pn_operator exp pn_logical_exp logical_exp_rec','logical_exp_rec',5,'p_logical_exp_rec','AnalizadorSintactico.py',161),
  ('logical_exp_rec -> empty','logical_exp_rec',1,'p_logical_exp_rec','AnalizadorSintactico.py',162),
  ('pn_logical_exp -> empty','pn_logical_exp',1,'p_pn_logical_exp','AnalizadorSintactico.py',165),
  ('exp -> termino pn_exp exp_rec','exp',3,'p_exp','AnalizadorSintactico.py',168),
  ('pn_exp -> empty','pn_exp',1,'p_pn_exp','AnalizadorSintactico.py',171),
  ('exp_rec -> PLUS pn_operator termino pn_exp exp_rec','exp_rec',5,'p_exp_rec','AnalizadorSintactico.py',174),
  ('exp_rec -> MINUS pn_operator termino pn_exp exp_rec','exp_rec',5,'p_exp_rec','AnalizadorSintactico.py',175),
  ('exp_rec -> empty','exp_rec',1,'p_exp_rec','AnalizadorSintactico.py',176),
  ('termino -> factor pn_termino termino_rec','termino',3,'p_termino','AnalizadorSintactico.py',179),
  ('termino_rec -> MULTIPLICATION pn_operator factor pn_termino termino_rec','termino_rec',5,'p_termino_rec','AnalizadorSintactico.py',182),
  ('termino_rec -> DIVISION pn_operator factor pn_termino termino_rec','termino_rec',5,'p_termino_rec','AnalizadorSintactico.py',183),
  ('termino_rec -> empty','termino_rec',1,'p_termino_rec','AnalizadorSintactico.py',184),
  ('pn_termino -> empty','pn_termino',1,'p_pn_termino','AnalizadorSintactico.py',187),
  ('factor -> varcte','factor',1,'p_factor','AnalizadorSintactico.py',190),
  ('factor -> LEFT_PARENTHESIS pn_open_parenthesis all_logical RIGHT_PARENTHESIS pn_close_parenthesis','factor',5,'p_factor','AnalizadorSintactico.py',191),
  ('factor -> func_call','factor',1,'p_factor','AnalizadorSintactico.py',192),
  ('varcte -> cte_int pn_add_constant','varcte',2,'p_varcte','AnalizadorSintactico.py',195),
  ('varcte -> cte_float pn_add_constant','varcte',2,'p_varcte','AnalizadorSintactico.py',196),
  ('varcte -> CONST_BOOL pn_add_constant','varcte',2,'p_varcte','AnalizadorSintactico.py',197),
  ('varcte -> CONST_STRING','varcte',1,'p_varcte','AnalizadorSintactico.py',198),
  ('varcte -> var','varcte',1,'p_varcte','AnalizadorSintactico.py',199),
  ('cte_int -> CONST_INT','cte_int',1,'p_cte_int','AnalizadorSintactico.py',207),
  ('cte_int -> MINUS CONST_INT','cte_int',2,'p_cte_int','AnalizadorSintactico.py',208),
  ('cte_float -> CONST_FLOAT','cte_float',1,'p_cte_float','AnalizadorSintactico.py',215),
  ('cte_float -> MINUS CONST_FLOAT','cte_float',2,'p_cte_float','AnalizadorSintactico.py',216),
  ('pn_add_constant -> empty','pn_add_constant',1,'p_pn_add_constant','AnalizadorSintactico.py',223),
  ('pn_open_parenthesis -> empty','pn_open_parenthesis',1,'p_pn_open_parenthesis','AnalizadorSintactico.py',235),
  ('pn_close_parenthesis -> empty','pn_close_parenthesis',1,'p_pn_close_parenthesis','AnalizadorSintactico.py',238),
  ('tipo -> INT','tipo',1,'p_tipo','AnalizadorSintactico.py',241),
  ('tipo -> FLOAT','tipo',1,'p_tipo','AnalizadorSintactico.py',242),
  ('tipo -> BOOL','tipo',1,'p_tipo','AnalizadorSintactico.py',243),
  ('tipo -> STRING','tipo',1,'p_tipo','AnalizadorSintactico.py',244),
  ('return_module -> tipo','return_module',1,'p_return_module','AnalizadorSintactico.py',248),
  ('return_module -> VOID','return_module',1,'p_return_module','AnalizadorSintactico.py',249),
  ('parametro -> tipo ID parametro_rec','parametro',3,'p_parametro','AnalizadorSintactico.py',253),
  ('parametro -> empty','parametro',1,'p_parametro','AnalizadorSintactico.py',254),
  ('parametro_rec -> COMMA tipo ID parametro_rec','parametro_rec',4,'p_parametro_rec','AnalizadorSintactico.py',257),
  ('parametro_rec -> empty','parametro_rec',1,'p_parametro_rec','AnalizadorSintactico.py',258),
  ('pn_parametro_varTable -> empty','pn_parametro_varTable',1,'p_pn_parametro_varTable','AnalizadorSintactico.py',261),
  ('condicional -> IF LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_condicional LEFT_CURLYB bloque_rec RIGHT_CURLYB condicional_else','condicional',9,'p_condicional','AnalizadorSintactico.py',264),
  ('condicional_else -> ELSE pn_condicional_else LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_condicional_final','condicional_else',6,'p_condicional_else','AnalizadorSintactico.py',267),
  ('condicional_else -> pn_condicional_final','condicional_else',1,'p_condicional_else','AnalizadorSintactico.py',268),
  ('pn_condicional -> empty','pn_condicional',1,'p_pn_condicional','AnalizadorSintactico.py',271),
  ('pn_condicional_else -> empty','pn_condicional_else',1,'p_pn_condicional_else','AnalizadorSintactico.py',274),
  ('pn_condicional_final -> empty','pn_condicional_final',1,'p_pn_condicional_final','AnalizadorSintactico.py',277),
  ('while -> WHILE pn_while LEFT_PARENTHESIS all_logical RIGHT_PARENTHESIS pn_while_jump while_loop','while',7,'p_while','AnalizadorSintactico.py',280),
  ('while_loop -> LEFT_CURLYB bloque_rec RIGHT_CURLYB pn_while_jump1','while_loop',4,'p_while_loop','AnalizadorSintactico.py',283),
  ('pn_while -> empty','pn_while',1,'p_pn_while','AnalizadorSintactico.py',286),
  ('pn_while_jump -> empty','pn_while_jump',1,'p_pn_while_jump','AnalizadorSintactico.py',289),
  ('pn_while_jump1 -> empty','pn_while_jump1',1,'p_pn_while_jump1','AnalizadorSintactico.py',292),
  ('read -> READ LEFT_PARENTHESIS var RIGHT_PARENTHESIS SEMICOLON','read',5,'p_read','AnalizadorSintactico.py',295),
  ('write -> WRITE LEFT_PARENTHESIS write_rec RIGHT_PARENTHESIS SEMICOLON','write',5,'p_write','AnalizadorSintactico.py',298),
  ('write_rec -> all_logical pn_write_quad write_rec1','write_rec',3,'p_write_rec','AnalizadorSintactico.py',301),
  ('write_rec1 -> MORE all_logical pn_write_quad write_rec1','write_rec1',4,'p_write_rec1','AnalizadorSintactico.py',304),
  ('write_rec1 -> empty','write_rec1',1,'p_write_rec1','AnalizadorSintactico.py',305),
  ('pn_write_quad -> empty','pn_write_quad',1,'p_pn_write_quad','AnalizadorSintactico.py',308),
  ('func_call -> CALL ID pn_verify_func LEFT_PARENTHESIS pn_param_counter pn_open_parenthesis func_call_rec pn_close_parenthesis RIGHT_PARENTHESIS','func_call',9,'p_func_call','AnalizadorSintactico.py',311),
  ('pn_verify_func -> empty','pn_verify_func',1,'p_pn_verify_func','AnalizadorSintactico.py',326),
  ('pn_param_counter -> empty','pn_param_counter',1,'p_pn_param_counter','AnalizadorSintactico.py',329),
  ('func_call_rec -> all_logical pn_param_match func_call_rec1','func_call_rec',3,'p_func_call_rec','AnalizadorSintactico.py',332),
  ('func_call_rec1 -> COMMA all_logical pn_param_match func_call_rec','func_call_rec1',4,'p_func_call_rec1','AnalizadorSintactico.py',335),
  ('func_call_rec1 -> empty','func_call_rec1',1,'p_func_call_rec1','AnalizadorSintactico.py',336),
  ('pn_param_match -> empty','pn_param_match',1,'p_pn_param_match','AnalizadorSintactico.py',339),
  ('func_dec -> FUNC return_module pn_return_type ID pn_add_func LEFT_PARENTHESIS parametro pn_add_param_vartable RIGHT_PARENTHESIS LEFT_CURLYB pn_gen_vartable pn_func_quad bloque_rec func_return RIGHT_CURLYB pn_end_func','func_dec',16,'p_func_dec','AnalizadorSintactico.py',342),
  ('pn_add_param_vartable -> empty','pn_add_param_vartable',1,'p_pn_add_param_vartable','AnalizadorSintactico.py',347),
  ('pn_gen_vartable -> empty','pn_gen_vartable',1,'p_pn_gen_vartable','AnalizadorSintactico.py',350),
  ('pn_func_quad -> empty','pn_func_quad',1,'p_pn_func_quad','AnalizadorSintactico.py',353),
  ('pn_end_main -> empty','pn_end_main',1,'p_pn_end_main','AnalizadorSintactico.py',356),
  ('pn_end_func -> empty','pn_end_func',1,'p_pn_end_func','AnalizadorSintactico.py',359),
  ('pn_add_func -> empty','pn_add_func',1,'p_pn_add_func','AnalizadorSintactico.py',362),
  ('pn_return_type -> empty','pn_return_type',1,'p_pn_return_type','AnalizadorSintactico.py',365),
  ('func_return -> RETURN all_logical SEMICOLON','func_return',3,'p_func_return','AnalizadorSintactico.py',368),
  ('func_return -> RETURN SEMICOLON','func_return',2,'p_func_return','AnalizadorSintactico.py',369),
  ('bloque_rec -> bloque bloque_rec','bloque_rec',2,'p_bloque_rec','AnalizadorSintactico.py',372),
  ('bloque_rec -> empty','bloque_rec',1,'p_bloque_rec','AnalizadorSintactico.py',373),
  ('empty -> <empty>','empty',0,'p_empty','AnalizadorSintactico.py',377),
]
